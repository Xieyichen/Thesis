[{"abstract": "Zero-shot translation, translating between language pairs on which a Neural Machine Translation (NMT) system has never been trained, is an emergent property when training the system in multilingual settings. However, naive training for zero-shot NMT easily fails, and is sensitive to hyper-parameter setting. The performance typically lags far behind the more conventional pivot-based approach which translates twice using a third language as a pivot. In this work, we address the degeneracy problem due to capturing spurious correlations by quantitatively analyzing the mutual information between language IDs of the source and decoded sentences. Inspired by this analysis, we propose to use two simple but effective approaches: (1) decoder pre-training; (2) back-translation. These methods show significant improvement (4 22 BLEU points) over the vanilla zero-shot translation on three challenging multilingual datasets, and achieve similar or better results than the pivot-based approach.", "human_title": "Improved Zero-shot Neural Machine Translation via Ignoring Spurious Correlations", "sys_gen": {"bart_cnn": "Zero-Shot Neural Machine Translation as a Pivot-Based Degeneration of Spurious Correlation between Source and Target Decoding", "bart_xsum": "Pre-training and Back-translation for Zero-Shot Neural Machine Translation in Multilingual Settings", "t5_small": "Null-Shot Translation with Decoder Pre-training and Back-Translation", "gpt2": " Neural Machine Translation with Arbitrary Correlations", "pegasus_xsum": "Decoupling the Source Language and the Target Language for Zero-Shot Neural Machine Translation"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.2, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 5.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 4.0, "t5_small_bws": -0.8, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 4.0, "gpt2_bws": -0.8, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.4}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -4.487, "bart_base_bertscore": 0.894, "bart_base_moverscore": 0.639, "bart_cnn_bartscore": -4.292, "bart_cnn_bertscore": 0.897, "bart_cnn_moverscore": 0.611, "bart_xsum_bartscore": -4.465, "bart_xsum_bertscore": 0.892, "bart_xsum_moverscore": 0.628, "t5_small_bartscore": -5.426, "t5_small_bertscore": 0.868, "t5_small_moverscore": 0.586, "gpt2_bartscore": -4.411, "gpt2_bertscore": 0.893, "gpt2_moverscore": 0.618, "pegasus_xsum_bartscore": -3.797, "pegasus_xsum_bertscore": 0.903, "pegasus_xsum_moverscore": 0.645}}, {"abstract": "Biomedical named entities often play important roles in many biomedical text mining tools. However, due to the incompleteness of provided synonyms and numerous variations in their surface forms, normalization of biomedical entities is very challenging. In this paper, we focus on learning representations of biomedical entities solely based on the synonyms of entities. To learn from the incomplete synonyms, we use a model-based candidate selection and maximize the marginal likelihood of the synonyms present in top candidates. Our model-based candidates are iteratively updated to contain more difficult negative samples as our model evolves. In this way, we avoid the explicit pre-selection of negative samples from more than 400K candidates. On four biomedical entity normalization datasets having three different entity types (disease, chemical, adverse reaction), our model BioSyn consistently outperforms previous state-of-the-art models almost reaching the upper bound on each dataset.", "human_title": "Biomedical Entity Representations with Synonym Marginalization", "sys_gen": {"bart_base": "Modeling Biomedical Named Entity Normalization with Incomplete Synonyms", "bart_xsum": "Biomedical Entity Normalization based on the Synonym Selection of Entities", "t5_small": "Learning Representations of Biomedical Entities based on Synonyms", "gpt2": " Learning Representations of Biomedical Entities Based on Synonyms", "pegasus_xsum": "Learning Representations of Biomedical Named Entities from Incomplete Synonyms"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 2.0, "human_title_bws": 0.2, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.2, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -0.4, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.4}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -4.696, "bart_base_bertscore": 0.913, "bart_base_moverscore": 0.633, "bart_cnn_bartscore": -5.092, "bart_cnn_bertscore": 0.896, "bart_cnn_moverscore": 0.571, "bart_xsum_bartscore": -4.006, "bart_xsum_bertscore": 0.922, "bart_xsum_moverscore": 0.613, "t5_small_bartscore": -3.631, "t5_small_bertscore": 0.92, "t5_small_moverscore": 0.63, "gpt2_bartscore": -3.702, "gpt2_bertscore": 0.912, "gpt2_moverscore": 0.621, "pegasus_xsum_bartscore": -4.689, "pegasus_xsum_bertscore": 0.904, "pegasus_xsum_moverscore": 0.615}}, {"abstract": "By describing the features and abstractions of our world, language is a crucial tool for human learning and a promising source of supervision for machine learning models. We use language to improve few-shot visual classification in the underexplored scenario where natural language task descriptions are available during training, but unavailable for novel tasks at test time. Existing models for this setting sample new descriptions at test time and use those to classify images. Instead, we propose language-shaped learning (LSL), an end-to-end model that regularizes visual representations to predict language. LSL is conceptually simpler, more data efficient, and outperforms baselines in two challenging few-shot domains.", "human_title": "Shaping Visual Representations with Language for Few-Shot Classification", "sys_gen": {"bart_base": "Language-shaped Learning for Few-Shot Visual Classification", "bart_cnn": "Language-Shared Few-shot Visual Classification with End-to-End Modeling of Natural Language Descriptors and Abstract", "bart_xsum": "Language-Shaped Learning for Few-Shot Visual Classification", "t5_small": "Language-shaped Learning for Few-Shot Visual Classification", "pegasus_xsum": "Language-Shaped Learning for Few-Shot Visual Classification"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 2.0, "human_title_bws": 0.2, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.4, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 4.0, "bart_cnn_bws": -0.6, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.6, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.2, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -0.4}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -5.248, "bart_base_bertscore": 0.922, "bart_base_moverscore": 0.682, "bart_cnn_bartscore": -4.712, "bart_cnn_bertscore": 0.881, "bart_cnn_moverscore": 0.587, "bart_xsum_bartscore": -4.183, "bart_xsum_bertscore": 0.94, "bart_xsum_moverscore": 0.683, "t5_small_bartscore": -5.926, "t5_small_bertscore": 0.894, "t5_small_moverscore": 0.62, "gpt2_bartscore": -5.018, "gpt2_bertscore": 0.914, "gpt2_moverscore": 0.648, "pegasus_xsum_bartscore": -4.687, "pegasus_xsum_bertscore": 0.929, "pegasus_xsum_moverscore": 0.683}}, {"abstract": "The paper presents an approach to ellipsis resolution in a framework of scope underspecification (Underspecified Discourse Representation Theory). It is argued that the approach improves on previous proposals to integrate ellipsis resolution and scope underspecification (Crouch, 1995; Egg et al., 2001) in that application processes like anaphora resolution do not require full disambiguation but can work directly on the underspecified representation. Furthermore it is shown that the approach presented can cope with the examples discussed by Dalrymple et al. (1991) as well as a problem noted recently by Erk and Koller (2001).", "human_title": "Ellipsis Resolution with Underspecified Scope", "sys_gen": {"bart_base": "E ellipsis resolution and scope underspecification in Underspecified Discourse Representations", "bart_cnn": "Ellipsis Resolution in Underspecified Discourse Representation Theory: An Approach to Ellipsis and Scope Und", "t5_small": "A Framework for ellipsis resolution in scope underspecification", "gpt2": " Anaphora Resolution and Scope Underspecification", "pegasus_xsum": "ellipsis Resolution in an Underspecified Discourse Representation"}, "human_eval": {"human_title_selected_best": 4.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.6, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 4.0, "bart_base_bws": -0.8, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 4.0, "bart_cnn_bws": -0.6, "t5_small_selected_best": 4.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.8, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.2, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.2}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -4.792, "bart_base_bertscore": 0.904, "bart_base_moverscore": 0.61, "bart_cnn_bartscore": -4.33, "bart_cnn_bertscore": 0.89, "bart_cnn_moverscore": 0.562, "bart_xsum_bartscore": -3.153, "bart_xsum_bertscore": 0.944, "bart_xsum_moverscore": 0.649, "t5_small_bartscore": -4.621, "t5_small_bertscore": 0.914, "t5_small_moverscore": 0.645, "gpt2_bartscore": -4.908, "gpt2_bertscore": 0.906, "gpt2_moverscore": 0.621, "pegasus_xsum_bartscore": -3.817, "pegasus_xsum_bertscore": 0.933, "pegasus_xsum_moverscore": 0.744}}, {"abstract": "A number of recent publications have made use of the incremental output of stochastic parsers to derive measures of high utility for psycholinguistic modeling, following the work of Hale (2001; 2003; 2006). In this paper, we present novel methods for calculating separate lexical and syntactic surprisal measures from a single incremental parser using a lexicalized PCFG. We also present an approximation to entropy measures that would otherwise be intractable to calculate for a grammar of that size. Empirical results demonstrate the utility of our methods in predicting human reading times.", "human_title": "Deriving lexical and syntactic expectation-based measures for psycholinguistic modeling via incremental top-down parsing", "sys_gen": {"bart_cnn": "Incremental Measures of Psycholinguistic Modeling Using an Incremental Parser and Entropy Measures from a Single Incremental", "bart_xsum": "Incremental Measures of High Utility for Psycholinguistic Modeling and Reading Times", "t5_small": "Calculating Separate Lexical and Syntactic Surprisal Measures from a Single Incremental Parser", "gpt2": " Incremental Parsing with Lexicalized PCFGs", "pegasus_xsum": "Lexical and Syntactic Surprisal Measures from an Incremental PCFG"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 2.0, "human_title_bws": 0.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.2, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.6, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -0.4}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -4.612, "bart_base_bertscore": 0.878, "bart_base_moverscore": 0.58, "bart_cnn_bartscore": -4.324, "bart_cnn_bertscore": 0.883, "bart_cnn_moverscore": 0.641, "bart_xsum_bartscore": -3.743, "bart_xsum_bertscore": 0.896, "bart_xsum_moverscore": 0.598, "t5_small_bartscore": -4.277, "t5_small_bertscore": 0.865, "t5_small_moverscore": 0.61, "gpt2_bartscore": -5.45, "gpt2_bertscore": 0.844, "gpt2_moverscore": 0.57, "pegasus_xsum_bartscore": -5.054, "pegasus_xsum_bertscore": 0.849, "pegasus_xsum_moverscore": 0.608}}, {"abstract": "We present a family of priors over probabilistic grammar weights, called the shared logistic normal distribution. This family extends the partitioned logistic normal distribution, enabling factored covariance between the probabilities of different derivation events in the probabilistic grammar, providing a new way to encode prior knowledge about an unknown grammar. We describe a variational EM algorithm for learning a probabilistic grammar based on this family of priors. We then experiment with unsupervised dependency grammar induction and show significant improvements using our model for both monolingual learning and bilingual learning with a non-parallel, multilingual corpus.", "human_title": "Shared Logistic Normal Distributions for Soft Parameter Tying in Unsupervised Grammar Induction", "sys_gen": {"bart_base": "Learning Probabilistic Grammar Priors with Shared Logistic Normal Distributions", "bart_cnn": "Unsupervised Dependency Grammar Induction with Shared Logistic Normal Distributions and Probabilistic Priors over Probabil", "bart_xsum": "A Shared Logistic Normal Distribution for Learning Probabilistic Grammar", "t5_small": "Partitioned Logistic Normal Distribution for Probabilistic Grammars", "pegasus_xsum": "A Shared Logistic Normal Distribution for Learning Probabilistic Grammars"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.2, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 2.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -0.4, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.2, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 4.0, "t5_small_bws": -0.8, "pegasus_xsum_selected_best": 4.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.8}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -2.702, "bart_base_bertscore": 0.893, "bart_base_moverscore": 0.628, "bart_cnn_bartscore": -3.798, "bart_cnn_bertscore": 0.9, "bart_cnn_moverscore": 0.636, "bart_xsum_bartscore": -3.148, "bart_xsum_bertscore": 0.917, "bart_xsum_moverscore": 0.659, "t5_small_bartscore": -3.983, "t5_small_bertscore": 0.881, "t5_small_moverscore": 0.629, "gpt2_bartscore": -3.384, "gpt2_bertscore": 0.886, "gpt2_moverscore": 0.596, "pegasus_xsum_bartscore": -3.35, "pegasus_xsum_bertscore": 0.901, "pegasus_xsum_moverscore": 0.654}}, {"abstract": "We analyze human's disagreements about the validity of natural language inferences. We show that, very often, disagreements are not dismissible as annotation \"noise\", but rather persist as we collect more ratings and as we vary the amount of context provided to raters. We further show that the type of uncertainty captured by current state-of-the-art models for natural language inference is not reflective of the type of uncertainty present in human disagreements. We discuss implications of our results in relation to the recognizing textual entailment (RTE)/natural language inference (NLI) task. We argue for a refined evaluation objective that requires models to explicitly capture the full distribution of plausible human judgments.", "human_title": "Inherent Disagreements in Human Textual Inferences", "sys_gen": {"bart_base": "A Refined Evaluation of Human's Discussions about Natural Language Inference", "bart_xsum": "Exploring Human Disagreement about the Validity of Natural Language Inference Tasks", "t5_small": "Understanding the Validity of Natural Language Inferences", "gpt2": " Noise vs. Natural Language Inference: An Empirical Study", "pegasus_xsum": "Analyzing Human Disagreements about the validity of Natural Language Inference"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 3.0, "human_title_bws": -0.4, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.2, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.4, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -0.6, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 2.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.4}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -4.409, "bart_base_bertscore": 0.881, "bart_base_moverscore": 0.596, "bart_cnn_bartscore": -5.081, "bart_cnn_bertscore": 0.884, "bart_cnn_moverscore": 0.567, "bart_xsum_bartscore": -4.272, "bart_xsum_bertscore": 0.91, "bart_xsum_moverscore": 0.62, "t5_small_bartscore": -4.368, "t5_small_bertscore": 0.898, "t5_small_moverscore": 0.61, "gpt2_bartscore": -4.969, "gpt2_bertscore": 0.874, "gpt2_moverscore": 0.584, "pegasus_xsum_bartscore": -3.942, "pegasus_xsum_bertscore": 0.914, "pegasus_xsum_moverscore": 0.621}}, {"abstract": "This paper describes an algorithm for detecting empty nodes in the Penn Treebank (Marcus et al., 1993), finding their antecedents, and assigning them function tags, without access to lexical information such as valency. Unlike previous approaches to this task, the current method is not corpus-based, but rather makes use of the principles of early Government-Binding theory (Chomsky, 1981), the syntactic theory that underlies the annotation. Using the evaluation metric proposed by Johnson (2002), this approach outperforms previously published approaches on both detection of empty categories and antecedent identification, given either annotated input stripped of empty categories or the output of a parser. Some problems with this evaluation metric are noted and an alternative is proposed along with the results. The paper considers the reasons a principlebased approach to this problem should outperform corpus-based approaches, and speculates on the possibility of a hybrid approach.", "human_title": "Using Linguistic Principles to Recover Empty Categories", "sys_gen": {"bart_base": "An Evaluation Metric for Empty Node Detection in Penn Treebank", "bart_cnn": "A Corpus-Based Approach to the Automatic Discovery of Empty Categories and Their Antecedents in the Penn Treebank: An", "bart_xsum": "A Principle-Based Approach to Empty Categories in the Penn Treebank", "gpt2": " Detecting Empty Categories and Antecedents in the Penn Treebank", "pegasus_xsum": "A Principle-Based Approach to Empty Node Detection in the Penn Treebank"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 3.0, "bart_base_bws": -0.4, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 5.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.6, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.2, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.6}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -7.183, "bart_base_bertscore": 0.872, "bart_base_moverscore": 0.578, "bart_cnn_bartscore": -4.894, "bart_cnn_bertscore": 0.872, "bart_cnn_moverscore": 0.566, "bart_xsum_bartscore": -5.418, "bart_xsum_bertscore": 0.907, "bart_xsum_moverscore": 0.605, "t5_small_bartscore": -6.168, "t5_small_bertscore": 0.856, "t5_small_moverscore": 0.549, "gpt2_bartscore": -4.873, "gpt2_bertscore": 0.882, "gpt2_moverscore": 0.597, "pegasus_xsum_bartscore": -6.144, "pegasus_xsum_bertscore": 0.887, "pegasus_xsum_moverscore": 0.559}}, {"abstract": "When a word sense disambiguation (WSD) system is trained on one domain but applied to a different domain, a drop in accuracy is frequently observed. This highlights the importance of domain adaptation for word sense disambiguation. In this paper, we first show that an active learning approach can be successfully used to perform domain adaptation of WSD systems. Then, by using the predominant sense predicted by expectation-maximization (EM) and adopting a count-merging technique, we improve the effectiveness of the original adaptation process achieved by the basic active learning approach.", "human_title": "Domain Adaptation with Active Learning for Word Sense Disambiguation", "sys_gen": {"bart_base": "Active Learning for Domain Adaptation of Word Sense Disambiguation Systems", "bart_cnn": "Active Domain Adaptation for Word Sense Disambiguation Using Expectation-Maximization Prediction and Count-Merging Techniques", "bart_xsum": "Domain Adaptation of Word Sense Disambiguation Systems", "t5_small": "Active Domain Adaptation for Word Sense Disambiguation", "gpt2": " Domain Adaptation for Word Sense Disambiguation"}, "human_eval": {"human_title_selected_best": 5.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 3.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.6, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 5.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.2, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.2, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -0.6}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -2.706, "bart_base_bertscore": 0.96, "bart_base_moverscore": 0.731, "bart_cnn_bartscore": -4.113, "bart_cnn_bertscore": 0.923, "bart_cnn_moverscore": 0.619, "bart_xsum_bartscore": -1.458, "bart_xsum_bertscore": 0.957, "bart_xsum_moverscore": 0.693, "t5_small_bartscore": -2.074, "t5_small_bertscore": 0.948, "t5_small_moverscore": 0.694, "gpt2_bartscore": -2.144, "gpt2_bertscore": 0.947, "gpt2_moverscore": 0.682, "pegasus_xsum_bartscore": -3.26, "pegasus_xsum_bertscore": 0.952, "pegasus_xsum_moverscore": 0.719}}, {"abstract": "Emotions are an important element of human nature, often affecting the overall wellbeing of a person. Therefore, it is no surprise that the health domain is a valuable area of interest for emotion detection, as it can provide medical staff or caregivers with essential information about patients. However, progress on this task has been hampered by the absence of large labeled datasets. To this end, we introduce CancerEmo, an emotion dataset created from an online health community and annotated with eight fine-grained emotions. We perform a comprehensive analysis of these emotions and develop deep learning models on the newly created dataset. Our best BERT model achieves an average F1 of 71%, which we improve further using domain-specific pre-training.", "human_title": "CancerEmo: A Dataset for Fine-Grained Emotion Detection", "sys_gen": {"bart_cnn": "C CancerEmo: A Dataset for Fine-Grained Emotion Detection and Domain Adaptation in Online Health Community", "bart_xsum": "CancerEmo: A Large-Scale Dataset for Emotion Detection in the Health Domain", "t5_small": "CancerEmo: An Emotion Dataset for Emotion Detection", "gpt2": " CancerEmo: A Fine-Grained Emotion Dataset for Healthcare", "pegasus_xsum": "CancerEmo: A Fine-Grained Dataset for Emotion Detection in Health"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.4, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 4.0, "bart_cnn_bws": -0.6, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.6, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -0.6, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.2}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -1.769, "bart_base_bertscore": 0.954, "bart_base_moverscore": 0.709, "bart_cnn_bartscore": -2.418, "bart_cnn_bertscore": 0.939, "bart_cnn_moverscore": 0.636, "bart_xsum_bartscore": -1.918, "bart_xsum_bertscore": 0.968, "bart_xsum_moverscore": 0.703, "t5_small_bartscore": -2.463, "t5_small_bertscore": 0.934, "t5_small_moverscore": 0.661, "gpt2_bartscore": -2.996, "gpt2_bertscore": 0.96, "gpt2_moverscore": 0.713, "pegasus_xsum_bartscore": -1.793, "pegasus_xsum_bertscore": 0.98, "pegasus_xsum_moverscore": 0.759}}, {"abstract": "We present a generalized discriminative model for spelling error correction which targets character-level transformations. While operating at the character level, the model makes use of wordlevel and contextual information. In contrast to previous work, the proposed approach learns to correct a variety of error types without guidance of manuallyselected constraints or language-specific features. We apply the model to correct errors in Egyptian Arabic dialect text, achieving 65% reduction in word error rate over the input baseline, and improving over the earlier state-of-the-art system.", "human_title": "Generalized Character-Level Spelling Error Correction", "sys_gen": {"bart_base": "A Discriminative Model for Spelling Error Correction in Arabic Dialect Text", "bart_xsum": "A Generalized Discriminative Model for Spelling Error Correction with Character-Level Information", "t5_small": "A Generalized Discriminative Model for Structural Error Correction", "gpt2": " Generalized Discriminative Model for Spelling Error Correction", "pegasus_xsum": "Generalized Discriminative Model for Character-Level Spelling Error Correction"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.402, "bart_base_bertscore": 0.887, "bart_base_moverscore": 0.611, "bart_cnn_bartscore": -4.499, "bart_cnn_bertscore": 0.88, "bart_cnn_moverscore": 0.577, "bart_xsum_bartscore": -3.683, "bart_xsum_bertscore": 0.912, "bart_xsum_moverscore": 0.622, "t5_small_bartscore": -4.365, "t5_small_bertscore": 0.872, "t5_small_moverscore": 0.589, "gpt2_bartscore": -3.564, "gpt2_bertscore": 0.91, "gpt2_moverscore": 0.671, "pegasus_xsum_bartscore": -2.983, "pegasus_xsum_bertscore": 0.931, "pegasus_xsum_moverscore": 0.68}}, {"abstract": "Multi-document summarization provides users with a short text that summarizes the information in a set of related documents. This paper introduces affinity-preserving random walk to the summarization task, which preserves the affinity relations of sentences by an absorbing random walk model. Meanwhile, we put forward adjustable affinity-preserving random walk to enforce the diversity constraint of summarization in the random walk process. The ROUGE evaluations on DUC 2003 topic-focused summarization task and DUC 2004 generic summarization task show the good performance of our method, which has the best ROUGE-2 recall among the graph-based ranking methods.", "human_title": "Affinity-Preserving Random Walk for Multi-Document Summarization", "sys_gen": {"bart_base": "Affinity-Preserving Random Walk for Multi-Document Summarization", "bart_cnn": "Affinity-Preserving Random Walk for Multi-document Summarization with Adaptive Random Walk Constraints and Divers", "t5_small": "Affinity-preserving Random Walk for Multi-Document Summarization", "gpt2": " Affinity-Preserving Random Walk for Multi-Document Summarization", "pegasus_xsum": "Affinity-preserving Random Walk for Multi-document Summarization"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "gpt2_selected_best": 3.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -1.055, "bart_base_bertscore": 0.981, "bart_base_moverscore": 0.898, "bart_cnn_bartscore": -2.779, "bart_cnn_bertscore": 0.933, "bart_cnn_moverscore": 0.676, "bart_xsum_bartscore": -2.395, "bart_xsum_bertscore": 0.962, "bart_xsum_moverscore": 0.774, "t5_small_bartscore": -1.433, "t5_small_bertscore": 0.978, "t5_small_moverscore": 0.905, "gpt2_bartscore": -1.49, "gpt2_bertscore": 0.981, "gpt2_moverscore": 0.901, "pegasus_xsum_bartscore": -0.976, "pegasus_xsum_bertscore": 0.989, "pegasus_xsum_moverscore": 0.983}}, {"abstract": "Much of human dialogue occurs in semi-cooperative settings, where agents with different goals attempt to agree on common decisions. Negotiations require complex communication and reasoning skills, but success is easy to measure, making this an interesting task for AI. We gather a large dataset of human-human negotiations on a multi-issue bargaining task, where agents who cannot observe each other's reward functions must reach an agreement (or a deal) via natural language dialogue. For the first time, we show it is possible to train end-to-end models for negotiation, which must learn both linguistic and reasoning skills with no annotated dialogue states. We also introduce dialogue rollouts, in which the model plans ahead by simulating possible complete continuations of the conversation, and find that this technique dramatically improves performance. Our code and dataset are publicly available.", "human_title": "Deal or No Deal? End-to-End Learning of Negotiation Dialogues", "sys_gen": {"bart_base": "Learning End-to-End Models for Negotiations in Human-Human Dialogue", "bart_cnn": "Training End-to-End Negotiations for Multi-Issue Bilinguage: A Large Dataset and Training", "t5_small": "A Large Dataset of Human-Human Negotiations on a Multi-issue Negotiation Task", "gpt2": " End-to-End Dialogue Learning for Multi-Issue Bargaining", "pegasus_xsum": "Learning to Negotiation in Semi-Cooperative Dialogue Systems"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.698, "bart_base_bertscore": 0.891, "bart_base_moverscore": 0.612, "bart_cnn_bartscore": -4.728, "bart_cnn_bertscore": 0.866, "bart_cnn_moverscore": 0.579, "bart_xsum_bartscore": -4.311, "bart_xsum_bertscore": 0.875, "bart_xsum_moverscore": 0.611, "t5_small_bartscore": -5.26, "t5_small_bertscore": 0.858, "t5_small_moverscore": 0.559, "gpt2_bartscore": -4.23, "gpt2_bertscore": 0.889, "gpt2_moverscore": 0.611, "pegasus_xsum_bartscore": -5.262, "pegasus_xsum_bertscore": 0.871, "pegasus_xsum_moverscore": 0.563}}, {"abstract": "Minimal peer prediction mechanisms truthfully elicit private information (e.g., opinions or experiences) from rational agents without the requirement that ground truth is eventually revealed. In this paper, we use a geometric perspective to prove that minimal peer prediction mechanisms are equivalent to power diagrams, a type of weighted Voronoi diagram. Using this characterization and results from computational geometry, we show that many of the mechanisms in the literature are unique up to affine transformations, and introduce a general method to construct new truthful mechanisms.", "human_title": "A Geometric Method to Construct Minimal Peer Prediction Mechanisms", "sys_gen": {"bart_base": "Minimal Peer Prediction Mechanisms are Equivalent to Power Diagrams", "bart_cnn": "Geometric Analysis of Minimal Peer Prediction Mechanisms Truthfully Elicited from Rational Agents: Structure and Affine Transformations", "bart_xsum": "Minimal Peer Prediction Mechanisms are Weighted Voronoi Diagrams", "gpt2": " Truthful Minimal Peer Prediction Mechanisms", "pegasus_xsum": "Minimal Peer Prediction Mechanisms Are Like Power Diagram"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.581, "bart_base_bertscore": 0.947, "bart_base_moverscore": 0.704, "bart_cnn_bartscore": -4.628, "bart_cnn_bertscore": 0.899, "bart_cnn_moverscore": 0.614, "bart_xsum_bartscore": -3.161, "bart_xsum_bertscore": 0.898, "bart_xsum_moverscore": 0.628, "t5_small_bartscore": -2.919, "t5_small_bertscore": 0.952, "t5_small_moverscore": 0.712, "gpt2_bartscore": -3.313, "gpt2_bertscore": 0.941, "gpt2_moverscore": 0.673, "pegasus_xsum_bartscore": -3.966, "pegasus_xsum_bertscore": 0.909, "pegasus_xsum_moverscore": 0.631}}, {"abstract": "We present a general Bayesian approach to probabilistic matrix factorization subject to linear constraints. The approach is based on a Gaussian observation model and Gaussian priors with bilinear equality and inequality constraints. We present an efficient Markov chain Monte Carlo inference procedure based on Gibbs sampling. Special cases of the proposed model are Bayesian formulations of nonnegative matrix factorization and factor analysis. The method is evaluated on a blind source separation problem. We demonstrate that our algorithm can be used to extract meaningful and interpretable features that are remarkably different from features extracted using existing related matrix factorization techniques.", "human_title": "Linearly constrained Bayesian matrix factorization for blind source separation", "sys_gen": {"bart_base": "Bayesian Probabilistic Matrix Factorization with Linear Constraints", "bart_cnn": "Bayesian Matrix Factorization with Gaussian Priors and Gibbs Sampling Based on Gaussian Observation for Nonnegative Matrix Factor", "t5_small": "Bayesian Probabilistic Matrix Factorization Subject to Linear Constraints", "gpt2": " Bayesian Probabilistic Matrix Factorization", "pegasus_xsum": "Probabilistic Matrix Factorization with Linear Constraints"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_base_selected_best": 3.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 1.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.641, "bart_base_bertscore": 0.897, "bart_base_moverscore": 0.621, "bart_cnn_bartscore": -4.827, "bart_cnn_bertscore": 0.879, "bart_cnn_moverscore": 0.586, "bart_xsum_bartscore": -4.367, "bart_xsum_bertscore": 0.899, "bart_xsum_moverscore": 0.615, "t5_small_bartscore": -3.414, "t5_small_bertscore": 0.899, "t5_small_moverscore": 0.624, "gpt2_bartscore": -4.112, "gpt2_bertscore": 0.906, "gpt2_moverscore": 0.606, "pegasus_xsum_bartscore": -3.14, "pegasus_xsum_bertscore": 0.898, "pegasus_xsum_moverscore": 0.62}}, {"abstract": "Research on temporal knowledge bases, which associate a relational fact (s,r,o) with a validity time period (or time instant), is in its early days. Our work considers predicting missing entities (link prediction) and missing time intervals (time prediction) as joint Temporal Knowledge Base Completion (TKBC) tasks, and presents TIMEPLEX, a novel TKBC method, in which entities, relations and, time are all embedded in a uniform, compatible space. TIMEPLEX exploits the recurrent nature of some facts/events and temporal interactions between pairs of relations, yielding state-of-the-art results on both prediction tasks. We also find that existing TKBC models heavily overestimate link prediction performance due to imperfect evaluation mechanisms. In response, we propose improved TKBC evaluation protocols for both link and time prediction tasks, dealing with subtle issues that arise from the partial overlap of time intervals in gold instances and system predictions.", "human_title": "Temporal Knowledge Base Completion: New Algorithms and Evaluation Protocols", "sys_gen": {"bart_base": "Temporal Knowledge Base Completion with Missing Entities and Time Intervals", "bart_xsum": "TIMEPLEX: Joint Entity and Time Prediction for Temporal Knowledge Base Completion", "t5_small": "TIMEPLEX: Joint Temporal Knowledge Base Completion", "gpt2": " Joint Temporal Knowledge Base Completion and Time Prediction", "pegasus_xsum": "Time: A Joint Temporal Knowledge Base Completion Method for Link and Time Prediction"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.96, "bart_base_bertscore": 0.91, "bart_base_moverscore": 0.627, "bart_cnn_bartscore": -4.642, "bart_cnn_bertscore": 0.888, "bart_cnn_moverscore": 0.586, "bart_xsum_bartscore": -5.393, "bart_xsum_bertscore": 0.876, "bart_xsum_moverscore": 0.608, "t5_small_bartscore": -3.861, "t5_small_bertscore": 0.912, "t5_small_moverscore": 0.615, "gpt2_bartscore": -3.624, "gpt2_bertscore": 0.926, "gpt2_moverscore": 0.621, "pegasus_xsum_bartscore": -4.702, "pegasus_xsum_bertscore": 0.907, "pegasus_xsum_moverscore": 0.614}}, {"abstract": "In the Colonel Blotto game, which was initially introduced by Borel in 1921, two colonels simultaneously distribute their troops across different battlefields. The winner of each battlefield is determined independently by a winner-take-all rule. The ultimate payoff of each colonel is the number of battlefields he wins. This game is commonly used for analyzing a wide range of applications such as the U.S presidential election, innovative technology competitions, advertisements, etc. There have been persistent efforts for finding the optimal strategies for the Colonel Blotto game. After almost a century Ahmadinejad, Dehghani, Hajiaghayi, Lucier, Mahini, and Seddighin provided a poly-time algorithm for finding the", "human_title": "Faster and Simpler Algorithm for Optimal Strategies of Blotto Game", "sys_gen": {"bart_base": "Finding Optimal Strategies for the Colonel Blotto Game", "bart_cnn": "The Colonel Blotto Game: Finding the optimal strategies for the Colonel-to-Colonot Strategy Across Different Batt battlefield", "bart_xsum": "A Polynomial-Time Algorithm for the Colonel Blotto Game.", "t5_small": "The Colonel Blotto Game: A Poly-Time Optimization Tool", "gpt2": " Colonel Blotto: A Poly-Time Algorithm for Finding the Optimal Strategies for the Colored General"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.486, "bart_base_bertscore": 0.895, "bart_base_moverscore": 0.593, "bart_cnn_bartscore": -5.6, "bart_cnn_bertscore": 0.867, "bart_cnn_moverscore": 0.558, "bart_xsum_bartscore": -4.194, "bart_xsum_bertscore": 0.893, "bart_xsum_moverscore": 0.615, "t5_small_bartscore": -5.296, "t5_small_bertscore": 0.867, "t5_small_moverscore": 0.547, "gpt2_bartscore": -4.843, "gpt2_bertscore": 0.878, "gpt2_moverscore": 0.576, "pegasus_xsum_bartscore": -4.226, "pegasus_xsum_bertscore": 0.91, "pegasus_xsum_moverscore": 0.618}}, {"abstract": "This paper proposes a new computational treatment of lexical rules as used in the HPSG framework. A compiler is described which translates a set of lexical rules and their interaction into a definite clause encoding, which is called by the base lexical entries in the lexicon. This way, the disjunctive possibilities arising from lexical rule application are encoded as systematic covariation in the specification of lexical entries. The compiler ensures the automatic transfer of properties not changed by a lexical rule. Program transformation techniques are used to advance the encoding. The final output of the compiler constitutes an efficient computational counterpart of the linguistic generalizations captured by lexical rules and allows on-the-fly application of lexical rules.", "human_title": "A Computational Treatment of Lexical Rules in HPSG as Covariation in Lexical Entries", "sys_gen": {"bart_base": "A Computational Treatment of Lexical Rules in HPSG", "bart_cnn": "A Computational Treatment of Lexical Rules in HPSG-based Lexical Grammars for Linguistic Generalization", "bart_xsum": "A Computational Treatment of Lexical Rules and their Interactions", "gpt2": " A Computational Approach to Lexical Rules", "pegasus_xsum": "Computational Covariation of Lexical Rules in HPSG"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 3.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 1.0, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.667, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -1.86, "bart_base_bertscore": 0.924, "bart_base_moverscore": 0.644, "bart_cnn_bartscore": -2.624, "bart_cnn_bertscore": 0.922, "bart_cnn_moverscore": 0.709, "bart_xsum_bartscore": -2.148, "bart_xsum_bertscore": 0.913, "bart_xsum_moverscore": 0.635, "t5_small_bartscore": -3.91, "t5_small_bertscore": 0.889, "t5_small_moverscore": 0.589, "gpt2_bartscore": -3.331, "gpt2_bertscore": 0.906, "gpt2_moverscore": 0.605, "pegasus_xsum_bartscore": -2.637, "pegasus_xsum_bertscore": 0.914, "pegasus_xsum_moverscore": 0.633}}, {"abstract": "We consider the task of automatically identifying participants\u2019 motivations in the public health campaign Movember and investigate the impact of the different motivations on the amount of campaign donations raised. Our classification scheme is based on the Social Identity Model of Collective Action (van Zomeren et al., 2008). We find that automatic classification based on Movember profiles is fairly accurate, while automatic classification based on tweets is challenging. Using our classifier, we find a strong relation between types of motivations and donations. Our study is a first step towards scaling-up collective action research methods.", "human_title": "#SupportTheCause: Identifying Motivations to Participate in Online Health Campaigns", "sys_gen": {"bart_base": "Automatic Identification of Participants' Motives in the Public Health Campaign Movember", "bart_cnn": "Automatic Classification of Participants' Motivations in Movember Campaigns Using Collective Action Research and Social Identity Model of Collective Action", "bart_xsum": "Automatic classification of Movember participants' motivations and donations", "t5_small": "Identifying Motivations in the Public Health Campaign Movember", "pegasus_xsum": "Identifying Participants' Motivatedness in the Movember Campaign"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.921, "bart_base_bertscore": 0.893, "bart_base_moverscore": 0.594, "bart_cnn_bartscore": -5.465, "bart_cnn_bertscore": 0.876, "bart_cnn_moverscore": 0.56, "bart_xsum_bartscore": -6.235, "bart_xsum_bertscore": 0.866, "bart_xsum_moverscore": 0.552, "t5_small_bartscore": -4.75, "t5_small_bertscore": 0.892, "t5_small_moverscore": 0.608, "gpt2_bartscore": -5.339, "gpt2_bertscore": 0.885, "gpt2_moverscore": 0.576, "pegasus_xsum_bartscore": -5.073, "pegasus_xsum_bertscore": 0.878, "pegasus_xsum_moverscore": 0.594}}, {"abstract": "We propose a metric learning framework for the construction of invariant geometric functions of planar curves for the Euclidean and Similarity group of transformations. We leverage on the representational power of convolutional neural networks to compute these geometric quantities. In comparison with axiomatic constructions, we show that the invariants approximated by the learning architectures have better numerical qualities such as robustness to noise, resiliency to sampling, as well as the ability to adapt to occlusion and partiality. Finally, we develop a novel multi-scale representation in a similarity metric learning paradigm.", "human_title": "Learning Invariant Representations Of Planar Curves", "sys_gen": {"bart_base": "Learning invariant geometric functions of planar curves for Euclidean and Similarity transformations", "bart_cnn": "Metric Learning of Invariant Geometric Functions for Euclidean and Similarity Metric Learning with Convolutional Neural", "t5_small": "Invariant Geometry of Planar Curves for Euclidean and Similarity", "gpt2": " A Metric Learning Framework for Planar Curves", "pegasus_xsum": "Similarity Metric Learning with Convolutional Neural Networks."}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.0, "bart_base_selected_best": 3.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 1.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.729, "bart_base_bertscore": 0.902, "bart_base_moverscore": 0.679, "bart_cnn_bartscore": -4.509, "bart_cnn_bertscore": 0.875, "bart_cnn_moverscore": 0.576, "bart_xsum_bartscore": -4.926, "bart_xsum_bertscore": 0.864, "bart_xsum_moverscore": 0.609, "t5_small_bartscore": -3.103, "t5_small_bertscore": 0.924, "t5_small_moverscore": 0.682, "gpt2_bartscore": -4.621, "gpt2_bertscore": 0.89, "gpt2_moverscore": 0.649, "pegasus_xsum_bartscore": -4.621, "pegasus_xsum_bertscore": 0.866, "pegasus_xsum_moverscore": 0.608}}, {"abstract": "Semantic grammars can be applied both as a language model for a speech recognizer and for semantic parsing, e.g. in order to map the output of a speech recognizer into formal meaning representations. Semantic speech recognition grammars are, however, typically created manually or learned in a supervised fashion, requiring extensive manual effort in both cases. Aiming to reduce this effort, in this paper we investigate the induction of semantic speech recognition grammars under weak supervision. We present empirical results, indicating that the induced grammars support semantic parsing of speech with a rather low loss in performance when compared to parsing of input without recognition errors. Further, we show improved parsing performance compared to applying n-gram models as language models and demonstrate how our semantic speech recognition grammars can be enhanced by weights based on occurrence frequencies, yielding an improvement in parsing performance over applying unweighted grammars.", "human_title": "Semantic parsing of speech using grammars learned with weak supervision", "sys_gen": {"bart_base": "Weakly Supervised Induction of Semantic Speech Recognition Grammars", "bart_cnn": "Inducing Semantic Speech Recognition Grammars under Weak Supervision for Improved Parsing and Semantic Parsing of Speech", "bart_xsum": "Weakly Supervised Induction of Semantic Speech Recognition Grammars", "t5_small": "Learning Semantic Speech Recognition Grammars under weak supervision", "gpt2": " Improving Semantic Speech Recognition Grammars with Weak Supervision"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.813, "bart_base_bertscore": 0.893, "bart_base_moverscore": 0.636, "bart_cnn_bartscore": -4.603, "bart_cnn_bertscore": 0.89, "bart_cnn_moverscore": 0.623, "bart_xsum_bartscore": -4.56, "bart_xsum_bertscore": 0.888, "bart_xsum_moverscore": 0.625, "t5_small_bartscore": -3.792, "t5_small_bertscore": 0.904, "t5_small_moverscore": 0.621, "gpt2_bartscore": -4.201, "gpt2_bertscore": 0.896, "gpt2_moverscore": 0.634, "pegasus_xsum_bartscore": -4.655, "pegasus_xsum_bertscore": 0.888, "pegasus_xsum_moverscore": 0.624}}, {"abstract": "Bilingual lexicons are fundamental resources. Modern automated lexicon generation methods usually require parallel corpora, which are not available for most language pairs. Lexicons can be generated using non-parallel corpora or a pivot language, but such lexicons are noisy. We present an algorithm for generating a high quality lexicon from a noisy one, which only requires an independent corpus for each language. Our algorithm introduces non-aligned signatures (NAS), a cross-lingual word context similarity score that avoids the over-constrained and inefficient nature of alignment-based methods. We use NAS to eliminate incorrect translations from the generated lexicon. We evaluate our method by improving the quality of noisy Spanish-Hebrew lexicons generated from two pivot English lexicons. Our algorithm substantially outperforms other lexicon generation methods.", "human_title": "Bilingual Lexicon Generation Using Non-Aligned Signatures", "sys_gen": {"bart_cnn": "Non-Aligned Signatures for Bilingual Lexicon Generation from Noisy Corpora using Non-Parallel Corpora and", "bart_xsum": "Generating Noisy Bilingual Lexicons with Non-aligned Signatures", "t5_small": "Non-Aligned Signatures for Bilingual Lexicons Generation", "gpt2": " Pivot Language Lexicon Generation with Non-Parallel Corpora", "pegasus_xsum": "Non-aligned Signatures for Noisy Bilingual Lexicon Generation"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.859, "bart_base_bertscore": 0.937, "bart_base_moverscore": 0.682, "bart_cnn_bartscore": -3.858, "bart_cnn_bertscore": 0.925, "bart_cnn_moverscore": 0.618, "bart_xsum_bartscore": -3.85, "bart_xsum_bertscore": 0.914, "bart_xsum_moverscore": 0.674, "t5_small_bartscore": -2.637, "t5_small_bertscore": 0.937, "t5_small_moverscore": 0.682, "gpt2_bartscore": -5.641, "gpt2_bertscore": 0.898, "gpt2_moverscore": 0.628, "pegasus_xsum_bartscore": -2.912, "pegasus_xsum_bertscore": 0.956, "pegasus_xsum_moverscore": 0.751}}, {"abstract": "In this paper, we address the task of mapping high-level instructions to sequences of commands in an external environment. Processing these instructions is challenging\u2014they posit goals to be achieved without specifying the steps required to complete them. We describe a method that fills in missing information using an automatically derived environment model that encodes states, transitions, and commands that cause these transitions to happen. We present an efficient approximate approach for learning this environment model as part of a policygradient reinforcement learning algorithm for text interpretation. This design enables learning for mapping high-level instructions, which previous statistical methods cannot handle.1", "human_title": "Reading between the Lines: Learning to Map High-Level Instructions to Commands", "sys_gen": {"bart_base": "Mapping High-Level Instructions to Sequences in an Environment", "bart_cnn": "Mapping Instructions to Sequences of Decoders in an External Environment using a Policy-Gradient Reinforcement Learning Algorithm", "bart_xsum": "Mapping High-Level Instructions to Sequences of Commands in an Environment", "gpt2": " Mapping High-Level Instructions to Sequences of Descriptions", "pegasus_xsum": "Mapping Instructions to Sequences of Actions in an External Environment"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.071, "bart_base_bertscore": 0.935, "bart_base_moverscore": 0.637, "bart_cnn_bartscore": -5.035, "bart_cnn_bertscore": 0.86, "bart_cnn_moverscore": 0.559, "bart_xsum_bartscore": -3.962, "bart_xsum_bertscore": 0.916, "bart_xsum_moverscore": 0.594, "t5_small_bartscore": -3.622, "t5_small_bertscore": 0.918, "t5_small_moverscore": 0.612, "gpt2_bartscore": -3.696, "gpt2_bertscore": 0.926, "gpt2_moverscore": 0.609, "pegasus_xsum_bartscore": -3.923, "pegasus_xsum_bertscore": 0.918, "pegasus_xsum_moverscore": 0.602}}, {"abstract": "This paper investigates how hidden layers of deep rectifier networks are capable of transforming two or more pattern sets to be linearly separable while preserving the distances with a guaranteed degree, and proves the universal classification power of such distance preserving rectifier networks. Through the nearly isometric nonlinear transformation in the hidden layers, the margin of the linear separating plane in the output layer and the margin of the nonlinear separating boundary in the original data space can be closely related so that the maximum margin classification in the input data space can be achieved approximately via the maximum margin linear classifiers in the output layer. The generalization performance of such distance preserving deep rectifier neural networks can be well justified by the distance-preserving properties of their hidden layers and the maximum margin property of the linear classifiers in the output layer.", "human_title": "How Can Deep Rectifier Networks Achieve Linear Separability and Preserve Distances?", "sys_gen": {"bart_base": "Hidden layers of deep rectifier networks are linearly separable", "bart_xsum": "Hidden layers of deep rectifier neural networks can transform pattern sets into linearly separable units", "t5_small": "Distance Preserving Deep Korrelier Neural Networks", "gpt2": " Distance preserving deep rectifier networks", "pegasus_xsum": "Universal Distance Preserving of Deep Neural Networks"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.257, "bart_base_bertscore": 0.89, "bart_base_moverscore": 0.606, "bart_cnn_bartscore": -5.366, "bart_cnn_bertscore": 0.851, "bart_cnn_moverscore": 0.574, "bart_xsum_bartscore": -4.098, "bart_xsum_bertscore": 0.888, "bart_xsum_moverscore": 0.598, "t5_small_bartscore": -5.163, "t5_small_bertscore": 0.866, "t5_small_moverscore": 0.593, "gpt2_bartscore": -4.984, "gpt2_bertscore": 0.884, "gpt2_moverscore": 0.59, "pegasus_xsum_bartscore": -4.746, "pegasus_xsum_bertscore": 0.882, "pegasus_xsum_moverscore": 0.579}}, {"abstract": "S OF CURRENT LITERATURE For copies of the following papers on Project SEMSYN, write to Frau HOrmann c / o Project SEMSYN Institut for Informatik Universitat Stuttgart Azenbergstrasse 12 D-7000 Stuttgart 1, West Germany When Mariko Talks to Siegfried Experiences from a Japanese /German Machine", "human_title": "Abstracts of Current Literature", "sys_gen": {"bart_base": "Project SEMSYN: A Study of Current Literature in German", "bart_cnn": "The Current LITERATURE: A Frau Heterosyntactic Corpus for Project Semantics and its Application to the", "bart_xsum": "Project SEMYN: A Study of Current Literature", "t5_small": "Frau HOrmann c /o Project SEMSYN", "gpt2": " Project Semsyn: An Introduction to the Project"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 3.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 1.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.038, "bart_base_bertscore": 0.883, "bart_base_moverscore": 0.592, "bart_cnn_bartscore": -5.56, "bart_cnn_bertscore": 0.841, "bart_cnn_moverscore": 0.521, "bart_xsum_bartscore": -4.78, "bart_xsum_bertscore": 0.895, "bart_xsum_moverscore": 0.607, "t5_small_bartscore": -7.066, "t5_small_bertscore": 0.825, "t5_small_moverscore": 0.536, "gpt2_bartscore": -5.793, "gpt2_bertscore": 0.857, "gpt2_moverscore": 0.548, "pegasus_xsum_bartscore": -4.069, "pegasus_xsum_bertscore": 0.836, "pegasus_xsum_moverscore": 0.535}}, {"abstract": "We study the problem of learning to track a large quantity of homogeneous objects such as cell tracking in cell culture study and developmental biology. Reliable cell tracking in time-lapse microscopic image sequences is important for modern biomedical research. Existing cell tracking methods are usually kept simple and use only a small number of features to allow for manual parameter tweaking or grid search. We propose a structured learning approach that allows to learn optimum parameters automatically from a training set. This allows for the use of a richer set of features which in turn affords improved tracking compared to recently reported methods on two public benchmark sequences.", "human_title": "Structured Learning for Cell Tracking", "sys_gen": {"bart_base": "A Structured Learning Approach for Reliable Cell Tracking in Microscapes", "bart_cnn": "Structured Learning for Reliable Cell Tracking in Microscaling Time-Lapse Microscapes: A Structured Learning Approach", "bart_xsum": "Structured Learning for Cell Tracking in Time-Lapse Microscopic Images", "t5_small": "Learning to Track a Large Quantity of Homogeneous Objects", "gpt2": " Structured Learning for Cell Tracking in Time-Lapse Microarray Sequences"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.374, "bart_base_bertscore": 0.944, "bart_base_moverscore": 0.658, "bart_cnn_bartscore": -3.936, "bart_cnn_bertscore": 0.914, "bart_cnn_moverscore": 0.588, "bart_xsum_bartscore": -2.398, "bart_xsum_bertscore": 0.946, "bart_xsum_moverscore": 0.657, "t5_small_bartscore": -5.537, "t5_small_bertscore": 0.887, "t5_small_moverscore": 0.563, "gpt2_bartscore": -4.752, "gpt2_bertscore": 0.908, "gpt2_moverscore": 0.603, "pegasus_xsum_bartscore": -4.331, "pegasus_xsum_bertscore": 0.891, "pegasus_xsum_moverscore": 0.568}}, {"abstract": "We show that the state-of-the-art Transformer MT model is not biased towards monotonic reordering (unlike previous recurrent neural network models), but that nevertheless, long-distance dependencies remain a challenge for the model. Since most dependencies are short-distance, common evaluation metrics will be little influenced by how well systems perform on them. We therefore propose an automatic approach for extracting challenge sets rich with long-distance dependencies, and argue that evaluation using this methodology provides a complementary perspective on system performance. To support our claim, we compile challenge sets for English-German and German-English, which are much larger than any previously released challenge set for MT. The extracted sets are large enough to allow reliable automatic evaluation, which makes the proposed approach a scalable and practical solution for evaluating MT performance on the long-tail of syntactic phenomena.", "human_title": "Automatically Extracting Challenge Sets for Non-Local Phenomena in Neural Machine Translation", "sys_gen": {"bart_base": "Towards Automatic Evaluation of Machine Translation Systems", "bart_cnn": "Evaluating Machine Translation with Long-distance Dependencies: An Automatic Approach to the State-of-the-Art Trans", "t5_small": "Extraction of Challenge Sets with Long-Distance Dependencies", "gpt2": " Extracting Challenge Sets Rich with Long-Distance Dependencies", "pegasus_xsum": "Automatic Evaluation of Long-Tailed Syntactic Challenges for Transformer MT"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 3.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.684, "bart_base_bertscore": 0.91, "bart_base_moverscore": 0.599, "bart_cnn_bartscore": -4.112, "bart_cnn_bertscore": 0.867, "bart_cnn_moverscore": 0.559, "bart_xsum_bartscore": -5.432, "bart_xsum_bertscore": 0.886, "bart_xsum_moverscore": 0.59, "t5_small_bartscore": -5.175, "t5_small_bertscore": 0.874, "t5_small_moverscore": 0.583, "gpt2_bartscore": -5.162, "gpt2_bertscore": 0.893, "gpt2_moverscore": 0.602, "pegasus_xsum_bartscore": -5.476, "pegasus_xsum_bertscore": 0.872, "pegasus_xsum_moverscore": 0.57}}, {"abstract": "This work presents a first step to a general implementation of the Semantic-Script Theory of Humor (SSTH). Of the scarce amount of research in computational humor, no research had focused on humor generation beyond simple puns and punning riddles. We propose an algorithm for mining simple humorous scripts from a semantic network (ConceptNet) by specifically searching for dual scripts that jointly maximize overlap and incongruity metrics in line with Raskin\u2019s Semantic-Script Theory of Humor. Initial results show that a more relaxed constraint of this form is capable of generating humor of deeper semantic content than wordplay riddles. We evaluate the said metrics through a user-assessed quality of the generated two-liners.", "human_title": "Humor as Circuits in Semantic Networks", "sys_gen": {"bart_base": "Mining Simple Humor for Semantic-Script Theory of Humor", "bart_xsum": "Mining Semantic Scripts for Humor Generation", "t5_small": "Semantic-Script Theory of Humor: Exploiting Simple Humor from ConceptNet", "gpt2": " Computational Linguistic Humor Mining", "pegasus_xsum": "Generating Two-liners from a Semantic Network"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.052, "bart_base_bertscore": 0.889, "bart_base_moverscore": 0.576, "bart_cnn_bartscore": -5.2, "bart_cnn_bertscore": 0.868, "bart_cnn_moverscore": 0.554, "bart_xsum_bartscore": -5.073, "bart_xsum_bertscore": 0.889, "bart_xsum_moverscore": 0.606, "t5_small_bartscore": -5.209, "t5_small_bertscore": 0.889, "t5_small_moverscore": 0.584, "gpt2_bartscore": -5.797, "gpt2_bertscore": 0.878, "gpt2_moverscore": 0.595, "pegasus_xsum_bartscore": -4.234, "pegasus_xsum_bertscore": 0.897, "pegasus_xsum_moverscore": 0.61}}, {"abstract": "Authorship attribution is an active research area which has been prevalent for many decades. Nevertheless, the majority of approaches consider problem sizes of a few candidate authors only, making them difficult to apply to recent scenarios incorporating thousands of authors emerging due to the manifold means to digitally share text. In this study, we focus on such large-scale problems and propose to effectively reduce the number of candidate authors before applying common attribution techniques. By utilizing document embeddings, we show on a novel, comprehensive dataset collection that the set of candidate authors can be reduced with high accuracy. Moreover, we show that common authorship attribution methods substantially benefit from a preliminary reduction if thousands of authors are involved.", "human_title": "Reduce & Attribute: Two-Step Authorship Attribution for Large-Scale Problems", "sys_gen": {"bart_base": "Reducing the Number of Candidate Authors for Authorship Attribution", "bart_cnn": "Authorship Attribution via Document Embeddings and Manifold Representations: A Dataset and Application to Large-Scale", "t5_small": "Using Document Embeddings to Reduce Authorship Attribution", "gpt2": " Large-Scale Authorship Attribution Using Document Embeddings", "pegasus_xsum": "Large-Scale Authorship Attribution with Document Embeddings"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.631, "bart_base_bertscore": 0.894, "bart_base_moverscore": 0.574, "bart_cnn_bartscore": -4.319, "bart_cnn_bertscore": 0.876, "bart_cnn_moverscore": 0.567, "bart_xsum_bartscore": -4.47, "bart_xsum_bertscore": 0.903, "bart_xsum_moverscore": 0.587, "t5_small_bartscore": -4.166, "t5_small_bertscore": 0.897, "t5_small_moverscore": 0.588, "gpt2_bartscore": -4.119, "gpt2_bertscore": 0.906, "gpt2_moverscore": 0.604, "pegasus_xsum_bartscore": -4.038, "pegasus_xsum_bertscore": 0.901, "pegasus_xsum_moverscore": 0.578}}, {"abstract": "Continuous-space translation models have recently emerged as extremely powerful ways to boost the performance of existing translation systems. A simple, yet effective way to integrate such models in inference is to use them in an N -best rescoring step. In this paper, we focus on this scenario and show that the performance gains in rescoring can be greatly increased when the neural network is trained jointly with all the other model parameters, using an appropriate objective function. Our approach is validated on two domains, where it outperforms strong baselines.", "human_title": "A Discriminative Training Procedure for Continuous Translation Models", "sys_gen": {"bart_base": "Neural Rescoring for Continuous-Space Translation", "bart_xsum": "Rescoring with Joint Neural Networks for Continuous-Space Translation Models", "t5_small": "Continuous-Space Translation Models in Inference", "gpt2": " Jointly Training Neural Networks for Continuous-Space Translation", "pegasus_xsum": "Jointly Training Neural Networks for Rescoring in Continuous-Space Translation"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -6.098, "bart_base_bertscore": 0.883, "bart_base_moverscore": 0.612, "bart_cnn_bartscore": -5.739, "bart_cnn_bertscore": 0.866, "bart_cnn_moverscore": 0.594, "bart_xsum_bartscore": -6.374, "bart_xsum_bertscore": 0.888, "bart_xsum_moverscore": 0.622, "t5_small_bartscore": -6.108, "t5_small_bertscore": 0.893, "t5_small_moverscore": 0.611, "gpt2_bartscore": -6.23, "gpt2_bertscore": 0.898, "gpt2_moverscore": 0.631, "pegasus_xsum_bartscore": -5.714, "pegasus_xsum_bertscore": 0.885, "pegasus_xsum_moverscore": 0.604}}, {"abstract": "This paper aims to understand and improve the utility of the dropout operation from the perspective of game-theoretic interactions. We prove that dropout can suppress the strength of interactions between input variables of deep neural networks (DNNs). The theoretic proof is also verified by various experiments. Furthermore, we find that such interactions were strongly related to the over-fitting problem in deep learning. Thus, the utility of dropout can be regarded as decreasing interactions to alleviate the significance of over-fitting. Based on this understanding, we propose an interaction loss to further improve the utility of dropout. Experimental results have shown that the interaction loss can effectively improve the utility of dropout and boost the performance of DNNs.", "human_title": "Interpreting and Boosting Dropout from a Game-Theoretic View", "sys_gen": {"bart_cnn": "Understanding and Improving the Utility of Deep Neural Networks with Game-Theoretic Interaction Loss for Over-fitting DNN", "bart_xsum": "The Utility of Dropout in Deep Neural Networks via Game-Theoretic Interactions", "t5_small": "Learning the Utility of Dropout from Game-Theoretic Interactions", "gpt2": " On the Utility of Dropout in Deep Learning", "pegasus_xsum": "Understanding and Improving the Utility of Dropout in Deep Neural Networks"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.769, "bart_base_bertscore": 0.873, "bart_base_moverscore": 0.565, "bart_cnn_bartscore": -4.893, "bart_cnn_bertscore": 0.871, "bart_cnn_moverscore": 0.571, "bart_xsum_bartscore": -4.625, "bart_xsum_bertscore": 0.886, "bart_xsum_moverscore": 0.578, "t5_small_bartscore": -4.444, "t5_small_bertscore": 0.896, "t5_small_moverscore": 0.611, "gpt2_bartscore": -4.724, "gpt2_bertscore": 0.878, "gpt2_moverscore": 0.572, "pegasus_xsum_bartscore": -5.013, "pegasus_xsum_bertscore": 0.872, "pegasus_xsum_moverscore": 0.573}}, {"abstract": "There has recently been a lot of interest in unsupervised methods for learning sense distributions, particularly in applications where sense distinctions are needed. This paper analyses a state-of-the-art method for sense distribution learning, and optimises it for application to the entire vocabulary of a given language. The optimised method is then used to produce LEXSEMTM: a sense frequency and semantic dataset of unprecedented size, spanning approximately 88% of polysemous, English simplex lemmas, which is released as a public resource to the community. Finally, the quality of this data is investigated, and the LEXSEMTM sense distributions are shown to be superior to those based on the WORDNET first sense for lemmas missing from SEMCOR, and at least on par with SEMCOR-based distributions otherwise.", "human_title": "LexSemTm: A Semantic Dataset Based on All-words Unsupervised Sense Distribution Learning", "sys_gen": {"bart_cnn": "Optimising Sense Distributions Using LEXSEMTM: An Empirical Study of the State-of-the", "bart_xsum": "LEXSEMTM: A Large-Scale Unsupervised Learning of Sense Distributions for English", "t5_small": "LEXSEMTM: An Unsupervised Method for Learning Sense Distributions", "gpt2": " Unsupervised Learning of Sense Distributions", "pegasus_xsum": "LEXSEMTM: A Sense Distribution Model for the Entire Vocabulary of a Language"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.953, "bart_base_bertscore": 0.891, "bart_base_moverscore": 0.638, "bart_cnn_bartscore": -4.004, "bart_cnn_bertscore": 0.844, "bart_cnn_moverscore": 0.591, "bart_xsum_bartscore": -4.111, "bart_xsum_bertscore": 0.893, "bart_xsum_moverscore": 0.659, "t5_small_bartscore": -4.043, "t5_small_bertscore": 0.889, "t5_small_moverscore": 0.611, "gpt2_bartscore": -3.66, "gpt2_bertscore": 0.894, "gpt2_moverscore": 0.6, "pegasus_xsum_bartscore": -3.879, "pegasus_xsum_bertscore": 0.886, "pegasus_xsum_moverscore": 0.655}}, {"abstract": "This paper introduces a new method for semi-supervised learning on high dimensional nonlinear manifolds, which includes a phase of unsupervised basis learning and a phase of supervised function learning. The learned bases provide a set of anchor points to form a local coordinate system, such that each data point x on the manifold can be locally approximated by a linear combination of its nearby anchor points, and the linear weights become its local coordinate coding. We show that a high dimensional nonlinear function can be approximated by a global linear function with respect to this coding scheme, and the approximation quality is ensured by the locality of such coding. The method turns a difficult nonlinear learning problem into a simple global linear learning problem, which overcomes some drawbacks of traditional local learning methods.", "human_title": "Nonlinear Learning using Local Coordinate Coding", "sys_gen": {"bart_base": "Local Coordinate Coding for Semi-Supervised Nonlinear Manifolds", "bart_xsum": "A Local Coordinate Coding Scheme for Semi-Supervised Learning on Nonlinear Manifolds", "t5_small": "Semi-Supervised Learning on High Dimensional Nonlinear Manifolds", "gpt2": " Semi-Supervised Learning on High Dimensional Nonlinear Manifolds", "pegasus_xsum": "Global Linear Programming for Semi-Supervised Learning on High Dimensional Manifolds"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.667, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.783, "bart_base_bertscore": 0.913, "bart_base_moverscore": 0.619, "bart_cnn_bartscore": -3.923, "bart_cnn_bertscore": 0.9, "bart_cnn_moverscore": 0.584, "bart_xsum_bartscore": -3.882, "bart_xsum_bertscore": 0.909, "bart_xsum_moverscore": 0.625, "t5_small_bartscore": -4.011, "t5_small_bertscore": 0.879, "t5_small_moverscore": 0.606, "gpt2_bartscore": -4.333, "gpt2_bertscore": 0.886, "gpt2_moverscore": 0.611, "pegasus_xsum_bartscore": -4.271, "pegasus_xsum_bertscore": 0.881, "pegasus_xsum_moverscore": 0.598}}, {"abstract": "This paper provides a foundation for multi\u2013task learning using reproducing kernel Hilbert spaces of vector\u2013valued functions. In this setting, the kernel is a matrix\u2013valued function. Some explicit examples will be described which go beyond our earlier results in [7]. In particular, we characterize classes of matrix\u2013 valued kernels which are linear and are of the dot product or the translation invariant type. We discuss how these kernels can be used to model relations between the tasks and present linear multi\u2013task learning algorithms. Finally, we present a novel proof of the representer theorem for a minimizer of a regularization functional which is based on the notion of minimal norm interpolation.", "human_title": "Kernels for Multi--task Learning", "sys_gen": {"bart_base": "Linear Multi-Task Learning with Matrix-Valued Kernels", "bart_cnn": "Multi-Task Learning with Minimal Norm Interpolation and Matrix-Valued Kernel Hilbert Spaces of Vector-valued Functions.", "bart_xsum": "Multi-Task Learning with Reproducing Kernels", "gpt2": " Multi-Task Learning with Reproducing Kernel Hilbert Spaces", "pegasus_xsum": "Multi-Task Learning with Matrix-Valued Kernels"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 3.0, "human_title_bws": -1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.0, "gpt2_selected_best": 3.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 1.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.386, "bart_base_bertscore": 0.889, "bart_base_moverscore": 0.609, "bart_cnn_bartscore": -5.206, "bart_cnn_bertscore": 0.861, "bart_cnn_moverscore": 0.558, "bart_xsum_bartscore": -4.514, "bart_xsum_bertscore": 0.913, "bart_xsum_moverscore": 0.661, "t5_small_bartscore": -5.842, "t5_small_bertscore": 0.877, "t5_small_moverscore": 0.575, "gpt2_bartscore": -5.802, "gpt2_bertscore": 0.884, "gpt2_moverscore": 0.596, "pegasus_xsum_bartscore": -4.641, "pegasus_xsum_bertscore": 0.896, "pegasus_xsum_moverscore": 0.624}}, {"abstract": "In this paper, we present a novel backward transliteration approach which can further assist the existing statistical model by mining monolingual web resources. Firstly, we employ the syllable-based search to revise the transliteration candidates from the statistical model. By mapping all of them into existing words, we can filter or correct some pseudo candidates and improve the overall recall. Secondly, an AdaBoost model is used to rerank the revised candidates based on the information extracted from monolingual web pages. To get a better precision during the reranking process, a variety of web-based information is exploited to adjust the ranking score, so that some candidates which are less possible to be transliteration names will be assigned with lower ranks. The experimental results show that the proposed framework can significantly outperform the baseline transliteration system in both precision and recall.", "human_title": "Chinese-English Backward Transliteration Assisted with Mining Monolingual Web Pages", "sys_gen": {"bart_base": "Recovering Transliteration Candidates from Monolingual Web Pages for Statistical Machine Translation", "bart_cnn": "Backward Transliteration with Syllable-Based Search Based on Web-based Information Extraction from Monolingual Web", "bart_xsum": "A Novel Backward Transliteration Approach Using Syllable-based Search and Monolingual Web Resources", "gpt2": " Forward Transliteration for Statistical Machine Translation", "pegasus_xsum": "Exploiting Monolingual Web Resources for Better Recall and Ranking"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.667, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 3.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.942, "bart_base_bertscore": 0.888, "bart_base_moverscore": 0.634, "bart_cnn_bartscore": -4.498, "bart_cnn_bertscore": 0.875, "bart_cnn_moverscore": 0.59, "bart_xsum_bartscore": -4.131, "bart_xsum_bertscore": 0.895, "bart_xsum_moverscore": 0.608, "t5_small_bartscore": -3.175, "t5_small_bertscore": 0.904, "t5_small_moverscore": 0.627, "gpt2_bartscore": -5.106, "gpt2_bertscore": 0.865, "gpt2_moverscore": 0.592, "pegasus_xsum_bartscore": -4.229, "pegasus_xsum_bertscore": 0.865, "pegasus_xsum_moverscore": 0.576}}, {"abstract": "Existing studies on semantic parsing mainly focus on the in-domain setting. We formulate cross-domain semantic parsing as a domain adaptation problem: train a semantic parser on some source domains and then adapt it to the target domain. Due to the diversity of logical forms in different domains, this problem presents unique and intriguing challenges. By converting logical forms into canonical utterances in natural language, we reduce semantic parsing to paraphrasing, and develop an attentive sequence-to-sequence paraphrase model that is general and flexible to adapt to different domains. We discover two problems, small micro variance and large macro variance, of pre-trained word embeddings that hinder their direct use in neural networks, and propose standardization techniques as a remedy. On the popular Overnight dataset, which contains eight domains, we show that both cross-domain training and standardized pre-trained word embeddings can bring significant improvement.", "human_title": "Cross-domain Semantic Parsing via Paraphrasing", "sys_gen": {"bart_base": "Cross-Domain Semantic Parsing as Domain Adaptation", "bart_cnn": "Cross-Domain Semantic Parsing as Domain Adaptation with Paraphrasing and Pre-Trained Word Embeddings", "t5_small": "Cross-Domain Semantic Parsing as a Domain adaptation problem", "gpt2": " Cross-Domain Semantic Parsing as a Domain Adaptation Problem", "pegasus_xsum": "Cross-Domain Semantic Parsing with Pre-trained Word Embedding"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.902, "bart_base_bertscore": 0.941, "bart_base_moverscore": 0.704, "bart_cnn_bartscore": -3.602, "bart_cnn_bertscore": 0.934, "bart_cnn_moverscore": 0.621, "bart_xsum_bartscore": -2.581, "bart_xsum_bertscore": 0.944, "bart_xsum_moverscore": 0.733, "t5_small_bartscore": -3.335, "t5_small_bertscore": 0.926, "t5_small_moverscore": 0.671, "gpt2_bartscore": -3.248, "gpt2_bertscore": 0.929, "gpt2_moverscore": 0.659, "pegasus_xsum_bartscore": -2.226, "pegasus_xsum_bertscore": 0.953, "pegasus_xsum_moverscore": 0.775}}, {"abstract": "The paper introduces a penalized matrix estimation procedure aiming at solutions which are sparse and low-rank at the same time. Such structures arise in the context of social networks or protein interactions where underlying graphs have adjacency matrices which are block-diagonal in the appropriate basis. We introduce a convex mixed penalty which involves `1-norm and trace norm simultaneously. We obtain an oracle inequality which indicates how the two effects interact according to the nature of the target matrix. We bound generalization error in the link prediction problem. We also develop proximal descent strategies to solve the optimization problem efficiently and evaluate performance on synthetic and real data sets.", "human_title": "Estimation of Simultaneously Sparse and Low Rank Matrices.", "sys_gen": {"bart_base": "A Convex Mixed Penalty for Sparse and Low-Rank Matrix Estimation", "bart_cnn": "A Convex Mixed Penalties for Sparse and Low-Rank Matrix Estimation with Application to Protein Interaction Problems.", "t5_small": "A Penalized Matrix Estimation Procedure for Protein Interactions", "gpt2": " A Convex Mixed Penalty for Link Prediction", "pegasus_xsum": "Sparse and Low-Rank Matrix Estimation via Convex Mixed Penalties"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.061, "bart_base_bertscore": 0.889, "bart_base_moverscore": 0.655, "bart_cnn_bartscore": -4.585, "bart_cnn_bertscore": 0.883, "bart_cnn_moverscore": 0.596, "bart_xsum_bartscore": -4.477, "bart_xsum_bertscore": 0.888, "bart_xsum_moverscore": 0.657, "t5_small_bartscore": -5.539, "t5_small_bertscore": 0.861, "t5_small_moverscore": 0.562, "gpt2_bartscore": -5.678, "gpt2_bertscore": 0.871, "gpt2_moverscore": 0.582, "pegasus_xsum_bartscore": -4.581, "pegasus_xsum_bertscore": 0.892, "pegasus_xsum_moverscore": 0.645}}, {"abstract": "In this work, we revisit Shared Task 1 from the 2012 *SEM Conference: the automated analysis of negation. Unlike the vast majority of participating systems in 2012, our approach works over explicit and formal representations of propositional semantics, i.e. derives the notion of negation scope assumed in this task from the structure of logical-form meaning representations. We relate the task-specific interpretation of (negation) scope to the concept of (quantifier and operator) scope in mainstream underspecified semantics. With reference to an explicit encoding of semantic predicate-argument structure, we can operationalize the annotation decisions made for the 2012 *SEM task, and demonstrate how a comparatively simple system for negation scope resolution can be built from an off-the-shelf deep parsing system. In a system combination setting, our approach improves over the best published results on this task to date.", "human_title": "Simple Negation Scope Resolution through Deep Parsing: A Semantic Solution to a Semantic Problem", "sys_gen": {"bart_cnn": "Revisiting Shared Task 1: Negation Scope Resolution in Underspecified Semantics with Logical-Form Meaning Represent", "bart_xsum": "Automated Negation Scope Resolution over Explicit and Formal Semantics", "t5_small": "Shared Task 1: the Automated Analyse of Negation", "gpt2": " Automatic Interpretation of Negation Scope", "pegasus_xsum": "Revisiting Shared Task 1 from the 2012 *SEM Conference: The Automated Analysis of Negation Scope"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.289, "bart_base_bertscore": 0.885, "bart_base_moverscore": 0.587, "bart_cnn_bartscore": -4.117, "bart_cnn_bertscore": 0.88, "bart_cnn_moverscore": 0.606, "bart_xsum_bartscore": -4.096, "bart_xsum_bertscore": 0.891, "bart_xsum_moverscore": 0.596, "t5_small_bartscore": -4.829, "t5_small_bertscore": 0.873, "t5_small_moverscore": 0.566, "gpt2_bartscore": -3.66, "gpt2_bertscore": 0.899, "gpt2_moverscore": 0.579, "pegasus_xsum_bartscore": -5.593, "pegasus_xsum_bertscore": 0.864, "pegasus_xsum_moverscore": 0.57}}, {"abstract": "A tree-structured multiplicative gamma process (TMGP) is developed, for inferring the depth of a tree-based factor-analysis model. This new model is coupled with the nested Chinese restaurant process, to nonparametrically infer the depth and width (structure) of the tree. In addition to developing the model, theoretical properties of the TMGP are addressed, and a novel MCMC sampler is developed. The structure of the inferred tree is used to learn relationships between high-dimensional data, and the model is also applied to compressive sensing and interpolation of incomplete images.", "human_title": "Tree-Structured Infinite Sparse Factor Model.", "sys_gen": {"bart_base": "Tree-Structured Multiplicative Gamma Processes for Tree-based Factor-Analysis", "bart_cnn": "Tree-Structured Multiplicative Gamma Processes for Inferring Depth and Width in High-Dimensional Factor Analysis Models", "bart_xsum": "Tree-Structured Multiplicative Gamma Processes for Tree-based Factor Analysis", "t5_small": "Inferring Tree-Based Factor-Analyse Models", "gpt2": " Nested Chinese Restaurant Factor Analysis"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.667, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.239, "bart_base_bertscore": 0.897, "bart_base_moverscore": 0.635, "bart_cnn_bartscore": -4.336, "bart_cnn_bertscore": 0.887, "bart_cnn_moverscore": 0.591, "bart_xsum_bartscore": -4.003, "bart_xsum_bertscore": 0.9, "bart_xsum_moverscore": 0.65, "t5_small_bartscore": -5.337, "t5_small_bertscore": 0.874, "t5_small_moverscore": 0.63, "gpt2_bartscore": -6.614, "gpt2_bertscore": 0.877, "gpt2_moverscore": 0.598, "pegasus_xsum_bartscore": -4.354, "pegasus_xsum_bertscore": 0.894, "pegasus_xsum_moverscore": 0.654}}, {"abstract": "Data-driven refinement of non-terminal categories has been demonstrated to be a reliable technique for improving monolingual parsing with PCFGs. In this paper, we extend these techniques to learn latent refinements of single-category synchronous grammars, so as to improve translation performance. We compare two estimators for this latent-variable model: one based on EM and the other is a spectral algorithm based on the method of moments. We evaluate their performance on a Chinese\u2013English translation task. The results indicate that we can achieve significant gains over the baseline with both approaches, but in particular the momentsbased estimator is both faster and performs better than EM.", "human_title": "Latent-Variable Synchronous CFGs for Hierarchical Translation", "sys_gen": {"bart_cnn": "Learning Latent Refinements of Single Category Synchronous Grammars for Statistical Machine Translation with Moments-Based PCFG", "bart_xsum": "Learning Latent Refinements of Synchronous Grammars for Statistical Machine Translation", "t5_small": "Learning Latent Raffination of Single-Category Synchronous Grammars", "gpt2": " Latent Refinement of Synchronous Grammars for Machine Translation", "pegasus_xsum": "Learning Latent Refinements of Synchronous Grammars for Statistical Machine Translation"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 3.0, "human_title_bws": -1.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.059, "bart_base_bertscore": 0.895, "bart_base_moverscore": 0.625, "bart_cnn_bartscore": -5.36, "bart_cnn_bertscore": 0.875, "bart_cnn_moverscore": 0.573, "bart_xsum_bartscore": -4.602, "bart_xsum_bertscore": 0.888, "bart_xsum_moverscore": 0.609, "t5_small_bartscore": -4.867, "t5_small_bertscore": 0.886, "t5_small_moverscore": 0.601, "gpt2_bartscore": -4.279, "gpt2_bertscore": 0.894, "gpt2_moverscore": 0.613, "pegasus_xsum_bartscore": -4.669, "pegasus_xsum_bertscore": 0.888, "pegasus_xsum_moverscore": 0.605}}, {"abstract": "Tree Adjoining Grammars have well-known advantages, but are typically considered too difficult for practical systems. We demonstrate that, when done right, adjoining improves translation quality without becoming computationally intractable. Using adjoining to model optionality allows general translation patterns to be learned without the clutter of endless variations of optional material. The appropriate modifiers can later be spliced in as needed. In this paper, we describe a novel method for learning a type of Synchronous Tree Adjoining Grammar and associated probabilities from aligned tree/string training data. We introduce a method of converting these grammars to a weakly equivalent tree transducer for decoding. Finally, we show that adjoining results in an end-to-end improvement of +0.8 BLEU over a baseline statistical syntax-based MTmodel on a large-scale Arabic/EnglishMT task.", "human_title": "Synchronous Tree Adjoining Machine Translation", "sys_gen": {"bart_base": "Acquiring Synchronous Tree Adjoining Grammars with Application to Machine Translation", "bart_cnn": "Learning Tree Adjoining Grammars from Aligned Tree/String Training Data with Application to Decoding Arabic-to-English", "bart_xsum": "Learning Synchronous Tree Adjoining Grammars for Statistical Machine Translation", "t5_small": "A Synchronous Tree Adjoining Grammar with Adjoining", "gpt2": " Improving Syntax-Based Machine Translation with Aligned Tree Adjoining Grammars"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.533, "bart_base_bertscore": 0.891, "bart_base_moverscore": 0.65, "bart_cnn_bartscore": -5.642, "bart_cnn_bertscore": 0.87, "bart_cnn_moverscore": 0.555, "bart_xsum_bartscore": -4.175, "bart_xsum_bertscore": 0.91, "bart_xsum_moverscore": 0.655, "t5_small_bartscore": -4.065, "t5_small_bertscore": 0.884, "t5_small_moverscore": 0.641, "gpt2_bartscore": -4.467, "gpt2_bertscore": 0.892, "gpt2_moverscore": 0.589, "pegasus_xsum_bartscore": -4.095, "pegasus_xsum_bertscore": 0.915, "pegasus_xsum_moverscore": 0.653}}, {"abstract": "Compositional embedding models build a representation for a linguistic structure based on its component word embeddings. While recent work has combined these word embeddings with hand crafted features for improved performance, it was restricted to a small number of features due to model complexity, thus limiting its applicability. We propose a new model that conjoins features and word embeddings while maintaing a small number of parameters by learning feature embeddings jointly with the parameters of a compositional model. The result is a method that can scale to more features and more labels, while avoiding overfitting. We demonstrate that our model attains state-of-the-art results on ACE and ERE fine-grained relation extraction.", "human_title": "Combining Word Embeddings and Feature Embeddings for Fine-grained Relation Extraction", "sys_gen": {"bart_base": "Combining Features and Word Embeddings for Compositional Representation Learning", "bart_cnn": "Joint Learning of Word Embeddings and Features for Compositional Embedding with Application to Linguistic Information Extraction", "bart_xsum": "Scalable Feature Embedding Models for Fine-Grained Relation Extraction", "t5_small": "Learning Features and Word Embeddings with Compositional Models", "pegasus_xsum": "Joint Learning of Feature Embeddings and Word Embeddings for Fine-grained Relation Extraction"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.401, "bart_base_bertscore": 0.907, "bart_base_moverscore": 0.647, "bart_cnn_bartscore": -4.325, "bart_cnn_bertscore": 0.884, "bart_cnn_moverscore": 0.606, "bart_xsum_bartscore": -3.286, "bart_xsum_bertscore": 0.915, "bart_xsum_moverscore": 0.625, "t5_small_bartscore": -3.594, "t5_small_bertscore": 0.892, "t5_small_moverscore": 0.61, "gpt2_bartscore": -4.93, "gpt2_bertscore": 0.881, "gpt2_moverscore": 0.576, "pegasus_xsum_bartscore": -3.216, "pegasus_xsum_bertscore": 0.921, "pegasus_xsum_moverscore": 0.674}}, {"abstract": "We present a method for recognizing semantic role arguments using a kernel on weighted marked ordered labeled trees (the WMOLT kernel). We extend the kernels on marked ordered labeled trees (Kazama and Torisawa, 2005) so that the mark can be weighted according to its importance. We improve the accuracy by giving more weights on subtrees that contain the predicate and the argument nodes with this ability. Although Kazama and Torisawa (2005) presented fast training with tree kernels, the slow classification during runtime remained to be solved. In this paper, we give a solution that uses an efficient DP updating procedure applicable in argument recognition. We demonstrate that the WMOLT kernel improves the accuracy, and our speed-up method makes the recognition more than 40 times faster than the naive classification.", "human_title": "Semantic Role Recognition Using Kernels on Weighted Marked Ordered Labeled Trees", "sys_gen": {"bart_base": "Fast and Accurate Semantic Role Argument Recognition with Weighted marked Ordered Labeled Trees", "bart_cnn": "Fast Kernel for Recognizing Semantic Role Arguments using Weighted Marked Ordered Labeled Tree Kernels and Fast Training", "bart_xsum": "A Kernel on Weighted Marked Ordered Trees for Semantic Role Argument Recognition", "t5_small": "Identifying Semantic Role Arguments using WMOLT Kernels", "pegasus_xsum": "Efficient Classification of Semantic Role Arguments Using the WMOLT Kernel on marked-ordered trees"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.058, "bart_base_bertscore": 0.916, "bart_base_moverscore": 0.671, "bart_cnn_bartscore": -3.531, "bart_cnn_bertscore": 0.93, "bart_cnn_moverscore": 0.652, "bart_xsum_bartscore": -3.06, "bart_xsum_bertscore": 0.922, "bart_xsum_moverscore": 0.696, "t5_small_bartscore": -4.404, "t5_small_bertscore": 0.879, "t5_small_moverscore": 0.602, "gpt2_bartscore": -3.701, "gpt2_bertscore": 0.93, "gpt2_moverscore": 0.681, "pegasus_xsum_bartscore": -4.936, "pegasus_xsum_bertscore": 0.888, "pegasus_xsum_moverscore": 0.655}}, {"abstract": "Parsing sentences to linguistically-expressive semantic representations is a key goal of Natural Language Processing. Yet statistical parsing has focussed almost exclusively on bilexical dependencies or domain-specific logical forms. We propose a neural encoder-decoder transition-based parser which is the first full-coverage semantic graph parser for Minimal Recursion Semantics (MRS). The model architecture uses stack-based embedding features, predicting graphs jointly with unlexicalized predicates and their token alignments. Our parser is more accurate than attention-based baselines on MRS, and on an additional Abstract Meaning Representation (AMR) benchmark, and GPU batch processing makes it an order of magnitude faster than a high-precision grammar-based parser. Further, the 86.69% Smatch score of our MRS parser is higher than the upper-bound on AMR parsing, making MRS an attractive choice as a semantic representation.", "human_title": "Robust Incremental Neural Semantic Graph Parsing", "sys_gen": {"bart_base": "Neural Transition-based Semantic Graph Parsing for Minimal Recursion Semantics", "bart_cnn": "Neural Encoder-Decoder Transition-based Parsing of Minimal Recursion Semantic Parsers for Natural Language Processing", "bart_xsum": "A Neural Transition-based Parser for Minimal Recursion Semantics", "t5_small": "Full-coverage Semantic Graph Parsing for Minimal Recursion Semantics", "gpt2": " Neural Decoding for Minimal Recursion Semantics"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.326, "bart_base_bertscore": 0.91, "bart_base_moverscore": 0.647, "bart_cnn_bartscore": -4.881, "bart_cnn_bertscore": 0.878, "bart_cnn_moverscore": 0.589, "bart_xsum_bartscore": -4.993, "bart_xsum_bertscore": 0.898, "bart_xsum_moverscore": 0.61, "t5_small_bartscore": -4.803, "t5_small_bertscore": 0.897, "t5_small_moverscore": 0.634, "gpt2_bartscore": -4.747, "gpt2_bertscore": 0.911, "gpt2_moverscore": 0.671, "pegasus_xsum_bartscore": -4.841, "pegasus_xsum_bertscore": 0.887, "pegasus_xsum_moverscore": 0.64}}, {"abstract": "We describe the Iraq Body Count Corpus (IBC-C) dataset, the first substantial armed conflict-related dataset which can be used for conflict analysis. IBCC provides a ground-truth dataset for conflict specific named entity recognition, slot filling, and event de-duplication. IBCC is constructed using data collected by the Iraq Body Count project which has been recording incidents from the ongoing war in Iraq since 2003. We describe the dataset\u2019s creation, how it can be used for the above three tasks and provide initial baseline results for the first task (named entity recognition) using Hidden Markov Models, Conditional Random Fields, and Recursive Neural Networks.", "human_title": "IBC-C: A Dataset for Armed Conflict Analysis", "sys_gen": {"bart_base": "Iraq Body Count Corpus: A Ground-Truth Dataset for Conflict Resolution and Event Deplication", "bart_cnn": "The Iraq Body Count Corpus: A Dataset for Conflict-related Named Entity Recognition, Slot Filling, and De", "bart_xsum": "Iraq Body Count Corpus: A Ground-truth Dataset for Conflict Analysis and Named Entity Recognition", "t5_small": "IBC-C: The Iraq Body Count Corpus", "pegasus_xsum": "The Iraq Body Count Corpus for Named Entity Recognition, Slot Filling, and Event Deduplication"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.413, "bart_base_bertscore": 0.912, "bart_base_moverscore": 0.606, "bart_cnn_bartscore": -5.039, "bart_cnn_bertscore": 0.89, "bart_cnn_moverscore": 0.562, "bart_xsum_bartscore": -4.532, "bart_xsum_bertscore": 0.911, "bart_xsum_moverscore": 0.598, "t5_small_bartscore": -5.506, "t5_small_bertscore": 0.885, "t5_small_moverscore": 0.578, "gpt2_bartscore": -4.594, "gpt2_bertscore": 0.898, "gpt2_moverscore": 0.597, "pegasus_xsum_bartscore": -5.667, "pegasus_xsum_bertscore": 0.854, "pegasus_xsum_moverscore": 0.532}}, {"abstract": "We derive upper bounds on the generalization error of a learning algorithm in terms of the mutual information between its input and output. The bounds provide an information-theoretic understanding of generalization in learning problems, and give theoretical guidelines for striking the right balance between data fit and generalization by controlling the input-output mutual information. We propose a number of methods for this purpose, among which are algorithms that regularize the ERM algorithm with relative entropy or with random noise. Our work extends and leads to nontrivial improvements on the recent results of Russo and Zou.", "human_title": "Bregman Alternating Direction Method of Multipliers", "sys_gen": {"bart_base": "Generalization Error Bounds on the Input-Output Mutual Information", "bart_cnn": "Generalization Error Bounds on the Generalization Error of Learning Algorithms via Mutual Information Control and Random Noise Regularization.", "bart_xsum": "Generalization Error Bounds for Learning Algorithms with Relative Entropy and Random Noise", "t5_small": "Generalization of a Learning Algorithm", "pegasus_xsum": "Upper Bounds on the Generalization Error"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -6.781, "bart_base_bertscore": 0.836, "bart_base_moverscore": 0.58, "bart_cnn_bartscore": -5.752, "bart_cnn_bertscore": 0.831, "bart_cnn_moverscore": 0.545, "bart_xsum_bartscore": -5.761, "bart_xsum_bertscore": 0.839, "bart_xsum_moverscore": 0.576, "t5_small_bartscore": -5.72, "t5_small_bertscore": 0.853, "t5_small_moverscore": 0.578, "gpt2_bartscore": -6.847, "gpt2_bertscore": 0.844, "gpt2_moverscore": 0.59, "pegasus_xsum_bartscore": -6.471, "pegasus_xsum_bertscore": 0.85, "pegasus_xsum_moverscore": 0.595}}, {"abstract": "E cient exploration remains a major challenge for reinforcement learning (RL). Common dithering strategies for exploration, such as \u2018-greedy, do not carry out temporally-extended (or deep) exploration; this can lead to exponentially larger data requirements. However, most algorithms for statistically e cient RL are not computationally tractable in complex environments. Randomized value functions o er a promising approach to e cient exploration with generalization, but existing algorithms are not compatible with nonlinearly parameterized value functions. As a first step towards addressing such contexts we develop bootstrapped DQN. We demonstrate that bootstrapped DQN can combine deep exploration with deep neural networks for exponentially faster learning than any dithering strategy. In the Arcade Learning Environment bootstrapped DQN substantially improves learning speed and cumulative performance across most games.", "human_title": "Deep Exploration via Bootstrapped DQN", "sys_gen": {"bart_cnn": "Bootstrapped DQN: Bootstrapped Exploration with Deep Neural Networks for Efficient Reinforcement Learning in Complex Environments", "bart_xsum": "Bootstrapped Deep Exploration for Reinforcement Learning in Arcade Games", "t5_small": "Bootstrapped DQN for Exponentally Faster Reinforcement Learning", "gpt2": " Randomized Value Functions for Efficient Exploration", "pegasus_xsum": "bootstrappedN: Accelerating Deep Exploration for Reinforcement Learning"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.609, "bart_base_bertscore": 0.873, "bart_base_moverscore": 0.572, "bart_cnn_bartscore": -4.411, "bart_cnn_bertscore": 0.872, "bart_cnn_moverscore": 0.529, "bart_xsum_bartscore": -5.302, "bart_xsum_bertscore": 0.882, "bart_xsum_moverscore": 0.592, "t5_small_bartscore": -4.797, "t5_small_bertscore": 0.89, "t5_small_moverscore": 0.581, "gpt2_bartscore": -4.275, "gpt2_bertscore": 0.903, "gpt2_moverscore": 0.597, "pegasus_xsum_bartscore": -5.9, "pegasus_xsum_bertscore": 0.868, "pegasus_xsum_moverscore": 0.593}}, {"abstract": "Methods for name matching, an important component to support downstream tasks such as entity linking and entity clustering, have focused on alphabetic languages, primarily English. In contrast, logogram languages such as Chinese remain untested. We evaluate methods for name matching in Chinese, including both string matching and learning approaches. Our approach, based on new representations for Chinese, improves both name matching and a downstream entity clustering task.", "human_title": "An Empirical Study of Chinese Name Matching and Applications", "sys_gen": {"bart_base": "Chinese Name Matching in Logogram Languages Using New Representations", "bart_cnn": "Named Entity Clustering and String Matching in Chinese: A Case Study on Alphabetic Languages using Word Vectors", "bart_xsum": "Name Matching in Logogram Languages: A Case Study on Chinese", "gpt2": " Name Matching in Logogram Languages", "pegasus_xsum": "Name Matching in Chinese: New Representations and Learning"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.488, "bart_base_bertscore": 0.9, "bart_base_moverscore": 0.601, "bart_cnn_bartscore": -4.803, "bart_cnn_bertscore": 0.877, "bart_cnn_moverscore": 0.58, "bart_xsum_bartscore": -5.147, "bart_xsum_bertscore": 0.887, "bart_xsum_moverscore": 0.583, "t5_small_bartscore": -4.17, "t5_small_bertscore": 0.887, "t5_small_moverscore": 0.59, "gpt2_bartscore": -5.528, "gpt2_bertscore": 0.879, "gpt2_moverscore": 0.567, "pegasus_xsum_bartscore": -3.55, "pegasus_xsum_bertscore": 0.917, "pegasus_xsum_moverscore": 0.592}}, {"abstract": "Neural language models are a critical component of state-of-the-art systems for machine translation, summarization, audio transcription, and other tasks. These language models are almost universally autoregressive in nature, generating sentences one token at a time from left to right. This paper studies the influence of token generation order on model quality via a novel two-pass language model that produces partially-filled sentence \"templates\" and then fills in missing tokens. We compare various strategies for structuring these two passes and observe a surprisingly large variation in model quality. We find the most effective strategy generates function words in the first pass followed by content words in the second. We believe these experimental results justify a more extensive investigation of the generation order for neural language models.", "human_title": "The Importance of Generation Order in Language Modeling", "sys_gen": {"bart_base": "The Effect of Token Generation Order on Neural Language Models", "bart_xsum": "Generation Order in Neural Language Models: A Two-Pass Approach", "t5_small": "A Two-Pass Language Model for Neural Language Models", "gpt2": " Generating Templates for Neural Language Models", "pegasus_xsum": "An Empirical Study of the Effect of Generation Order on Neural Language Models"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.333, "bart_base_bertscore": 0.917, "bart_base_moverscore": 0.635, "bart_cnn_bartscore": -5.095, "bart_cnn_bertscore": 0.902, "bart_cnn_moverscore": 0.579, "bart_xsum_bartscore": -4.843, "bart_xsum_bertscore": 0.913, "bart_xsum_moverscore": 0.614, "t5_small_bartscore": -5.832, "t5_small_bertscore": 0.908, "t5_small_moverscore": 0.616, "gpt2_bartscore": -5.615, "gpt2_bertscore": 0.89, "gpt2_moverscore": 0.589, "pegasus_xsum_bartscore": -3.711, "pegasus_xsum_bertscore": 0.933, "pegasus_xsum_moverscore": 0.643}}, {"abstract": "Political identity is often manifested in language variation, but the relationship between the two is still relatively unexplored from a quantitative perspective. This study examines the use of Catalan, a language local to the semi-autonomous region of Catalonia in Spain, on Twitter in discourse related to the 2017 independence referendum. We corroborate prior findings that pro-independence tweets are more likely to include the local language than anti-independence tweets. We also find that Catalan is used more often in referendum-related discourse than in other contexts, contrary to prior findings on language variation. This suggests a strong role for the Catalan language in the expression of Catalonian political identity.", "human_title": "Si O No, Que Penses? Catalonian Independence and Linguistic Identity on Social Media", "sys_gen": {"bart_base": "The role of Catalan in the expression of Catalonian political identity on Twitter", "bart_cnn": "The use of Catalan, a Language Local to the Semi-Autonomous Region of Catalonia for the expression of Catalonian Political Identity", "t5_small": "The Use of Catalan in Discourse related to the 2017 independence referendum", "gpt2": " Language and Political Identity in Catalan", "pegasus_xsum": "The role of the Catalan language in the expression of Catalonian political identity"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.744, "bart_base_bertscore": 0.877, "bart_base_moverscore": 0.564, "bart_cnn_bartscore": -4.072, "bart_cnn_bertscore": 0.85, "bart_cnn_moverscore": 0.545, "bart_xsum_bartscore": -3.41, "bart_xsum_bertscore": 0.885, "bart_xsum_moverscore": 0.58, "t5_small_bartscore": -4.735, "t5_small_bertscore": 0.863, "t5_small_moverscore": 0.552, "gpt2_bartscore": -5.118, "gpt2_bertscore": 0.869, "gpt2_moverscore": 0.554, "pegasus_xsum_bartscore": -3.191, "pegasus_xsum_bertscore": 0.88, "pegasus_xsum_moverscore": 0.561}}, {"abstract": "Traditionally, Referring Expression Generation (REG) models first decide on the form and then on the content of references to discourse entities in text, typically relying on features such as salience and grammatical function. In this paper, we present a new approach (NeuralREG), relying on deep neural networks, which makes decisions about form and content in one go without explicit feature extraction. Using a delexicalized version of the WebNLG corpus, we show that the neural model substantially improves over two strong baselines.", "human_title": "NeuralREG: An end-to-end approach to referring expression generation", "sys_gen": {"bart_base": "Neural Referring Expression Generation with Deep Neural Networks", "bart_xsum": "Neural Referring Expression Generation with Deep Neural Networks", "t5_small": "Neural Referring Expression Generation with Deep Neural Networks", "gpt2": " Neural REG for Referring Expression Generation", "pegasus_xsum": "Neural REG: A Neural Approach to Referring Expression Generation"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.178, "bart_base_bertscore": 0.877, "bart_base_moverscore": 0.588, "bart_cnn_bartscore": -5.531, "bart_cnn_bertscore": 0.861, "bart_cnn_moverscore": 0.575, "bart_xsum_bartscore": -4.791, "bart_xsum_bertscore": 0.877, "bart_xsum_moverscore": 0.596, "t5_small_bartscore": -4.197, "t5_small_bertscore": 0.883, "t5_small_moverscore": 0.595, "gpt2_bartscore": -4.55, "gpt2_bertscore": 0.9, "gpt2_moverscore": 0.616, "pegasus_xsum_bartscore": -3.801, "pegasus_xsum_bertscore": 0.911, "pegasus_xsum_moverscore": 0.63}}, {"abstract": "Developing natural language processing tools for low-resource languages often requires creating resources from scratch. While a variety of semi-supervised methods exist for training from incomplete data, there are open questions regarding what types of training data should be used and how much is necessary. We discuss a series of experiments designed to shed light on such questions in the context of part-of-speech tagging. We obtain timed annotations from linguists for the low-resource languages Kinyarwanda and Malagasy (as well as English) and evaluate how the amounts of various kinds of data affect performance of a trained POS-tagger. Our results show that annotation of word types is the most important, provided a sufficiently capable semi-supervised learning infrastructure is in place to project type information onto a raw corpus. We also show that finitestate morphological analyzers are effective sources of type information when few labeled examples are available.", "human_title": "Real-World Semi-Supervised Learning of POS-Taggers for Low-Resource Languages", "sys_gen": {"bart_base": "Semi-Supervised Learning of Part-of-Speech Tagging Techniques for Low-Resource Languages", "bart_cnn": "Semi-supervised Part-of-Speech Tagging by Timing-Annotated Annotation of Words into Corpora", "bart_xsum": "How Much Data Do You Need to Train a Semi-Supervised Part-of-Speech Tagger?", "t5_small": "Part-of-Speech Tagging with Timed Annotations", "pegasus_xsum": "How Much Data Does a Semi-Supervised Part-of-Speech Tagging System Need?"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.001, "bart_base_bertscore": 0.927, "bart_base_moverscore": 0.686, "bart_cnn_bartscore": -4.686, "bart_cnn_bertscore": 0.861, "bart_cnn_moverscore": 0.573, "bart_xsum_bartscore": -3.553, "bart_xsum_bertscore": 0.881, "bart_xsum_moverscore": 0.575, "t5_small_bartscore": -4.474, "t5_small_bertscore": 0.888, "t5_small_moverscore": 0.595, "gpt2_bartscore": -3.224, "gpt2_bertscore": 0.916, "gpt2_moverscore": 0.638, "pegasus_xsum_bartscore": -3.972, "pegasus_xsum_bertscore": 0.873, "pegasus_xsum_moverscore": 0.57}}, {"abstract": "Sentiment lexicons have been leveraged as a useful source of features for sentiment analysis models, leading to the state-of-the-art accuracies. On the other hand, most existing methods use sentiment lexicons without considering context, typically taking the count, sum of strength, or maximum sentiment scores over the whole input. We propose a context-sensitive lexicon-based method based on a simple weighted-sum model, using a recurrent neural network to learn the sentiments strength, intensification and negation of lexicon sentiments in composing the sentiment value of sentences. Results show that our model can not only learn such operation details, but also give significant improvements over state-of-the-art recurrent neural network baselines without lexical features, achieving the best results on a Twitter benchmark.", "human_title": "Context-Sensitive Lexicon Features for Neural Sentiment Analysis", "sys_gen": {"bart_base": "Context-sensitive Sentiment Lexicon Learning with Recurrent Neural Networks", "bart_cnn": "Learning Sentiment Lexicons for Sentiment Analysis using Weighted-Sum Model and Recurrent Neural Networks Based on a Recurrent", "bart_xsum": "Learning Lexical Features for Context-Sensitive Sentiment Analysis with Recurrent Neural Networks", "t5_small": "Context-Sensitive Sentiment Lexicons with Recurrent Neural Network", "pegasus_xsum": "A Context-sensitive Lexicon-based Sentiment Analysis Method Using Recurrent Neural Networks"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.799, "bart_base_bertscore": 0.914, "bart_base_moverscore": 0.655, "bart_cnn_bartscore": -4.666, "bart_cnn_bertscore": 0.898, "bart_cnn_moverscore": 0.612, "bart_xsum_bartscore": -3.834, "bart_xsum_bertscore": 0.939, "bart_xsum_moverscore": 0.698, "t5_small_bartscore": -3.739, "t5_small_bertscore": 0.926, "t5_small_moverscore": 0.71, "gpt2_bartscore": -3.285, "gpt2_bertscore": 0.936, "gpt2_moverscore": 0.705, "pegasus_xsum_bartscore": -3.872, "pegasus_xsum_bertscore": 0.942, "pegasus_xsum_moverscore": 0.657}}, {"abstract": "Transfer and multi-task learning have traditionally focused on either a single source-target pair or very few, similar tasks. Ideally, the linguistic levels of morphology, syntax and semantics would benefit each other by being trained in a single model. We introduce a joint many-task model together with a strategy for successively growing its depth to solve increasingly complex tasks. Higher layers include shortcut connections to lower-level task predictions to reflect linguistic hierarchies. We use a simple regularization term to allow for optimizing all model weights to improve one task's loss without exhibiting catastrophic interference of the other tasks. Our single end-to-end model obtains state-of-the-art or competitive results on five different tasks from tagging, parsing, relatedness, and entailment tasks.", "human_title": "A Joint Many-Task Model: Growing a Neural Network for Multiple NLP Tasks", "sys_gen": {"bart_base": "A Joint Many-Task Model for Transfer and Multi-Task Learning", "bart_cnn": "Joint Many-Task Transfer and Multi-task Learning with Regularization of Linguistic Hierarchies: A Case Study", "bart_xsum": "Joint Many-Task Learning for Transfer and Multi-Task Tasks", "gpt2": " Joint Many-Task Learning for Morphology, Syntax and Semantics", "pegasus_xsum": "A Joint Many-Task Model for Morphology, Syntax and Semantics"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.271, "bart_base_bertscore": 0.922, "bart_base_moverscore": 0.614, "bart_cnn_bartscore": -4.081, "bart_cnn_bertscore": 0.895, "bart_cnn_moverscore": 0.589, "bart_xsum_bartscore": -3.677, "bart_xsum_bertscore": 0.905, "bart_xsum_moverscore": 0.595, "t5_small_bartscore": -4.138, "t5_small_bertscore": 0.925, "t5_small_moverscore": 0.589, "gpt2_bartscore": -5.069, "gpt2_bertscore": 0.906, "gpt2_moverscore": 0.567, "pegasus_xsum_bartscore": -3.511, "pegasus_xsum_bertscore": 0.904, "pegasus_xsum_moverscore": 0.602}}, {"abstract": "Word segmentation is usually recognized as the first step for many Chinese natural language processing tasks, yet its impact on these subsequent tasks is relatively under-studied. For example, how to solve the mismatch problem when applying an existing word segmenter to new data? Does a better word segmenter yield a better subsequent NLP task performance? In this work, we conduct an initial attempt to answer these questions on two related subsequent tasks: semantic slot filling in spoken language understanding and named entity recognition. We propose three techniques to solve the mismatch problem: using word segmentation outputs as additional features, adaptation with partial-learning and taking advantage of n-best word segmentation list. Experimental results demonstrate the effectiveness of these techniques for both tasks and we achieve an error reduction of about 11% for spoken language understanding and 24% for named entity recognition over the baseline systems.", "human_title": "An Empirical Study of Automatic Chinese Word Segmentation for Spoken Language Understanding and Named Entity Recognition", "sys_gen": {"bart_base": "How to Solve the Mismatch Problem in Chinese Word Segmentation", "bart_xsum": "Solving the Mismatch Problem in Word Segmentation for Spoken Language Understanding and Named Entity Recognition Tasks", "t5_small": "Resolving the Mismatch Problem with Semantic Slot Filling in Word Segmentation", "gpt2": " Semantic Slot Filling in Spoken Language Understanding and Named Entity Recognition", "pegasus_xsum": "Solving the Mismatch Problem in Word Segmentation for Spoken Language Understanding and Named Entity Recognition"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.459, "bart_base_bertscore": 0.88, "bart_base_moverscore": 0.567, "bart_cnn_bartscore": -4.132, "bart_cnn_bertscore": 0.912, "bart_cnn_moverscore": 0.64, "bart_xsum_bartscore": -3.003, "bart_xsum_bertscore": 0.935, "bart_xsum_moverscore": 0.672, "t5_small_bartscore": -4.815, "t5_small_bertscore": 0.869, "t5_small_moverscore": 0.555, "gpt2_bartscore": -4.863, "gpt2_bertscore": 0.888, "gpt2_moverscore": 0.6, "pegasus_xsum_bartscore": -2.311, "pegasus_xsum_bertscore": 0.946, "pegasus_xsum_moverscore": 0.689}}, {"abstract": "Transfer learning has been used in opinion analysis to make use of available language resources for other resource scarce languages. However, the cumulative class noise in transfer learning adversely affects performance when more training data is used. In this paper, we propose a novel method in transductive transfer learning to identify noises through the detection of negative transfers. Evaluation on NLP&CC 2013 cross-lingual opinion analysis dataset shows that our approach outperforms the state-of-the-art systems. More significantly, our system shows a monotonic increase trend in performance improvement when more training data are used.", "human_title": "Cross-lingual Opinion Analysis via Negative Transfer Detection", "sys_gen": {"bart_base": "Detecting Negative Transfer Effects in Transductive Transfer Learning.", "bart_cnn": "Detecting Noise in Transfer Learning for Cross-Lingual Opinion Analysis of Negative Transfers: A Case Study on N", "bart_xsum": "Identifying Class Noise in Transductive Transfer Learning for Cross-lingual Opinion Analysis", "t5_small": "Negative Class Noise Detection in Transductive Transfer Learning", "gpt2": " Transductive Transfer Learning for Cross-Lingual Opinion Analysis"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.369, "bart_base_bertscore": 0.874, "bart_base_moverscore": 0.592, "bart_cnn_bartscore": -4.646, "bart_cnn_bertscore": 0.889, "bart_cnn_moverscore": 0.592, "bart_xsum_bartscore": -4.453, "bart_xsum_bertscore": 0.912, "bart_xsum_moverscore": 0.624, "t5_small_bartscore": -6.306, "t5_small_bertscore": 0.87, "t5_small_moverscore": 0.589, "gpt2_bartscore": -5.233, "gpt2_bertscore": 0.897, "gpt2_moverscore": 0.652, "pegasus_xsum_bartscore": -5.245, "pegasus_xsum_bertscore": 0.902, "pegasus_xsum_moverscore": 0.641}}, {"abstract": "We define the problem of recognizing entailed relations \u2013 given an open set of relations, find all occurrences of the relations of interest in a given document set \u2013 and pose it as a challenge to scalable information extraction and retrieval. Existing approaches to relation recognition do not address well problems with an open set of relations and a need for high recall: supervised methods are not easily scaled, while unsupervised and semi-supervised methods address a limited aspect of the problem, as they are restricted to frequent, explicit, highly localized patterns. We argue that textual entailment (TE) is necessary to solve such problems, propose a scalable TE architecture, and provide preliminary results on an Entailed Relation Recognition task.", "human_title": "A Framework for Entailed Relation Recognition", "sys_gen": {"bart_base": "Relation Recognition with Textual Entailment: A Scalable Approach", "bart_cnn": "Recognizing Entailed Relation Recognition with Textual Entailment and Semi-Supervised Methods. A Scalable Architecture", "t5_small": "Adaptive Textual Entailment for Entailed Relation Recognition", "gpt2": " Towards Scalable Information Extraction and Retrieval", "pegasus_xsum": "Textual Entailment for Open-Set Relation Recognition"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.133, "bart_base_bertscore": 0.909, "bart_base_moverscore": 0.626, "bart_cnn_bartscore": -3.902, "bart_cnn_bertscore": 0.918, "bart_cnn_moverscore": 0.587, "bart_xsum_bartscore": -3.607, "bart_xsum_bertscore": 0.924, "bart_xsum_moverscore": 0.67, "t5_small_bartscore": -3.764, "t5_small_bertscore": 0.924, "t5_small_moverscore": 0.641, "gpt2_bartscore": -4.46, "gpt2_bertscore": 0.896, "gpt2_moverscore": 0.616, "pegasus_xsum_bartscore": -3.804, "pegasus_xsum_bertscore": 0.924, "pegasus_xsum_moverscore": 0.664}}, {"abstract": "Aspect term extraction aims to extract aspect terms from review texts as opinion targets for sentiment analysis. One of the big challenges with this task is the lack of sufficient annotated data. While data augmentation is potentially an effective technique to address the above issue, it is uncontrollable as it may change aspect words and aspect labels unexpectedly. In this paper, we formulate the data augmentation as a conditional generation task: generating a new sentence while preserving the original opinion targets and labels. We propose a masked sequence-to-sequence method for conditional augmentation of aspect term extraction. Unlike existing augmentation approaches, ours is controllable and allows to generate more diversified sentences. Experimental results confirm that our method alleviates the data scarcity problem significantly. It also effectively boosts the performances of several current models for aspect term extraction.", "human_title": "Conditional Augmentation for Aspect Term Extraction via Masked Sequence-to-Sequence Generation", "sys_gen": {"bart_base": "Conditional Augmentation of Aspect Term Extraction as a Conditional Generation Task", "bart_cnn": "Conditional Augmentation of Aspect Term Extraction: A Masked Sequence-to-Sequence Method for Sentiment Analysis", "bart_xsum": "Conditional Augmentation of Aspect Term Extraction via Conditional Generation", "t5_small": "Aspect term Extraction with Conditional Error", "pegasus_xsum": "Conditional Aspect Term Extraction via Masked Sequence-to-Sequence Generation"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.405, "bart_base_bertscore": 0.931, "bart_base_moverscore": 0.66, "bart_cnn_bartscore": -2.288, "bart_cnn_bertscore": 0.959, "bart_cnn_moverscore": 0.71, "bart_xsum_bartscore": -1.908, "bart_xsum_bertscore": 0.93, "bart_xsum_moverscore": 0.675, "t5_small_bartscore": -3.285, "t5_small_bertscore": 0.9, "t5_small_moverscore": 0.604, "gpt2_bartscore": -2.83, "gpt2_bertscore": 0.918, "gpt2_moverscore": 0.632, "pegasus_xsum_bartscore": -2.162, "pegasus_xsum_bertscore": 0.937, "pegasus_xsum_moverscore": 0.673}}, {"abstract": "Spoken monologues feature greater sentence length and structural complexity than do spoken dialogues. To achieve high parsing performance for spoken monologues, it could prove effective to simplify the structure by dividing a sentence into suitable language units. This paper proposes a method for dependency parsing of Japanese monologues based on sentence segmentation. In this method, the dependency parsing is executed in two stages: at the clause level and the sentence level. First, the dependencies within a clause are identified by dividing a sentence into clauses and executing stochastic dependency parsing for each clause. Next, the dependencies over clause boundaries are identified stochastically, and the dependency structure of the entire sentence is thus completed. An experiment using a spoken monologue corpus shows this method to be effective for efficient dependency parsing of Japanese monologue sentences.", "human_title": "Dependency Parsing of Japanese Spoken Monologue Based on Clause Boundaries", "sys_gen": {"bart_base": "Dependency Parsing of Japanese Monologues Based on Sentence Segmentation", "bart_cnn": "Dependency Parsing of Japanese Monologue Sentences Using Sentence Segmentation and Stochastic Dependency Parser", "bart_xsum": "Sentence Segmentation for Dependency Parsing of Japanese Monologues", "gpt2": " Dependency Parsing of Japanese Monologues Using Sentence Segmentation", "pegasus_xsum": "Dependency Parsing of Japanese Spoken Monologues Based on Sentence Segmentation"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.667, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.713, "bart_base_bertscore": 0.92, "bart_base_moverscore": 0.7, "bart_cnn_bartscore": -3.492, "bart_cnn_bertscore": 0.901, "bart_cnn_moverscore": 0.637, "bart_xsum_bartscore": -3.524, "bart_xsum_bertscore": 0.905, "bart_xsum_moverscore": 0.668, "t5_small_bartscore": -2.434, "t5_small_bertscore": 0.925, "t5_small_moverscore": 0.669, "gpt2_bartscore": -3.571, "gpt2_bertscore": 0.913, "gpt2_moverscore": 0.658, "pegasus_xsum_bartscore": -2.361, "pegasus_xsum_bertscore": 0.931, "pegasus_xsum_moverscore": 0.737}}, {"abstract": "We address the task of Named Entity Disambiguation (NED) for noisy text. We present WikilinksNED, a large-scale NED dataset of text fragments from the web, which is significantly noisier and more challenging than existing news-based datasets. To capture the limited and noisy local context surrounding each mention, we design a neural model and train it with a novel method for sampling informative negative examples. We also describe a new way of initializing word and entity embeddings that significantly improves performance. Our model significantly outperforms existing state-of-the-art methods on WikilinksNED while achieving comparable performance on a smaller newswire dataset.", "human_title": "Named Entity Disambiguation for Noisy Text", "sys_gen": {"bart_base": "A Large-Scale Named Entity Disambiguation Dataset for Noisy Text", "bart_cnn": "Named Entity Disambiguation for Noisy Text: A Novelty-Based Neural Model for Extracting Informative Examples", "bart_xsum": "WikilinksNED: Noisy Named Entity Disambiguation for Noisy Text", "t5_small": "Named Entity Disambiguation for Noise-Free Text", "pegasus_xsum": "WikilinksNED: A Large-Scale Named Entity Disambiguation Dataset"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.188, "bart_base_bertscore": 0.941, "bart_base_moverscore": 0.699, "bart_cnn_bartscore": -2.654, "bart_cnn_bertscore": 0.925, "bart_cnn_moverscore": 0.602, "bart_xsum_bartscore": -4.816, "bart_xsum_bertscore": 0.899, "bart_xsum_moverscore": 0.669, "t5_small_bartscore": -2.155, "t5_small_bertscore": 0.966, "t5_small_moverscore": 0.775, "gpt2_bartscore": -3.987, "gpt2_bertscore": 0.928, "gpt2_moverscore": 0.697, "pegasus_xsum_bartscore": -2.907, "pegasus_xsum_bertscore": 0.931, "pegasus_xsum_moverscore": 0.778}}, {"abstract": "In neural abstractive summarization, the conventional sequence-to-sequence (seq2seq) model often suffers from repetition and semantic irrelevance. To tackle the problem, we propose a global encoding framework, which controls the information flow from the encoder to the decoder based on the global information of the source context. It consists of a convolutional gated unit to perform global encoding to improve the representations of the source-side information. Evaluations on the LCSTS and the English Gigaword both demonstrate that our model outperforms the baseline models, and the analysis shows that our model is capable of generating summary of higher quality and reducing repetition.", "human_title": "Global Encoding for Abstractive Summarization", "sys_gen": {"bart_cnn": "A Global Encoding Framework for Neural Abstractive Summarization Based on the Source-side Information from Seq2Seq", "bart_xsum": "A Global Encoding Framework for Neural Abstractive Summarization", "t5_small": "Global Encoding for Sequence-to-Sequence Summarization", "gpt2": " Global Encoding for Neural Abstractive Summarization", "pegasus_xsum": "Global Parser for Neural Abstractive Summarization"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 3.0, "human_title_bws": -0.6, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.6, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.2, "gpt2_selected_best": 5.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 4.0, "pegasus_xsum_bws": -0.8}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -2.412, "bart_base_bertscore": 0.972, "bart_base_moverscore": 0.776, "bart_cnn_bartscore": -4.664, "bart_cnn_bertscore": 0.904, "bart_cnn_moverscore": 0.575, "bart_xsum_bartscore": -2.689, "bart_xsum_bertscore": 0.973, "bart_xsum_moverscore": 0.757, "t5_small_bartscore": -2.835, "t5_small_bertscore": 0.93, "t5_small_moverscore": 0.681, "gpt2_bartscore": -2.677, "gpt2_bertscore": 0.971, "gpt2_moverscore": 0.788, "pegasus_xsum_bartscore": -3.88, "pegasus_xsum_bertscore": 0.936, "pegasus_xsum_moverscore": 0.68}}, {"abstract": "The ability to consolidate information of different types is at the core of intelligence, and has tremendous practical value in allowing learning for one task to benefit from generalizations learned for others. In this paper we tackle the challenging task of improving semantic parsing performance, taking UCCA parsing as a test case, and AMR, SDP and Universal Dependencies (UD) parsing as auxiliary tasks. We experiment on three languages, using a uniform transition-based system and learning architecture for all parsing tasks. Despite notable conceptual, formal and domain differences, we show that multitask learning significantly improves UCCA parsing in both in-domain and out-of-domain settings.", "human_title": "Multitask Parsing Across Semantic Representations", "sys_gen": {"bart_base": "Multitask Learning Improves UCCA Parsing", "bart_cnn": "Multitask Learning for UCCA Parsing with Transition-based System and Learning for Improved Semantic Parsing Tasks", "bart_xsum": "Multitask Multitask Learning for Semantic Parsing", "t5_small": "Multitask Learning for Semantic Parsing and Universal Dependency Parsing", "gpt2": " Improving Semantic Parsing Performance by Multitask Learning"}, "human_eval": {"human_title_selected_best": 5.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.2, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 3.0, "bart_xsum_bws": -0.6, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 4.0, "t5_small_bws": -0.8, "gpt2_selected_best": 4.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.8}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -4.343, "bart_base_bertscore": 0.924, "bart_base_moverscore": 0.663, "bart_cnn_bartscore": -5.448, "bart_cnn_bertscore": 0.892, "bart_cnn_moverscore": 0.55, "bart_xsum_bartscore": -3.106, "bart_xsum_bertscore": 0.94, "bart_xsum_moverscore": 0.707, "t5_small_bartscore": -4.068, "t5_small_bertscore": 0.932, "t5_small_moverscore": 0.646, "gpt2_bartscore": -3.833, "gpt2_bertscore": 0.935, "gpt2_moverscore": 0.668, "pegasus_xsum_bartscore": -4.378, "pegasus_xsum_bertscore": 0.918, "pegasus_xsum_moverscore": 0.651}}, {"abstract": "Polysemy is a major characteristic of natural languages. Like words, syntactic forms can have several meanings. Understanding the correct meaning of a syntactic form is of great importance to many NLP applications. In this paper we address an important type of syntactic polysemy \u2013 the multiple possible senses of tense syntactic forms. We make our discussion concrete by introducing the task of Tense Sense Disambiguation (TSD): given a concrete tense syntactic form present in a sentence, select its appropriate sense among a set of possible senses. Using English grammar textbooks, we compiled a syntactic sense dictionary comprising common tense syntactic forms and semantic senses for each. We annotated thousands of BNC sentences using the defined senses. We describe a supervised TSD algorithm trained on these annotations, which outperforms a strong baseline for the task.", "human_title": "Tense Sense Disambiguation: A New Syntactic Polysemy Task", "sys_gen": {"bart_cnn": "Tense Sense Disambiguation: An Important Syntactic Polysemy Dictionary Based on Grammar and Semantic Senses", "bart_xsum": "Tense Sense Disambiguation: Multiple Senses of Tense Syntactic Forms", "t5_small": "Tense Sense Disambiguation for Syntactic Forms", "gpt2": " Tense Sense Disambiguation for Syntactic Polysemy", "pegasus_xsum": "Tense Sense Disambiguation: A Case Study in English Grammar"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 4.0, "human_title_bws": -0.8, "bart_cnn_selected_best": 4.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.8, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.4, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.4, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 4.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.8}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -3.378, "bart_base_bertscore": 0.912, "bart_base_moverscore": 0.651, "bart_cnn_bartscore": -3.029, "bart_cnn_bertscore": 0.933, "bart_cnn_moverscore": 0.638, "bart_xsum_bartscore": -2.591, "bart_xsum_bertscore": 0.924, "bart_xsum_moverscore": 0.662, "t5_small_bartscore": -2.56, "t5_small_bertscore": 0.922, "t5_small_moverscore": 0.653, "gpt2_bartscore": -2.762, "gpt2_bertscore": 0.914, "gpt2_moverscore": 0.661, "pegasus_xsum_bartscore": -2.246, "pegasus_xsum_bertscore": 0.915, "pegasus_xsum_moverscore": 0.659}}, {"abstract": "Sentence compression techniques often assemble output sentences using fragments of lexical sequences such as ngrams or units of syntactic structure such as edges from a dependency tree representation. We present a novel approach for discriminative sentence compression that unifies these notions and jointly produces sequential and syntactic representations for output text, leveraging a compact integer linear programming formulation to maintain structural integrity. Our supervised models permit rich features over heterogeneous linguistic structures and generalize over previous state-of-theart approaches. Experiments on corpora featuring human-generated compressions demonstrate a 13-15% relative gain in 4gram accuracy over a well-studied language model-based compression system.", "human_title": "Sentence Compression with Joint Structural Inference", "sys_gen": {"bart_base": "Discriminative Sentence Compression with Compact Integer Programming Formulations", "bart_xsum": "Discriminative Sentence Compression with Sequential and Syntactic Representations", "t5_small": "Discriminative Sentence Compression with Sequential and Syntactic Representations", "gpt2": " Discriminative Sentence Compression with Compact Integer Linear Programming", "pegasus_xsum": "Joint Sequential and Syntactic Representations for Discriminative Sentence Compression"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 2.0, "human_title_bws": 0.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.2, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 4.0, "pegasus_xsum_bws": -0.8}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -5.014, "bart_base_bertscore": 0.892, "bart_base_moverscore": 0.621, "bart_cnn_bartscore": -4.291, "bart_cnn_bertscore": 0.879, "bart_cnn_moverscore": 0.574, "bart_xsum_bartscore": -3.908, "bart_xsum_bertscore": 0.901, "bart_xsum_moverscore": 0.633, "t5_small_bartscore": -4.522, "t5_small_bertscore": 0.894, "t5_small_moverscore": 0.618, "gpt2_bartscore": -4.169, "gpt2_bertscore": 0.907, "gpt2_moverscore": 0.648, "pegasus_xsum_bartscore": -3.969, "pegasus_xsum_bertscore": 0.903, "pegasus_xsum_moverscore": 0.612}}, {"abstract": "Fast alignment is essential for many natural language tasks. But in the setting of monolingual alignment, previous work has not been able to align more than one sentence pair per second. We describe a discriminatively trained monolingual word aligner that uses a Conditional Random Field to globally decode the best alignment with features drawn from source and target sentences. Using just part-of-speech tags and WordNet as external resources, our aligner gives state-of-the-art result, while being an order-of-magnitude faster than the previous best performing system.", "human_title": "A Lightweight and High Performance Monolingual Word Aligner", "sys_gen": {"bart_base": "A Discriminatively trained Monolingual Word Aligner", "bart_cnn": "Fast Alignment of Monolingual Word Aligners with Conditional Random Fields and External Resources using Part-of-Spe", "bart_xsum": "Fast Monolingual Word Alignment with Conditional Random Fields", "gpt2": " A Discriminatively-trained Monolingual Word Aligner", "pegasus_xsum": "Fast Monolingual Word Alignment using Conditional Random Fields."}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.2, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 2.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 4.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.8}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -3.911, "bart_base_bertscore": 0.877, "bart_base_moverscore": 0.604, "bart_cnn_bartscore": -4.793, "bart_cnn_bertscore": 0.871, "bart_cnn_moverscore": 0.563, "bart_xsum_bartscore": -5.062, "bart_xsum_bertscore": 0.872, "bart_xsum_moverscore": 0.588, "t5_small_bartscore": -4.658, "t5_small_bertscore": 0.865, "t5_small_moverscore": 0.597, "gpt2_bartscore": -4.09, "gpt2_bertscore": 0.869, "gpt2_moverscore": 0.594, "pegasus_xsum_bartscore": -4.268, "pegasus_xsum_bertscore": 0.887, "pegasus_xsum_moverscore": 0.606}}, {"abstract": "We introduce XMEANT\u2014a new cross-lingual version of the semantic frame based MT evaluation metric MEANT\u2014which can correlate even more closely with human adequacy judgments than monolingual MEANT and eliminates the need for expensive human references. Previous work established that MEANT reflects translation adequacy with state-of-the-art accuracy, and optimizing MT systems against MEANT robustly improves translation quality. However, to go beyond tuning weights in the loglinear SMT model, a cross-lingual objective function that can deeply integrate semantic frame criteria into the MT training pipeline is needed. We show that cross-lingual XMEANT outperforms monolingual MEANT by (1) replacing the monolingual context vector model in MEANT with simple translation probabilities, and (2) incorporating bracketing ITG con-", "human_title": "XMEANT: Better semantic MT evaluation without reference translations", "sys_gen": {"bart_cnn": "XMEANT: A Cross-Lingual MT Evaluation Metric for Semantic Frame-based MT Evaluation with Monoling", "bart_xsum": "XMEANT: Cross-lingual MT Evaluation Metric Based on Semantic Frame Criteria", "t5_small": "Cross-lingual XMEANT: A Cross-Lingual Version of the Semantic Frame based Evaluation Metric", "gpt2": " Cross-Lingual Evaluation Metric Meant", "pegasus_xsum": "Cross-lingual Meant for Machine Translation Evaluation"}, "human_eval": {"human_title_selected_best": 4.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.8, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.2, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.4, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 4.0, "t5_small_bws": -0.8, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.2}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -4.011, "bart_base_bertscore": 0.893, "bart_base_moverscore": 0.638, "bart_cnn_bartscore": -4.288, "bart_cnn_bertscore": 0.888, "bart_cnn_moverscore": 0.602, "bart_xsum_bartscore": -3.607, "bart_xsum_bertscore": 0.9, "bart_xsum_moverscore": 0.625, "t5_small_bartscore": -3.911, "t5_small_bertscore": 0.886, "t5_small_moverscore": 0.614, "gpt2_bartscore": -4.357, "gpt2_bertscore": 0.853, "gpt2_moverscore": 0.571, "pegasus_xsum_bartscore": -4.028, "pegasus_xsum_bertscore": 0.855, "pegasus_xsum_moverscore": 0.585}}, {"abstract": "Pre-trained text encoders have rapidly advanced the state of the art on many NLP tasks. We focus on one such model, BERT, and aim to quantify where linguistic information is captured within the network. We find that the model represents the steps of the traditional NLP pipeline in an interpretable and localizable way, and that the regions responsible for each step appear in the expected sequence: POS tagging, parsing, NER, semantic roles, then coreference. Qualitative analysis reveals that the model can and often does adjust this pipeline dynamically, revising lower-level decisions on the basis of disambiguating information from higher-level representations.", "human_title": "BERT Rediscovers the Classical NLP Pipeline", "sys_gen": {"bart_base": "BERT: An Interpretable and Localized Model for Pre-trained Neural Language Processing", "bart_cnn": "BERT: Quantifying the Role of Linguistic Information in Pre-trained Text Encoders for Coreference and POS", "t5_small": "BERT: An Interpretable and Localizable Model for Pre-Trained Text Encoding", "gpt2": " Bert: A Localizable Model for Text Representation", "pegasus_xsum": "BERT: Where and When Are We Near the End of NLP?"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 3.0, "human_title_bws": -0.2, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 3.0, "bart_base_bws": -0.6, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 4.0, "t5_small_bws": -0.6, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.4, "pegasus_xsum_selected_best": 5.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -4.911, "bart_base_bertscore": 0.854, "bart_base_moverscore": 0.553, "bart_cnn_bartscore": -4.593, "bart_cnn_bertscore": 0.848, "bart_cnn_moverscore": 0.535, "bart_xsum_bartscore": -4.33, "bart_xsum_bertscore": 0.86, "bart_xsum_moverscore": 0.563, "t5_small_bartscore": -5.258, "t5_small_bertscore": 0.854, "t5_small_moverscore": 0.566, "gpt2_bartscore": -4.784, "gpt2_bertscore": 0.857, "gpt2_moverscore": 0.567, "pegasus_xsum_bartscore": -3.478, "pegasus_xsum_bertscore": 0.868, "pegasus_xsum_moverscore": 0.552}}, {"abstract": "Reinforcement learning (RL) has been widely used to aid training in language generation. This is achieved by enhancing standard maximum likelihood objectives with userspecified reward functions that encourage global semantic consistency. We propose a principled approach to address the difficulties associated with RL-based solutions, namely, highvariance gradients, uninformative rewards and brittle training. By leveraging the optimal transport distance, we introduce a regularizer that significantly alleviates the above issues. Our formulation emphasizes the preservation of semantic features, enabling end-to-end training instead of ad-hoc fine-tuning, and when combined with RL, it controls the exploration space for more efficient model updates. To validate the effectiveness of the proposed solution, we perform a comprehensive evaluation covering a wide variety of NLP tasks: machine translation, abstractive text summarization and image caption, with consistent improvements over competing", "human_title": "Sequence Generation with Optimal-Transport-Enhanced Reinforcement Learning", "sys_gen": {"bart_base": "End-to-End Reinforcement Learning with Global Semantic Consistency", "bart_cnn": "Optimal Transport-based Reinforcement Learning for Global Semantic Consistency in NLP Tasks: A Principled Approach", "bart_xsum": "End-to-End Reinforcement Learning for Language Generation with Global Semantic Consistency", "t5_small": "A Regularizer for Reinforcement Learning in Language Generation", "pegasus_xsum": "Reinforcement Learning for Natural Language Processing with Optimal Transport"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.2, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 3.0, "bart_base_bws": -0.4, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.2, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "pegasus_xsum_selected_best": 4.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.6}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -3.686, "bart_base_bertscore": 0.895, "bart_base_moverscore": 0.612, "bart_cnn_bartscore": -4.225, "bart_cnn_bertscore": 0.885, "bart_cnn_moverscore": 0.588, "bart_xsum_bartscore": -4.244, "bart_xsum_bertscore": 0.886, "bart_xsum_moverscore": 0.596, "t5_small_bartscore": -4.745, "t5_small_bertscore": 0.897, "t5_small_moverscore": 0.6, "gpt2_bartscore": -5.019, "gpt2_bertscore": 0.894, "gpt2_moverscore": 0.607, "pegasus_xsum_bartscore": -4.008, "pegasus_xsum_bertscore": 0.914, "pegasus_xsum_moverscore": 0.654}}, {"abstract": "We present a lexicon-based approach to extracting sentiment from text. The Semantic Orientation CALculator (SO-CAL) uses dictionaries of words annotated with their semantic orientation (polarity and strength), and incorporates intensification and negation. SO-CAL is applied to the polarity classification task, the process of assigning a positive or negative label to a text that captures the text\u2019s opinion towards its main subject matter. We show that SO-CAL\u2019s performance is consistent across domains and on completely unseen data. Additionally, we describe the process of dictionary creation, and our use of Mechanical Turk to check dictionaries for consistency and reliability.", "human_title": "Lexicon-Based Methods for Sentiment Analysis", "sys_gen": {"bart_base": "Semantic Orientation CALculator: A Lexicon-Based Approach to Extracting Sentiment from Text", "bart_cnn": "Automatic Sentiment Extraction from Text with Semantic Orientation Calculator (SO-CAL) and Lexicon", "t5_small": "The Semantic Orientation Calculator for Sentiment Extraction", "gpt2": " A Lexicon-Based Approach to Sentiment Extraction from Text", "pegasus_xsum": "Lexicon-based Sentiment Analysis using the Semantic Orientation of Words"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 5.0, "human_title_bws": -1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.2, "bart_cnn_selected_best": 3.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": 0.2, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.2, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -3.544, "bart_base_bertscore": 0.899, "bart_base_moverscore": 0.608, "bart_cnn_bartscore": -4.49, "bart_cnn_bertscore": 0.869, "bart_cnn_moverscore": 0.564, "bart_xsum_bartscore": -3.542, "bart_xsum_bertscore": 0.921, "bart_xsum_moverscore": 0.65, "t5_small_bartscore": -4.93, "t5_small_bertscore": 0.888, "t5_small_moverscore": 0.624, "gpt2_bartscore": -3.816, "gpt2_bertscore": 0.907, "gpt2_moverscore": 0.613, "pegasus_xsum_bartscore": -3.692, "pegasus_xsum_bertscore": 0.928, "pegasus_xsum_moverscore": 0.644}}, {"abstract": "Performance of machine learning algorithms depends critically on identifying a good set of hyperparameters. While recent approaches use Bayesian Optimization to adaptively select configurations, we focus on speeding up random search through adaptive resource allocation. We present HYPERBAND, a novel algorithm for hyperparameter optimization that is simple, flexible, and theoretically sound. HYPERBAND is a principled early-stoppping method that adaptively allocates a predefined resource, e.g., iterations, data samples or number of features, to randomly sampled configurations. We compare HYPERBAND with popular Bayesian Optimization methods on several hyperparameter optimization problems. We observe that HYPERBAND can provide more than an order of magnitude speedups over competitors on a variety of neural network and kernel-based learning problems.", "human_title": "Hyperband: Bandit-Based Configuration Evaluation for Hyperparameter Optimization", "sys_gen": {"bart_base": "HyPERBAND: Adaptive Resource Allocation for Dynamic Hyperparameter Optimization", "bart_cnn": "HyPERBAND: Faster Hyperparameter Optimization by Adaptive Resource Allocation via Stochastic Early-Stopp", "bart_xsum": "HyperBand: Adaptive Resource Allocation for Hyperparameter Optimization", "t5_small": "HYPERBAND: Accelerating Random Search via Bayesian Optimization", "gpt2": " HyPERBAND: Adaptive Random Search for Hyperparameter Optimization"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 4.0, "human_title_bws": -0.6, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 4.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.8, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": -0.2, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -0.2, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.2}, "num_annotators": 5, "auto_eval": {"bart_base_bartscore": -3.93, "bart_base_bertscore": 0.894, "bart_base_moverscore": 0.697, "bart_cnn_bartscore": -4.8, "bart_cnn_bertscore": 0.877, "bart_cnn_moverscore": 0.618, "bart_xsum_bartscore": -2.688, "bart_xsum_bertscore": 0.932, "bart_xsum_moverscore": 0.702, "t5_small_bartscore": -4.091, "t5_small_bertscore": 0.889, "t5_small_moverscore": 0.63, "gpt2_bartscore": -4.535, "gpt2_bertscore": 0.883, "gpt2_moverscore": 0.665, "pegasus_xsum_bartscore": -3.74, "pegasus_xsum_bertscore": 0.898, "pegasus_xsum_moverscore": 0.632}}, {"abstract": "Nonnegative Matrix Factorization (NMF) is a widely used technique in many applications such as clustering. It approximates the nonnegative data in an original high dimensional space with a linear representation in a low dimensional space by using the product of two nonnegative matrices. In many applications with data such as human faces or digits, data often reside on multiple manifolds, which may overlap or intersect. But the traditional NMF method and other existing variants of NMF do not consider this. This paper proposes a novel clustering algorithm that explicitly models the intrinsic geometrical structure of the data on multiple manifolds with NMF. The idea of the proposed algorithm is that a data point generated by several neighboring points on a specific manifold in the original space should be constructed in a similar way in the low dimensional subspace. A set of experimental results on two real world datasets demonstrate the advantage of the proposed algorithm.", "human_title": "Non-Negative Matrix Factorization Clustering on Multiple Manifolds", "sys_gen": {"bart_base": "Multi-Manifold Nonnegative Matrix Factorization.", "bart_cnn": "Nonnegative Matrix Factorization on Manifolds with Intrinsic Geometrical Structure for Multiple Manifold Manif", "bart_xsum": "Clustering on Multiple Manifolds with Nonnegative Matrix Factorization", "t5_small": "Clustering Nonnegative Matrix Factorization for High Dimensional Space", "pegasus_xsum": "Clustering on Multiple Manifolds with Nonnegative Matrix Factorization"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.819, "bart_base_bertscore": 0.939, "bart_base_moverscore": 0.669, "bart_cnn_bartscore": -3.354, "bart_cnn_bertscore": 0.897, "bart_cnn_moverscore": 0.642, "bart_xsum_bartscore": -2.344, "bart_xsum_bertscore": 0.958, "bart_xsum_moverscore": 0.741, "t5_small_bartscore": -3.623, "t5_small_bertscore": 0.918, "t5_small_moverscore": 0.627, "gpt2_bartscore": -3.941, "gpt2_bertscore": 0.905, "gpt2_moverscore": 0.62, "pegasus_xsum_bartscore": -2.452, "pegasus_xsum_bertscore": 0.956, "pegasus_xsum_moverscore": 0.752}}, {"abstract": "We present two language models based upon an \u201cimmediate-head\u201d parser \u2014 our name for a parser that conditions all events below a constituent c upon the head of c. While all of the most accurate statistical parsers are of the immediate-head variety, no previous grammatical language model uses this technology. The perplexity for both of these models significantly improve upon the trigram model base-line as well as the best previous grammarbased language model. For the better of our two models these improvements are 24% and 14% respectively. We also suggest that improvement of the underlying parser should significantly improve the model\u2019s perplexity and that even in the near term there is a lot of potential for improvement in immediatehead language models.", "human_title": "Immediate-Head Parsing for Language Models", "sys_gen": {"bart_base": "Improvements in an Immediate-Head Language Model Based on a Grammatical Parser", "bart_cnn": "Parsing with an Immediate-Head Parser and its Application to the trigram base-line Grammatical language model", "bart_xsum": "An Immediate-Head Parser for Statistical Language Models", "gpt2": " Improving Grammatical Language Modeling by Immediate-Heading Parsing", "pegasus_xsum": "Two Immediate-Head Grammatical Language Models"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.919, "bart_base_bertscore": 0.933, "bart_base_moverscore": 0.645, "bart_cnn_bartscore": -4.462, "bart_cnn_bertscore": 0.911, "bart_cnn_moverscore": 0.588, "bart_xsum_bartscore": -2.901, "bart_xsum_bertscore": 0.964, "bart_xsum_moverscore": 0.738, "t5_small_bartscore": -3.165, "t5_small_bertscore": 0.909, "t5_small_moverscore": 0.632, "gpt2_bartscore": -4.114, "gpt2_bertscore": 0.916, "gpt2_moverscore": 0.621, "pegasus_xsum_bartscore": -4.007, "pegasus_xsum_bertscore": 0.933, "pegasus_xsum_moverscore": 0.667}}, {"abstract": "Scoring sentences in documents given abstract summaries created by humans is important in extractive multi-document summarization. In this paper, we formulate extractive summarization as a two step learning problem building a generative model for pattern discovery and a regression model for inference. We calculate scores for sentences in document clusters based on their latent characteristics using a hierarchical topic model. Then, using these scores, we train a regression model based on the lexical and structural characteristics of the sentences, and use the model to score sentences of new documents to form a summary. Our system advances current state-of-the-art improving ROUGE scores by \u223c7%. Generated summaries are less redundant and more coherent based upon manual quality evaluations.", "human_title": "A Hybrid Hierarchical Model for Multi-Document Summarization", "sys_gen": {"bart_base": "A Two Step Learning Approach to Extractive Summarization with Latent Attributes", "bart_cnn": "A Two-Step Learning Approach to Extractive Summarization Using Hierarchical Topic Models and Lexical and Structural Information", "t5_small": "Extractive Multi-Document Summarization with Hierarchical Topic Model", "gpt2": " Extractive Summarization as a Two Step Learning Problem", "pegasus_xsum": "Extractive Multi-Document Summarization Using Latent and Lexical Features"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.325, "bart_base_bertscore": 0.901, "bart_base_moverscore": 0.617, "bart_cnn_bartscore": -3.96, "bart_cnn_bertscore": 0.904, "bart_cnn_moverscore": 0.594, "bart_xsum_bartscore": -3.944, "bart_xsum_bertscore": 0.914, "bart_xsum_moverscore": 0.626, "t5_small_bartscore": -3.51, "t5_small_bertscore": 0.927, "t5_small_moverscore": 0.644, "gpt2_bartscore": -4.091, "gpt2_bertscore": 0.911, "gpt2_moverscore": 0.63, "pegasus_xsum_bartscore": -3.905, "pegasus_xsum_bertscore": 0.919, "pegasus_xsum_moverscore": 0.64}}, {"abstract": "We present a methodology for summarization of news about current events in the form of briefings that include appropriate background (historical) information. The system that we developed, SUMMONS, uses the output of systems developed for the DARPA Message Understanding Conferences to generate summaries of multiple documents on the same or related events, presenting similarities and differences, contradictions, and generalizations among sources of information. We describe the various components of the system, showing how information from multiple articles is combined, organized into a paragraph, and finally, realized as English sentences. A feature of our work is the extraction of descriptions of entities such as people and places for reuse to enhance a briefing.", "human_title": "Generating Natural Language Summaries from Multiple On-Line Sources", "sys_gen": {"bart_base": "Summarization of Current Events in the Form of Briefings", "bart_xsum": "Summons: A System for Historical Summarization of News Briefings", "t5_small": "SUMMONS: A System for Summarization of News about Current Events", "gpt2": " Summarization of News About Current Events", "pegasus_xsum": "SUMMONS: A Methodology for Semantic Summarization of News about Events"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.541, "bart_base_bertscore": 0.856, "bart_base_moverscore": 0.551, "bart_cnn_bartscore": -4.483, "bart_cnn_bertscore": 0.845, "bart_cnn_moverscore": 0.548, "bart_xsum_bartscore": -4.9, "bart_xsum_bertscore": 0.852, "bart_xsum_moverscore": 0.557, "t5_small_bartscore": -4.271, "t5_small_bertscore": 0.855, "t5_small_moverscore": 0.562, "gpt2_bartscore": -5.304, "gpt2_bertscore": 0.843, "gpt2_moverscore": 0.549, "pegasus_xsum_bartscore": -4.232, "pegasus_xsum_bertscore": 0.853, "pegasus_xsum_moverscore": 0.56}}, {"abstract": "Neural encoder-decoder models have been successful in natural language generation tasks. However, real applications of abstractive summarization must consider an additional constraint that a generated summary should not exceed a desired length. In this paper, we propose a simple but effective extension of a sinusoidal positional encoding (Vaswani et al., 2017) so that a neural encoder-decoder model preserves the length constraint. Unlike previous studies that learn length embeddings, the proposed method can generate a text of any length even if the target length is unseen in training data. The experimental results show that the proposed method is able not only to control generation length but also improve ROUGE scores.", "human_title": "Positional Encoding to Control Output Sequence Length", "sys_gen": {"bart_base": "A Simple but Effective Extension of a sinusoidal positional encoding for Abstractive Summarization", "bart_cnn": "A Simple and Effective Extension of Neural Encoder-Decoder Models for Abstractive Summarization Using a Sinusoidal Position", "bart_xsum": "Learning Length Embeddings for Abstractive Summarization with Neural Encoder-Decoder Models", "t5_small": "Sinusoidal Positional Encoding for Neural Language Generation", "gpt2": " A Sinusoidal Neural Encoder-Decoder Model for Abstractive Summarization"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.814, "bart_base_bertscore": 0.861, "bart_base_moverscore": 0.56, "bart_cnn_bartscore": -5.812, "bart_cnn_bertscore": 0.85, "bart_cnn_moverscore": 0.533, "bart_xsum_bartscore": -5.1, "bart_xsum_bertscore": 0.866, "bart_xsum_moverscore": 0.567, "t5_small_bartscore": -5.215, "t5_small_bertscore": 0.876, "t5_small_moverscore": 0.607, "gpt2_bartscore": -5.787, "gpt2_bertscore": 0.853, "gpt2_moverscore": 0.567, "pegasus_xsum_bartscore": -5.398, "pegasus_xsum_bertscore": 0.868, "pegasus_xsum_moverscore": 0.583}}, {"abstract": "We propose a pre-training technique for recurrent neural networks based on linear autoencoder networks for sequences, i.e. linear dynamical systems modelling the target sequences. We start by giving a closed form solution for the definition of the optimal weights of a linear autoencoder given a training set of sequences. This solution, however, is computationally very demanding, so we suggest a procedure to get an approximate solution for a given number of hidden units. The weights obtained for the linear autoencoder are then used as initial weights for the inputto-hidden connections of a recurrent neural network, which is then trained on the desired task. Using four well known datasets of sequences of polyphonic music, we show that the proposed pre-training approach is highly effective, since it allows to largely improve the state of the art results on all the considered datasets.", "human_title": "Pre-training of Recurrent Neural Networks via Linear Autoencoders", "sys_gen": {"bart_base": "Pre-training for Recurrent Neural Networks with Linear Autoencoder Networks", "bart_xsum": "Pre-training of Linear Autoencoder Networks for Recurrent Neural Networks", "t5_small": "Pre-training for Recurrent Neural Networks with Linear Autoencoder Networks", "gpt2": " Training Recurrent Neural Networks with Linear Autoencoders", "pegasus_xsum": "Pre-training of Linear Autoencoder Networks for Sequences"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -1.977, "bart_base_bertscore": 0.976, "bart_base_moverscore": 0.772, "bart_cnn_bartscore": -3.416, "bart_cnn_bertscore": 0.924, "bart_cnn_moverscore": 0.642, "bart_xsum_bartscore": -2.207, "bart_xsum_bertscore": 0.962, "bart_xsum_moverscore": 0.776, "t5_small_bartscore": -2.518, "t5_small_bertscore": 0.956, "t5_small_moverscore": 0.726, "gpt2_bartscore": -3.139, "gpt2_bertscore": 0.935, "gpt2_moverscore": 0.674, "pegasus_xsum_bartscore": -3.215, "pegasus_xsum_bertscore": 0.938, "pegasus_xsum_moverscore": 0.699}}, {"abstract": "Language technologies contribute to promoting multilingualism and linguistic diversity around the world. However, only a very small number of the over 7000 languages of the world are represented in the rapidly evolving language technologies and applications. In this paper we look at the relation between the types of languages, resources, and their representation in NLP conferences to understand the trajectory that different languages have followed over time. Our quantitative investigation underlines the disparity between languages, especially in terms of their resources, and calls into question the \"language agnostic\" status of current models and systems. Through this paper, we attempt to convince the ACL community to prioritise the resolution of the predicaments highlighted here, so that no language is left behind.", "human_title": "The State and Fate of Linguistic Diversity and Inclusion in the NLP World", "sys_gen": {"bart_base": "Language Agnostic: A quantitative study of the impact of language technologies on NLP", "bart_cnn": "The Language Agnostic Community: The Case of Multilingualism, Diversity, and Representation in NLP Conference Transcripts.", "t5_small": "Understanding the Relation between Languages, Resources, and Their Representation in NLP Conf\u00e9rences", "gpt2": " The Impact of Language Technology on Multilingualism and Linguistic Diversity", "pegasus_xsum": "\"No Language is Left Behind\": A Case Study on the Representation of Languages in NLP Conferences"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.691, "bart_base_bertscore": 0.875, "bart_base_moverscore": 0.558, "bart_cnn_bartscore": -4.202, "bart_cnn_bertscore": 0.893, "bart_cnn_moverscore": 0.593, "bart_xsum_bartscore": -3.032, "bart_xsum_bertscore": 0.918, "bart_xsum_moverscore": 0.593, "t5_small_bartscore": -4.305, "t5_small_bertscore": 0.881, "t5_small_moverscore": 0.58, "gpt2_bartscore": -3.559, "gpt2_bertscore": 0.899, "gpt2_moverscore": 0.583, "pegasus_xsum_bartscore": -3.943, "pegasus_xsum_bertscore": 0.882, "pegasus_xsum_moverscore": 0.569}}, {"abstract": "We introduce globally normalized convolutional neural networks for joint entity classification and relation extraction. In particular, we propose a way to utilize a linear-chain conditional random field output layer for predicting entity types and relations between entities at the same time. Our experiments show that global normalization outperforms a locally normalized softmax layer on a benchmark dataset.", "human_title": "Global Normalization of Convolutional Neural Networks for Joint Entity and Relation Classification", "sys_gen": {"bart_base": "Global Normalization of Convolutional Neural Networks for Joint Entity Classification and Relation Extraction", "bart_cnn": "Globally Normalized Convolutional Neural Networks for Joint Entity Classification and Relation Extraction with Global Normalized Random Fields", "bart_xsum": "Global Normalization for Joint Entity Classification and Relation Extraction with Conditional Random Fields", "t5_small": "Global Normalized Neural Networks for Joint Entity Classification and Relation Extraction", "pegasus_xsum": "Globally Normalized Convolutional Neural Networks for Joint Entity Classification and Relation Extraction"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.487, "bart_base_bertscore": 0.958, "bart_base_moverscore": 0.762, "bart_cnn_bartscore": -3.065, "bart_cnn_bertscore": 0.94, "bart_cnn_moverscore": 0.683, "bart_xsum_bartscore": -3.193, "bart_xsum_bertscore": 0.915, "bart_xsum_moverscore": 0.669, "t5_small_bartscore": -2.707, "t5_small_bertscore": 0.931, "t5_small_moverscore": 0.693, "gpt2_bartscore": -3.361, "gpt2_bertscore": 0.932, "gpt2_moverscore": 0.702, "pegasus_xsum_bartscore": -2.433, "pegasus_xsum_bertscore": 0.955, "pegasus_xsum_moverscore": 0.747}}, {"abstract": "Sentiment classification on tweets often needs to deal with the problems of under-specificity, noise, and multilingual content. This study proposes a heterogeneous multi-layer network-based representation of tweets to generate multiple representations of a tweet and address the above issues. The generated representations are further ensembled and classified using a neural-based early fusion approach. Further, we propose a centrality aware random-walk for node embedding and tweet representations suitable for the multi-layer network. From various experimental analysis, it is evident that the proposed method can address the problem of under-specificity, noisy text, and multilingual content present in a tweet and provides better classification performance than the text-based counterparts. Further, the proposed centrality aware based random walk provides better representations than unbiased and other biased counterparts.", "human_title": "Sentiment Analysis of Tweets using Heterogeneous Multi-layer Network Representation and Embedding", "sys_gen": {"bart_cnn": "Heterogeneous Multi-Layer Network-based Representation of Tweets with Centrality Aware Random Walk for Sentiment Classification on", "bart_xsum": "Heterogeneous Multi-layer Network-based Representation of Tweets for Sentiment Classification", "t5_small": "Multi-layer Network Representations for Sentiment Classification", "gpt2": " Heterogeneous Multi-Layer Representation of Tweets for Sentiment Classification", "pegasus_xsum": "Heterogeneous Multi-layer Network-based Representations of Tweets for Sentiment Classification"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.917, "bart_base_bertscore": 0.938, "bart_base_moverscore": 0.68, "bart_cnn_bartscore": -4.319, "bart_cnn_bertscore": 0.911, "bart_cnn_moverscore": 0.638, "bart_xsum_bartscore": -2.951, "bart_xsum_bertscore": 0.94, "bart_xsum_moverscore": 0.677, "t5_small_bartscore": -4.169, "t5_small_bertscore": 0.888, "t5_small_moverscore": 0.586, "gpt2_bartscore": -3.456, "gpt2_bertscore": 0.935, "gpt2_moverscore": 0.651, "pegasus_xsum_bartscore": -3.029, "pegasus_xsum_bertscore": 0.94, "pegasus_xsum_moverscore": 0.687}}, {"abstract": "The sentiment classification performance relies on high-quality sentiment resources. However, these resources are imbalanced in different languages. Cross-language sentiment classification (CLSC) can leverage the rich resources in one language (source language) for sentiment classification in a resource-scarce language (target language). Bilingual embeddings could eliminate the semantic gap between two languages for CLSC, but ignore the sentiment information of text. This paper proposes an approach to learning bilingual sentiment word embeddings (BSWE) for English-Chinese CLSC. The proposed BSWE incorporate sentiment information of text into bilingual embeddings. Furthermore, we can learn high-quality BSWE by simply employing labeled corpora and their translations, without relying on largescale parallel corpora. Experiments on NLP&CC 2013 CLSC dataset show that our approach outperforms the state-of-theart systems.", "human_title": "Learning Bilingual Sentiment Word Embeddings for Cross-language Sentiment Classification", "sys_gen": {"bart_base": "Learning Bilingual Sentiment Word Embeddings for Cross-Language Sentiment Classification", "bart_cnn": "Learning Bilingual Sentiment Word Embeddings for Cross-Language Sentiment Classification in a Resource-Scarce LSTM", "bart_xsum": "Learning Bilingual Sentiment Word Embeddings for English-Chinese Cross-Language Classification", "gpt2": " Learning Bilingual Sentiment Word Embeddings for Cross-Language Sentiment Classification", "pegasus_xsum": "Bilingual Sentiment Word Embeddings for English-Chinese Cross-Language Sentiment Classification"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -1.802, "bart_base_bertscore": 0.97, "bart_base_moverscore": 0.793, "bart_cnn_bartscore": -2.543, "bart_cnn_bertscore": 0.954, "bart_cnn_moverscore": 0.71, "bart_xsum_bartscore": -2.134, "bart_xsum_bertscore": 0.965, "bart_xsum_moverscore": 0.752, "t5_small_bartscore": -2.813, "t5_small_bertscore": 0.92, "t5_small_moverscore": 0.65, "gpt2_bartscore": -2.001, "gpt2_bertscore": 0.965, "gpt2_moverscore": 0.76, "pegasus_xsum_bartscore": -1.842, "pegasus_xsum_bertscore": 0.97, "pegasus_xsum_moverscore": 0.796}}, {"abstract": "This paper presents an approach for Multilingual Document Clustering in comparable corpora. The algorithm is of heuristic nature and it uses as unique evidence for clustering the identification of cognate named entities between both sides of the comparable corpora. One of the main advantages of this approach is that it does not depend on bilingual or multilingual resources. However, it depends on the possibility of identifying cognate named entities between the languages used in the corpus. An additional advantage of the approach is that it does not need any information about the right number of clusters; the algorithm calculates it. We have tested this approach with a comparable corpus of news written in English and Spanish. In addition, we have compared the results with a system which translates selected document features. The obtained results are encouraging.", "human_title": "Multilingual Document Clustering: An Heuristic Approach Based on Cognate Named Entities", "sys_gen": {"bart_base": "Multilingual Document Clustering in Comparable Corpora Using Heuristic Data", "bart_cnn": "Multilingual Document Clustering in Comparable Corpora: Identifying Cognate Named Entities by Means of Heuristic Information", "bart_xsum": "Multilingual Document Clustering in Comparable Corpora using Cognate Named Entities", "t5_small": "Multilingual Document Clustering in Comparable Corpora", "gpt2": " Multilingual Document Clustering Using Comparable Corpora"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.471, "bart_base_bertscore": 0.901, "bart_base_moverscore": 0.635, "bart_cnn_bartscore": -3.003, "bart_cnn_bertscore": 0.934, "bart_cnn_moverscore": 0.659, "bart_xsum_bartscore": -3.145, "bart_xsum_bertscore": 0.902, "bart_xsum_moverscore": 0.628, "t5_small_bartscore": -2.908, "t5_small_bertscore": 0.899, "t5_small_moverscore": 0.604, "gpt2_bartscore": -2.842, "gpt2_bertscore": 0.925, "gpt2_moverscore": 0.637, "pegasus_xsum_bartscore": -4.056, "pegasus_xsum_bertscore": 0.873, "pegasus_xsum_moverscore": 0.598}}, {"abstract": "We examine the task of temporal relation classification. Unlike existing approaches to this task, we (1) classify an event-event or eventtime pair as one of the 14 temporal relations defined in the TimeBank corpus, rather than as one of the six relations collapsed from the original 14; (2) employ sophisticated linguistic knowledge derived from a variety of semantic and discourse relations, rather than focusing on morpho-syntactic knowledge; and (3) leverage a novel combination of rule-based and learning-based approaches, rather than relying solely on one or the other. Experiments with the TimeBank corpus demonstrate that our knowledge-rich, hybrid approach yields a 15\u201316% relative reduction in error over a state-of-the-art learning-based baseline system.", "human_title": "Classifying Temporal Relations with Rich Linguistic Knowledge", "sys_gen": {"bart_base": "Temporal Relation Classification Using Semantic and Discourse Knowledge", "bart_cnn": "A Knowledge-Rich Hybrid Temporal Relation Classification Based on Morpho-Syntactic Knowledge and Learning-Based Approaches", "t5_small": "Learning to Classify Event-Events and Eventtime Pairs", "gpt2": " Temporal Relation Classification Using Semantic and Discourse Relations", "pegasus_xsum": "Temporal Relation Classification with Hybrid Lexical Knowledge"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.692, "bart_base_bertscore": 0.909, "bart_base_moverscore": 0.636, "bart_cnn_bartscore": -4.863, "bart_cnn_bertscore": 0.884, "bart_cnn_moverscore": 0.573, "bart_xsum_bartscore": -4.403, "bart_xsum_bertscore": 0.913, "bart_xsum_moverscore": 0.627, "t5_small_bartscore": -4.952, "t5_small_bertscore": 0.864, "t5_small_moverscore": 0.559, "gpt2_bartscore": -4.992, "gpt2_bertscore": 0.886, "gpt2_moverscore": 0.588, "pegasus_xsum_bartscore": -5.262, "pegasus_xsum_bertscore": 0.902, "pegasus_xsum_moverscore": 0.626}}, {"abstract": "Syntactic analysis of search queries is important for a variety of information-retrieval tasks; however, the lack of annotated data makes training query analysis models difficult. We propose a simple, efficient procedure in which part-of-speech tags are transferred from retrieval-result snippets to queries at training time. Unlike previous work, our final model does not require any additional resources at run-time. Compared to a state-ofthe-art approach, we achieve more than 20% relative error reduction. Additionally, we annotate a corpus of search queries with partof-speech tags, providing a resource for future work on syntactic query analysis.", "human_title": "Using Search-Logs to Improve Query Tagging", "sys_gen": {"bart_base": "Part-of-Speech Tagging for Syntactic Search Queries", "bart_cnn": "Syntactic Query Analysis with Part-of-Speech Tagging and Efficient Training of Information Retrieval Queries", "bart_xsum": "Part-of-Speech Tagging for Efficient Syntactic Query Analysis", "gpt2": " Part-of-Speech Tagging for Search Queries", "pegasus_xsum": "Training Query Analysis Models with Part-of-Speech Tagging Data"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 3.0, "human_title_bws": -1.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.828, "bart_base_bertscore": 0.909, "bart_base_moverscore": 0.605, "bart_cnn_bartscore": -5.016, "bart_cnn_bertscore": 0.875, "bart_cnn_moverscore": 0.568, "bart_xsum_bartscore": -6.127, "bart_xsum_bertscore": 0.902, "bart_xsum_moverscore": 0.6, "t5_small_bartscore": -4.921, "t5_small_bertscore": 0.89, "t5_small_moverscore": 0.582, "gpt2_bartscore": -6.17, "gpt2_bertscore": 0.909, "gpt2_moverscore": 0.608, "pegasus_xsum_bartscore": -5.126, "pegasus_xsum_bertscore": 0.889, "pegasus_xsum_moverscore": 0.585}}, {"abstract": "We introduce a weakly supervised approach for inferring the property of abstractness of words and expressions in the complete absence of labeled data. Exploiting only minimal linguistic clues and the contextual usage of a concept as manifested in textual data, we train sufficiently powerful classifiers, obtaining high correlation with human labels. The results imply the applicability of this approach to additional properties of concepts, additional languages, and resource-scarce scenarios.", "human_title": "Learning Concept Abstractness Using Weak Supervision", "sys_gen": {"bart_base": "Weakly Supervised Inference of Abstractness in Texts", "bart_cnn": "Weakly Supervised Learning of Abstractness of Words and Expressions from Labelled Data: An Application to Semantic Interpretation", "bart_xsum": "Weakly Supervised Inference of Abstractness of Words and Expressions Without Labeled Data", "t5_small": "Inferring Abstractness of Words and Expressions in Textual Data", "gpt2": " Weakly Supervised Learning of Abstractness"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.293, "bart_base_bertscore": 0.899, "bart_base_moverscore": 0.609, "bart_cnn_bartscore": -4.707, "bart_cnn_bertscore": 0.861, "bart_cnn_moverscore": 0.55, "bart_xsum_bartscore": -4.529, "bart_xsum_bertscore": 0.881, "bart_xsum_moverscore": 0.569, "t5_small_bartscore": -5.252, "t5_small_bertscore": 0.876, "t5_small_moverscore": 0.577, "gpt2_bartscore": -4.631, "gpt2_bertscore": 0.896, "gpt2_moverscore": 0.612, "pegasus_xsum_bartscore": -4.7, "pegasus_xsum_bertscore": 0.897, "pegasus_xsum_moverscore": 0.599}}, {"abstract": "One major challenge in training Deep Neural Networks is preventing overfitting. Many techniques such as data augmentation and novel regularizers such as Dropout have been proposed to prevent overfitting without requiring a massive amount of training data. In this work, we propose a new regularizer called DeCov which leads to significantly reduced overfitting (as indicated by the difference between train and val performance), and better generalization. Our regularizer encourages diverse or non-redundant representations in Deep Neural Networks by minimizing the cross-covariance of hidden activations. This simple intuition has been explored in a number of past works but surprisingly has never been applied as a regularizer in supervised learning. Experiments across a range of datasets and network architectures show that this loss always reduces overfitting while almost always maintaining or increasing generalization performance and often improving performance over Dropout.", "human_title": "Reducing Overfitting in Deep Networks by Decorrelating Representations", "sys_gen": {"bart_base": "DeCov: Reducing Overfitting in Deep Neural Networks by Minimizing Cross-Covariance", "bart_cnn": "DeCov: DeCov Regularized Training of Deep Neural Networks via Cross-Covariance and Generalization.", "bart_xsum": "DeCov: A Cross-Covariance Regularizer for Deep Neural Networks", "t5_small": "DeCov: Regularizing Deep Neural Networks for Overfitting", "gpt2": " DeCov: DeCov Regularization for Deep Neural Networks"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.696, "bart_base_bertscore": 0.902, "bart_base_moverscore": 0.642, "bart_cnn_bartscore": -4.183, "bart_cnn_bertscore": 0.856, "bart_cnn_moverscore": 0.58, "bart_xsum_bartscore": -4.928, "bart_xsum_bertscore": 0.855, "bart_xsum_moverscore": 0.593, "t5_small_bartscore": -5.398, "t5_small_bertscore": 0.867, "t5_small_moverscore": 0.598, "gpt2_bartscore": -5.253, "gpt2_bertscore": 0.855, "gpt2_moverscore": 0.589, "pegasus_xsum_bartscore": -5.03, "pegasus_xsum_bertscore": 0.874, "pegasus_xsum_moverscore": 0.605}}, {"abstract": "The task of inferring the native language of an author based on texts written in a second language has generally been tackled as a classification problem, typically using as features a mix of n-grams over characters and part of speech tags (for small and fixed n) and unigram function words. To capture arbitrarily long n-grams that syntax-based approaches have suggested are useful, adaptor grammars have some promise. In this work we investigate their extension to identifying n-gram collocations of arbitrary length over a mix of PoS tags and words, using both maxent and induced syntactic language model approaches to classification. After presenting a new, simple baseline, we show that learned collocations used as features in a maxent model perform better still, but that the story is more mixed for the syntactic language model.", "human_title": "Exploring Adaptor Grammars for Native Language Identification", "sys_gen": {"bart_cnn": "Automatic Collocation of Native Language Texts using Adaptor Grammars and Syntax-Based Syntactic Language Modeling", "bart_xsum": "Learning Adaptor Grammars for Native Language Inference from Second Language Texts", "t5_small": "Identifying N-gram Collocations over PoS Tags and Words for Syntactic Language Models", "gpt2": " Adaptor Grammars for Native Language Acquisition", "pegasus_xsum": "Learning to Induct Native Language Features into Syntactic Language Models"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.662, "bart_base_bertscore": 0.915, "bart_base_moverscore": 0.648, "bart_cnn_bartscore": -3.735, "bart_cnn_bertscore": 0.908, "bart_cnn_moverscore": 0.597, "bart_xsum_bartscore": -2.9, "bart_xsum_bertscore": 0.96, "bart_xsum_moverscore": 0.739, "t5_small_bartscore": -6.223, "t5_small_bertscore": 0.876, "t5_small_moverscore": 0.569, "gpt2_bartscore": -2.683, "gpt2_bertscore": 0.949, "gpt2_moverscore": 0.728, "pegasus_xsum_bartscore": -4.847, "pegasus_xsum_bertscore": 0.896, "pegasus_xsum_moverscore": 0.641}}, {"abstract": "In this paper, we explore the utility of intraand inter-sentential causal relations between terms or clauses as evidence for answering why-questions. To the best of our knowledge, this is the first work that uses both intraand inter-sentential causal relations for why-QA. We also propose a method for assessing the appropriateness of causal relations as answers to a given question using the semantic orientation of excitation proposed by Hashimoto et al. (2012). By applying these ideas to Japanese why-QA, we improved precision by 4.4% against all the questions in our test set over the current state-of-theart system for Japanese why-QA. In addition, unlike the state-of-the-art system, our system could achieve very high precision (83.2%) for 25% of all the questions in the test set by restricting its output to the confident answers only.", "human_title": "Why-Question Answering using Intra- and Inter-Sentential Causal Relations", "sys_gen": {"bart_base": "Using Interra and Inter-Sentential Causal Relations for Japanese Why-Answer Answering", "bart_cnn": "Why-QA: Using Intra- and Inter-Sentential Causal Relations to Improve Precision for Japanese Why-Q", "t5_small": "Using Intra-and Inter-Sentential Causal Relations for Japanese Why-QA", "gpt2": " Why-QA Using Intra-and Inter-Sentential Causal Relations", "pegasus_xsum": "Using Intra- and Inter-Sentential Causal Relations to Answer Japanese Why-questions"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 3.0, "bart_base_bws": -1.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.288, "bart_base_bertscore": 0.902, "bart_base_moverscore": 0.656, "bart_cnn_bartscore": -2.61, "bart_cnn_bertscore": 0.92, "bart_cnn_moverscore": 0.654, "bart_xsum_bartscore": -3.227, "bart_xsum_bertscore": 0.891, "bart_xsum_moverscore": 0.641, "t5_small_bartscore": -2.704, "t5_small_bertscore": 0.894, "t5_small_moverscore": 0.676, "gpt2_bartscore": -2.889, "gpt2_bertscore": 0.913, "gpt2_moverscore": 0.693, "pegasus_xsum_bartscore": -2.15, "pegasus_xsum_bertscore": 0.928, "pegasus_xsum_moverscore": 0.685}}, {"abstract": "We propose a model for jointly predicting multiple emotions in natural language sentences. Our model is based on a low-rank coregionalisation approach, which combines a vector-valued Gaussian Process with a rich parameterisation scheme. We show that our approach is able to learn correlations and anti-correlations between emotions on a news headlines dataset. The proposed model outperforms both singletask baselines and other multi-task approaches.", "human_title": "Joint Emotion Analysis via Multi-task Gaussian Processes", "sys_gen": {"bart_base": "Joint Predicting of Multiple Emotions in Natural Language Sentences", "bart_cnn": "Jointly Predicting Multiple Emotions in Natural Language Sentences using Gaussian Processes and Low-Rank Coregional", "t5_small": "A Low-rank Coregionalisation Approach to Predicting Multiple Emotions in Natural Language Sentences", "gpt2": " Joint Predicting Multiple Emotions in Natural Language Sentences", "pegasus_xsum": "A Low-Rank Co-Regionisation Approach for Joint Emotion Prediction"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.133, "bart_base_bertscore": 0.891, "bart_base_moverscore": 0.592, "bart_cnn_bartscore": -4.86, "bart_cnn_bertscore": 0.894, "bart_cnn_moverscore": 0.584, "bart_xsum_bartscore": -4.595, "bart_xsum_bertscore": 0.89, "bart_xsum_moverscore": 0.593, "t5_small_bartscore": -5.686, "t5_small_bertscore": 0.873, "t5_small_moverscore": 0.574, "gpt2_bartscore": -5.259, "gpt2_bertscore": 0.894, "gpt2_moverscore": 0.602, "pegasus_xsum_bartscore": -5.179, "pegasus_xsum_bertscore": 0.889, "pegasus_xsum_moverscore": 0.594}}, {"abstract": "This paper considers the subspace clustering problem where the data contains irrelevant or corrupted features. We propose a method termed \u201crobust Dantzig selector\u201d which can successfully identify the clustering structure even with the presence of irrelevant features. The idea is simple yet powerful: we replace the inner product by its robust counterpart, which is insensitive to the irrelevant features given an upper bound of the number of irrelevant features. We establish theoretical guarantees for the algorithm to identify the correct subspace, and demonstrate the effectiveness of the algorithm via numerical simulations. To the best of our knowledge, this is the first method developed to tackle subspace clustering with irrelevant features.", "human_title": "Subspace Clustering with Irrelevant Features via Robust Dantzig Selector", "sys_gen": {"bart_base": "Robust Dantzig selector for subspace clustering with irrelevant features", "bart_cnn": "Robust Dantzig Selector: Identifying Irrelevant Features in Subspace Clustering with Robust Densities.", "bart_xsum": "Robust Dantzig Selector for Subspace Clustering with Irrelevant Features", "t5_small": "A Robust Dantzig Selector for Subspace Clustering with irrelevant features", "gpt2": " Robust Dantzig Subspace Clustering"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 3.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.451, "bart_base_bertscore": 0.921, "bart_base_moverscore": 0.707, "bart_cnn_bartscore": -2.311, "bart_cnn_bertscore": 0.922, "bart_cnn_moverscore": 0.649, "bart_xsum_bartscore": -1.445, "bart_xsum_bertscore": 0.956, "bart_xsum_moverscore": 0.757, "t5_small_bartscore": -2.232, "t5_small_bertscore": 0.932, "t5_small_moverscore": 0.672, "gpt2_bartscore": -2.832, "gpt2_bertscore": 0.922, "gpt2_moverscore": 0.644, "pegasus_xsum_bartscore": -2.491, "pegasus_xsum_bertscore": 0.924, "pegasus_xsum_moverscore": 0.643}}, {"abstract": "Contrary to most natural language processing research, which makes use of static datasets, humans learn language interactively, grounded in an environment. In this work we propose an interactive learning procedure called Mechanical Turker Descent (MTD) and use it to train agents to execute natural language commands grounded in a fantasy text adventure game. In MTD, Turkers compete to train better agents in the short term, and collaborate by sharing their agents\u2019 skills in the long term. This results in a gamified, engaging experience for the Turkers and a better quality teaching signal for the agents compared to static datasets, as the Turkers naturally adapt the training data to the agent\u2019s abilities.", "human_title": "Mastering the Dungeon: Grounded Language Learning by Mechanical Turker Descent", "sys_gen": {"bart_base": "Turker Descent: Interactively Learning to execute Natural Language commands in a Fantasy Game", "bart_cnn": "Turker Descent: Interactive Learning of Natural Language Agents in a Fantasy Text Adventure Game using Static Dataset and Skill Sharing", "bart_xsum": "Turker Descent: Interactive Learning for Natural Language Processing with Mechanical Turkers", "gpt2": " Turker Descent: Interactive Learning for Natural Language Utterance Games", "pegasus_xsum": "Mechanical Turker Descent: Learning Language Interactively from Text Adventure Games"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.651, "bart_base_bertscore": 0.892, "bart_base_moverscore": 0.596, "bart_cnn_bartscore": -5.128, "bart_cnn_bertscore": 0.876, "bart_cnn_moverscore": 0.569, "bart_xsum_bartscore": -3.787, "bart_xsum_bertscore": 0.904, "bart_xsum_moverscore": 0.61, "t5_small_bartscore": -3.212, "t5_small_bertscore": 0.908, "t5_small_moverscore": 0.606, "gpt2_bartscore": -4.795, "gpt2_bertscore": 0.884, "gpt2_moverscore": 0.597, "pegasus_xsum_bartscore": -3.781, "pegasus_xsum_bertscore": 0.915, "pegasus_xsum_moverscore": 0.628}}, {"abstract": "We initiate a study comparing effectiveness of the transformed spaces learned by recently proposed supervised, and semisupervised metric learning algorithms to those generated by previously proposed unsupervised dimensionality reduction methods (e.g., PCA). Through a variety of experiments on different realworld datasets, we find IDML-IT, a semisupervised metric learning algorithm to be the most effective.", "human_title": "Learning Better Data Representation Using Inference-Driven Metric Learning", "sys_gen": {"bart_cnn": "A Study on Transformation Metric Learning for Unsupervised Dimensionality Reduction with Application to Supervised and Semi-Supervised Met", "bart_xsum": "Semi-Supervised Metric Learning vs. Unsupervised Dimensionality Reduction: A Case Study on IDML-IT", "t5_small": "IDML-IT: a Semi-Supervised Learning Algorithm", "gpt2": " Unsupervised Dimensionality Reduction with Transformed Spaces", "pegasus_xsum": "A Comparison of Supervised and Semi-Supervised Metric Learning Algorithms"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.029, "bart_base_bertscore": 0.846, "bart_base_moverscore": 0.585, "bart_cnn_bartscore": -4.889, "bart_cnn_bertscore": 0.861, "bart_cnn_moverscore": 0.562, "bart_xsum_bartscore": -4.818, "bart_xsum_bertscore": 0.865, "bart_xsum_moverscore": 0.57, "t5_small_bartscore": -5.318, "t5_small_bertscore": 0.859, "t5_small_moverscore": 0.574, "gpt2_bartscore": -6.23, "gpt2_bertscore": 0.864, "gpt2_moverscore": 0.565, "pegasus_xsum_bartscore": -3.711, "pegasus_xsum_bertscore": 0.874, "pegasus_xsum_moverscore": 0.591}}, {"abstract": "The purpose of this paper is to investigate infinity-sample properties of risk minimization based multi-category classification methods. These methods can be considered as natural extensions to binary large margin classification. We establish conditions that guarantee the infinity-sample consistency of classifiers obtained in the risk minimization framework. Examples are provided for two specific forms of the general formulation, which extend a number of known methods. Using these examples, we show that some risk minimization formulations can also be used to obtain conditional probability estimates for the underlying problem. Such conditional probability information will be useful for statistical inferencing tasks beyond classification.", "human_title": "An Infinity-sample Theory for Multi-category Large Margin Classification", "sys_gen": {"bart_cnn": "Infinite-sample multi-category classification with risk minimization and Conditional probability estimates. A general analysis of the general formulations", "bart_xsum": "Risk Minimization and Conditional Probability Estimation in Multi-category Classification", "t5_small": "Infinity-Sample Properties of Risk Minimization based Multi-Category Classification", "gpt2": " On the Consistency of Risk Minimization Based Multi-category Classification", "pegasus_xsum": "The infinity-sample consistency of risk based multi-category classification"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.737, "bart_base_bertscore": 0.898, "bart_base_moverscore": 0.637, "bart_cnn_bartscore": -4.529, "bart_cnn_bertscore": 0.882, "bart_cnn_moverscore": 0.588, "bart_xsum_bartscore": -4.584, "bart_xsum_bertscore": 0.873, "bart_xsum_moverscore": 0.619, "t5_small_bartscore": -5.319, "t5_small_bertscore": 0.894, "t5_small_moverscore": 0.632, "gpt2_bartscore": -4.822, "gpt2_bertscore": 0.864, "gpt2_moverscore": 0.575, "pegasus_xsum_bartscore": -4.444, "pegasus_xsum_bertscore": 0.897, "pegasus_xsum_moverscore": 0.65}}, {"abstract": "Distinguishing speculative statements from factual ones is important for most biomedical text mining applications. We introduce an approach which is based on solving two sub-problems to identify speculative sentence fragments. The first sub-problem is identifying the speculation keywords in the sentences and the second one is resolving their linguistic scopes. We formulate the first sub-problem as a supervised classification task, where we classify the potential keywords as real speculation keywords or not by using a diverse set of linguistic features that represent the contexts of the keywords. After detecting the actual speculation keywords, we use the syntactic structures of the sentences to determine their scopes.", "human_title": "Detecting Speculations and their Scopes in Scientific Text", "sys_gen": {"bart_base": "Identifying Speculation Keyword Fragments in Biomedical Text Mining", "bart_cnn": "Identifying Speculation Keywords in Sentence Fragments using Syntactic Structures and their Linguistic Scopes: An", "t5_small": "Distinguishing Speculative Statements from Factual Keywords", "gpt2": " Identifying Spurious Sentences Using Syntactic Structures", "pegasus_xsum": "Identifying Speculation in Factual Texts"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.589, "bart_base_bertscore": 0.871, "bart_base_moverscore": 0.585, "bart_cnn_bartscore": -4.228, "bart_cnn_bertscore": 0.884, "bart_cnn_moverscore": 0.57, "bart_xsum_bartscore": -3.996, "bart_xsum_bertscore": 0.885, "bart_xsum_moverscore": 0.587, "t5_small_bartscore": -4.751, "t5_small_bertscore": 0.825, "t5_small_moverscore": 0.555, "gpt2_bartscore": -4.367, "gpt2_bertscore": 0.878, "gpt2_moverscore": 0.574, "pegasus_xsum_bartscore": -4.097, "pegasus_xsum_bertscore": 0.887, "pegasus_xsum_moverscore": 0.589}}, {"abstract": "Information-theoretic measures are among the most standard techniques for evaluation of clustering methods including word sense induction (WSI) systems. Such measures rely on sample-based estimates of the entropy. However, the standard maximum likelihood estimates of the entropy are heavily biased with the bias dependent on, among other things, the number of clusters and the sample size. This makes the measures unreliable and unfair when the number of clusters produced by different systems vary and the sample size is not exceedingly large. This corresponds exactly to the setting of WSI evaluation where a ground-truth cluster sense number arguably does not exist and the standard evaluation scenarios use a small number of instances of each word to compute the score. We describe more accurate entropy estimators and analyze their performance both in simulations and on evaluation of WSI systems.", "human_title": "Improved Estimation of Entropy for Evaluation of Word Sense Induction", "sys_gen": {"bart_base": "Evaluating Word Sense Induction Systems Using Entropy Estimation", "bart_cnn": "Evaluation of Word Sense Induction Using Entropy Estimation Measures and the Sample Size of Clustering Schemes", "bart_xsum": "Evaluation of Word Sense Induction Systems Based on Sample-Based Entropy Estimation", "gpt2": " Evaluating Clustering Methods Using Word Sense Induction", "pegasus_xsum": "On the Accuracy of Entropy Estimation for Word Sense Induction"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.686, "bart_base_bertscore": 0.911, "bart_base_moverscore": 0.644, "bart_cnn_bartscore": -3.418, "bart_cnn_bertscore": 0.917, "bart_cnn_moverscore": 0.62, "bart_xsum_bartscore": -2.906, "bart_xsum_bertscore": 0.932, "bart_xsum_moverscore": 0.679, "t5_small_bartscore": -3.745, "t5_small_bertscore": 0.904, "t5_small_moverscore": 0.622, "gpt2_bartscore": -4.361, "gpt2_bertscore": 0.898, "gpt2_moverscore": 0.595, "pegasus_xsum_bartscore": -3.481, "pegasus_xsum_bertscore": 0.933, "pegasus_xsum_moverscore": 0.694}}, {"abstract": "It is usually assumed that the kind of noise existing in annotated data is random classification noise. Yet there is evidence that differences between annotators are not always random attention slips but could result from different biases towards the classification categories, at least for the harder-to-decide cases. Under an annotation generation model that takes this into account, there is a hazard that some of the training instances are actually hard cases with unreliable annotations. We show that these are relatively unproblematic for an algorithm operating under the 0-1 loss model, whereas for the commonly used voted perceptron algorithm, hard training cases could result in incorrect prediction on the uncontroversial cases at test time.", "human_title": "Learning with Annotation Noise", "sys_gen": {"bart_base": "Hard Training Cases in Random Classification Noise Generation", "bart_cnn": "Annotating Hard Cases with Noisy Annotations: Unsupervised Learning of Annotation Models under Uncertainty and Hardness", "t5_small": "Hard Training Cases with Unreliable Annotation Generation", "gpt2": " Random Attention Slippage in Annotation", "pegasus_xsum": "Training hard cases with unreliable annotations could result in incorrect prediction on uncontroversial cases"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.333, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -8.113, "bart_base_bertscore": 0.899, "bart_base_moverscore": 0.594, "bart_cnn_bartscore": -5.458, "bart_cnn_bertscore": 0.881, "bart_cnn_moverscore": 0.556, "bart_xsum_bartscore": -5.562, "bart_xsum_bertscore": 0.877, "bart_xsum_moverscore": 0.569, "t5_small_bartscore": -6.185, "t5_small_bertscore": 0.896, "t5_small_moverscore": 0.596, "gpt2_bartscore": -5.884, "gpt2_bertscore": 0.895, "gpt2_moverscore": 0.613, "pegasus_xsum_bartscore": -6.0, "pegasus_xsum_bertscore": 0.865, "pegasus_xsum_moverscore": 0.549}}, {"abstract": "This paper proposes a method for intrasentential subject zero anaphora resolution in Japanese. Our proposed method utilizes a Multi-column Convolutional Neural Network (MCNN) for predicting zero anaphoric relations. Motivated by Centering Theory and other previous works, we exploit as clues both the surface word sequence and the dependency tree of a target sentence in our MCNN. Even though the F-score of our method was lower than that of the state-of-the-art method, which achieved relatively high recall and low precision, our method achieved much higher precision (>0.8) in a wide range of recall levels. We believe such high precision is crucial for real-world NLP applications and thus our method is preferable to the state-of-the-art method.", "human_title": "Intra-Sentential Subject Zero Anaphora Resolution using Multi-Column Convolutional Neural Network", "sys_gen": {"bart_base": "A Multi-column Convolutional Neural Network for Zero Anaphora Resolution in Japanese", "bart_xsum": "Japanese Zero Anaphora Resolution with Multi-Column Convolutional Neural Networks", "t5_small": "Multi-Column Convolutional Neural Networks for Intrentential Subject Zero Anaphora Resolution", "gpt2": " Intrasentential Subject Zero Anaphora Resolution in Japanese", "pegasus_xsum": "Intra-sentential Subject Zero Anaphora Resolution with Multi- Convolutional Neural Network"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.941, "bart_base_bertscore": 0.946, "bart_base_moverscore": 0.693, "bart_cnn_bartscore": -2.839, "bart_cnn_bertscore": 0.946, "bart_cnn_moverscore": 0.67, "bart_xsum_bartscore": -2.521, "bart_xsum_bertscore": 0.955, "bart_xsum_moverscore": 0.71, "t5_small_bartscore": -2.499, "t5_small_bertscore": 0.939, "t5_small_moverscore": 0.702, "gpt2_bartscore": -2.44, "gpt2_bertscore": 0.958, "gpt2_moverscore": 0.737, "pegasus_xsum_bartscore": -1.719, "pegasus_xsum_bertscore": 0.959, "pegasus_xsum_moverscore": 0.765}}, {"abstract": "Traditional vector-based models use word co-occurrence counts from large corpora to represent lexical meaning. In this paper we present a novel approach for constructing semantic spaces that takes syntactic relations into account. We introduce a formalisation for this class of models and evaluate their adequacy on two modelling tasks: semantic priming and automatic discrimination of lexical relations.", "human_title": "Constructing Semantic Space Models from Parsed Corpora", "sys_gen": {"bart_base": "Semantic Spaces for Lexical Semantic Parsing", "bart_cnn": "Building Semantic Spaces with Syntactic and Semantic Priming: A Case Study in Vector-Based Learning of Lexical Meaning", "t5_small": "Semantic Spaces for Syntactic Relation Models", "gpt2": " Semantic Spaces for Lexical Relations", "pegasus_xsum": "A Formalisation of Vector-based Models of Semantic Spaces"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.333, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.171, "bart_base_bertscore": 0.9, "bart_base_moverscore": 0.622, "bart_cnn_bartscore": -4.436, "bart_cnn_bertscore": 0.882, "bart_cnn_moverscore": 0.571, "bart_xsum_bartscore": -4.682, "bart_xsum_bertscore": 0.884, "bart_xsum_moverscore": 0.602, "t5_small_bartscore": -4.622, "t5_small_bertscore": 0.903, "t5_small_moverscore": 0.626, "gpt2_bartscore": -5.158, "gpt2_bertscore": 0.885, "gpt2_moverscore": 0.603, "pegasus_xsum_bartscore": -3.947, "pegasus_xsum_bertscore": 0.904, "pegasus_xsum_moverscore": 0.628}}, {"abstract": "This paper proposes the use of Lexicalized Tree-Adjoining Grammar (LTAG) formalism as an important additional source of features for the Semantic Role Labeling (SRL) task. Using a set of one-vs-all Support Vector Machines (SVMs), we evaluate these LTAG-based features. Our experiments show that LTAG-based features can improve SRL accuracy significantly. When compared with the best known set of features that are used in state of the art SRL systems we obtain an improvement in F-score from 82.34% to 85.25%.", "human_title": "Experimental Evaluation of LTAG-Based Features for Semantic Role Labeling", "sys_gen": {"bart_base": "Lexicalized Tree-Adjoining Grammar as an Application to Semantic Role Labeling", "bart_cnn": "Semantic Role Labeling with LTAG-based Features and Lexicalized Tree-Adjoining Grammar (LTAG)", "bart_xsum": "Using LTAG-based Features for Semantic Role Labeling", "t5_small": "Lexicalized Tree-Adjoining Grammar for Semantic Role Labeling", "pegasus_xsum": "Using Lexicalized Tree-Adjoining Grammar Formalism for Improved SRL"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 1.0, "human_title_bws": -0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 1.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.989, "bart_base_bertscore": 0.928, "bart_base_moverscore": 0.662, "bart_cnn_bartscore": -3.757, "bart_cnn_bertscore": 0.907, "bart_cnn_moverscore": 0.601, "bart_xsum_bartscore": -1.94, "bart_xsum_bertscore": 0.952, "bart_xsum_moverscore": 0.672, "t5_small_bartscore": -4.491, "t5_small_bertscore": 0.874, "t5_small_moverscore": 0.588, "gpt2_bartscore": -4.76, "gpt2_bertscore": 0.882, "gpt2_moverscore": 0.596, "pegasus_xsum_bartscore": -5.56, "pegasus_xsum_bertscore": 0.863, "pegasus_xsum_moverscore": 0.574}}, {"abstract": "1 I n t r o d u c t i o n We present ALLiS, a learning system for identifying syntactic structures which uses theory refinement. When other learning techniques (symbolic or statistical) are widely used in Natural Language Learning, few applications use theory refinement (Abecker and Schmid, 1996), (Mooney, 1993). We would like to show that even a basic implementation of notions used in TR is enough to build an efficient machine learning system concerning the task of learning linguistic structures. ALLiS relies on the use of background knowledge and default values in order to build up an initial grammar and on the use of theory refinement in order to improve this grammar. This combination provides a good machine learning framework (efficient and fast) for Natural Language Learning. After presenting theory refinement (Section 2) and a general description of ALLiS (Section 3), we will show how each step of TR is applying in the specific case of learning linguistic structures (non-recursive phrases).", "human_title": "ALLiS: a Symbolic Learning System for Natural Language Learning", "sys_gen": {"bart_cnn": "Learning Linguistic Structures Using Theory Refinement and Efficient Machine Learning for Natural Language Learning using Syntactic Structural Struct", "bart_xsum": "AlliS: A Machine Learning System for Syntactic Structures Using Theory Refinement", "t5_small": "Identifying Syntactic Structures with Theory Raffinment", "gpt2": " Learning Linguistic Structures Using Theory Refinement", "pegasus_xsum": "AlliS: A Machine Learning System for Learning Linguistic Structures"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.813, "bart_base_bertscore": 0.902, "bart_base_moverscore": 0.651, "bart_cnn_bartscore": -4.702, "bart_cnn_bertscore": 0.861, "bart_cnn_moverscore": 0.586, "bart_xsum_bartscore": -4.435, "bart_xsum_bertscore": 0.898, "bart_xsum_moverscore": 0.648, "t5_small_bartscore": -5.928, "t5_small_bertscore": 0.836, "t5_small_moverscore": 0.543, "gpt2_bartscore": -4.067, "gpt2_bertscore": 0.911, "gpt2_moverscore": 0.662, "pegasus_xsum_bartscore": -4.095, "pegasus_xsum_bertscore": 0.892, "pegasus_xsum_moverscore": 0.655}}, {"abstract": "Neural network models, based on the attentional encoder-decoder model, have good capability in abstractive text summarization. However, these models are hard to be controlled in the process of generation, which leads to a lack of key information. We propose a guiding generation model that combines the extractive method and the abstractive method. Firstly, we obtain keywords from the text by a extractive model. Then, we introduce a Key Information Guide Network (KIGN), which encodes the keywords to the key information representation, to guide the process of generation. In addition, we use a prediction-guide mechanism, which can obtain the long-term value for future decoding, to further guide the summary generation. We evaluate our model on the CNN/Daily Mail dataset. The experimental results show that our model leads to significant improvements.", "human_title": "Guiding Generation for Abstractive Text Summarization Based on Key Information Guide Network", "sys_gen": {"bart_base": "Guiding Generation in Abstractive Text Summarization with Key Information Guide Networks", "bart_cnn": "Key Information Guide Network for Abstractive Text Summarization: A Case Study on Keyword Generation with an Extractive Keyword", "bart_xsum": "A Key Information Guide Network for Abstractive Text Summarization", "gpt2": " Key Information Guide Network for Abstractive Text Summarization", "pegasus_xsum": "Key Information Guide Network for Extractive Text Summarization"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 2.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.333, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -1.816, "bart_base_bertscore": 0.971, "bart_base_moverscore": 0.774, "bart_cnn_bartscore": -3.722, "bart_cnn_bertscore": 0.909, "bart_cnn_moverscore": 0.63, "bart_xsum_bartscore": -2.138, "bart_xsum_bertscore": 0.934, "bart_xsum_moverscore": 0.673, "t5_small_bartscore": -2.835, "t5_small_bertscore": 0.928, "t5_small_moverscore": 0.659, "gpt2_bartscore": -2.889, "gpt2_bertscore": 0.927, "gpt2_moverscore": 0.658, "pegasus_xsum_bartscore": -2.162, "pegasus_xsum_bertscore": 0.93, "pegasus_xsum_moverscore": 0.654}}, {"abstract": "Previous work on grounded language learning did not fully capture the semantics underlying the correspondences between structured world state representations and texts, especially those between numerical values and lexical terms. In this paper, we attempt at learning explicit latent semantic annotations from paired structured tables and texts, establishing correspondences between various types of values and texts. We model the joint probability of data fields, texts, phrasal spans, and latent annotations with an adapted semi-hidden Markov model, and impose a soft statistical constraint to further improve the performance. As a by-product, we leverage the induced annotations to extract templates for language generation. Experimental results suggest the feasibility of the setting in this study, as well as the effectiveness of our proposed framework.", "human_title": "Learning Latent Semantic Annotations for Grounding Natural Language to Structured Data", "sys_gen": {"bart_base": "Learning Explicit Latent Semantic Annotations from Structured Tables and Texts", "bart_xsum": "Grounded Language Learning with Latent Semantic Annotation", "t5_small": "Learning Exact Latent Semantics from paired Structured Tables and Texts", "gpt2": " Latent Semantic Annotations for Grounded Language Learning", "pegasus_xsum": "Learning Explicit Latent Semantic Annotations for Grounded Language Learning"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.661, "bart_base_bertscore": 0.931, "bart_base_moverscore": 0.647, "bart_cnn_bartscore": -4.695, "bart_cnn_bertscore": 0.907, "bart_cnn_moverscore": 0.608, "bart_xsum_bartscore": -3.348, "bart_xsum_bertscore": 0.928, "bart_xsum_moverscore": 0.626, "t5_small_bartscore": -4.683, "t5_small_bertscore": 0.903, "t5_small_moverscore": 0.65, "gpt2_bartscore": -4.361, "gpt2_bertscore": 0.918, "gpt2_moverscore": 0.646, "pegasus_xsum_bartscore": -3.49, "pegasus_xsum_bertscore": 0.937, "pegasus_xsum_moverscore": 0.671}}, {"abstract": "Supervised and semi-supervised sense disambiguation methods will mis-tag the instances of a target word if the senses of these instances are not defined in sense inventories or there are no tagged instances for these senses in training data. Here we used a model order identification method to avoid the misclassification of the instances with undefined senses by discovering new senses from mixed data (tagged and untagged corpora). This algorithm tries to obtain a natural partition of the mixed data by maximizing a stability criterion defined on the classification result from an extended label propagation algorithm over all the possible values of the number of senses (or sense number, model order). Experimental results on SENSEVAL-3 data indicate that it outperforms SVM, a one-class partially supervised classification algorithm, and a clustering based model order identification algorithm when the tagged data is incomplete.", "human_title": "Partially Supervised Sense Disambiguation by Learning Sense Number from Tagged and Untagged Corpora", "sys_gen": {"bart_base": "Supervised and Semi-Supervised Sense Disambiguation Using Model Order Identification", "bart_cnn": "Semi-Supervised and Semi-supervised Sense Disambiguation using Label Propagation and Clustering Based", "bart_xsum": "Model Order Identification for Sense Disambiguation with Mixed Data", "t5_small": "Model Order Identification for Undefined Sentiment Disambiguation", "pegasus_xsum": "Model Order Identification for Semi-Supervised and Fully-Supervised Sense Annotation"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 3.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 1.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.089, "bart_base_bertscore": 0.887, "bart_base_moverscore": 0.606, "bart_cnn_bartscore": -3.43, "bart_cnn_bertscore": 0.878, "bart_cnn_moverscore": 0.606, "bart_xsum_bartscore": -4.507, "bart_xsum_bertscore": 0.874, "bart_xsum_moverscore": 0.589, "t5_small_bartscore": -5.186, "t5_small_bertscore": 0.857, "t5_small_moverscore": 0.574, "gpt2_bartscore": -3.354, "gpt2_bertscore": 0.887, "gpt2_moverscore": 0.605, "pegasus_xsum_bartscore": -4.327, "pegasus_xsum_bertscore": 0.864, "pegasus_xsum_moverscore": 0.586}}, {"abstract": "Classification of temporal textual data sequences is a common task in various domains such as social media and the Web. In this paper we propose to use Hawkes Processes for classifying sequences of temporal textual data, which exploit both temporal and textual information. Our experiments on rumour stance classification on four Twitter datasets show the importance of using the temporal information of tweets along with the textual content.", "human_title": "Hawkes Processes for Continuous Time Sequence Classification: an Application to Rumour Stance Classification in Twitter", "sys_gen": {"bart_base": "Classifying Temporal Textual Data Using Hawkes Processes", "bart_cnn": "Hawkes Processes for Classifying Temporal Textual Data Using Rumour Stance Classification of Social Media and the World Wide Web", "bart_xsum": "Using Hawkes Processes to Classify Temporal Textual Data Sequences for Twitter Rumour Stance Classification", "t5_small": "Hawkes Processes for Classifying Temporal Textual Data Sequences", "pegasus_xsum": "Hawkes Processes for Classification of Temporal Textual Data"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.772, "bart_base_bertscore": 0.884, "bart_base_moverscore": 0.583, "bart_cnn_bartscore": -3.55, "bart_cnn_bertscore": 0.899, "bart_cnn_moverscore": 0.599, "bart_xsum_bartscore": -3.87, "bart_xsum_bertscore": 0.892, "bart_xsum_moverscore": 0.607, "t5_small_bartscore": -3.328, "t5_small_bertscore": 0.887, "t5_small_moverscore": 0.59, "gpt2_bartscore": -3.758, "gpt2_bertscore": 0.888, "gpt2_moverscore": 0.584, "pegasus_xsum_bartscore": -3.316, "pegasus_xsum_bertscore": 0.894, "pegasus_xsum_moverscore": 0.602}}, {"abstract": "Lexical embeddings can serve as useful representations for words for a variety of NLP tasks, but learning embeddings for phrases can be challenging. While separate embeddings are learned for each word, this is infeasible for every phrase. We construct phrase embeddings by learning how to compose word embeddings using features that capture phrase structure and context. We propose efficient unsupervised and task-specific learning objectives that scale our model to large datasets. We demonstrate improvements on both language modeling and several phrase semantic similarity tasks with various phrase lengths. We make the implementation of our model and the datasets available for general use.", "human_title": "Learning Composition Models for Phrase Embeddings", "sys_gen": {"bart_base": "Learning Phrase Embeddings by Composing Word Representations for NLP", "bart_cnn": "Unsupervised Learning of Phrase Embeddings for NLP Tasks using Word Structure and Context from Large Datasets", "bart_xsum": "Unsupervised Learning of Phrase Embedding Representations", "gpt2": " Unsupervised Learning of Phrase Embeddings", "pegasus_xsum": "Learning Word Embeddings for Phrase Structure and Context"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.041, "bart_base_bertscore": 0.929, "bart_base_moverscore": 0.657, "bart_cnn_bartscore": -4.203, "bart_cnn_bertscore": 0.892, "bart_cnn_moverscore": 0.592, "bart_xsum_bartscore": -2.707, "bart_xsum_bertscore": 0.93, "bart_xsum_moverscore": 0.669, "t5_small_bartscore": -2.922, "t5_small_bertscore": 0.932, "t5_small_moverscore": 0.671, "gpt2_bartscore": -3.055, "gpt2_bertscore": 0.923, "gpt2_moverscore": 0.643, "pegasus_xsum_bartscore": -3.11, "pegasus_xsum_bertscore": 0.934, "pegasus_xsum_moverscore": 0.681}}, {"abstract": "We investigate grounded sentence representations, where we train a sentence encoder to predict the image features of a given caption-i.e., we try to \"imagine\" how a sentence would be depicted visually-and use the resultant features as sentence representations. We examine the quality of the learned representations on a variety of standard sentence representation quality benchmarks, showing improved performance for grounded models over non-grounded ones. In addition, we thoroughly analyze the extent to which grounding contributes to improved performance, and show that the system also learns improved word embeddings.", "human_title": "Learning Visually Grounded Sentence Representations", "sys_gen": {"bart_base": "Grounded Sentence Representations and Improved Word Embeddings", "bart_xsum": "Grounded Sentence Representations: An Empirical Comparison of Image Features and Word Embeddings", "t5_small": "Structural Sentence Representations Using Sentence Encoding", "gpt2": " Learning Grounded Sentence Representations", "pegasus_xsum": "Grounded Sentence Representations: An Investigation"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.691, "bart_base_bertscore": 0.932, "bart_base_moverscore": 0.667, "bart_cnn_bartscore": -4.105, "bart_cnn_bertscore": 0.894, "bart_cnn_moverscore": 0.571, "bart_xsum_bartscore": -3.24, "bart_xsum_bertscore": 0.903, "bart_xsum_moverscore": 0.602, "t5_small_bartscore": -3.49, "t5_small_bertscore": 0.912, "t5_small_moverscore": 0.643, "gpt2_bartscore": -3.617, "gpt2_bertscore": 0.93, "gpt2_moverscore": 0.662, "pegasus_xsum_bartscore": -2.664, "pegasus_xsum_bertscore": 0.915, "pegasus_xsum_moverscore": 0.673}}, {"abstract": "Currently, almost all of the statistical machine translation (SMT) models are trained with the parallel corpora in some specific domains. However, when it comes to a language pair or a different domain without any bilingual resources, the traditional SMT loses its power. Recently, some research works study the unsupervised SMT for inducing a simple word-based translation model from the monolingual corpora. It successfully bypasses the constraint of bitext for SMT and obtains a relatively promising result. In this paper, we take a step forward and propose a simple but effective method to induce a phrase-based model from the monolingual corpora given an automatically-induced translation lexicon or a manually-edited translation dictionary. We apply our method for the domain adaptation task and the extensive experiments show that our proposed method can substantially improve the translation quality.", "human_title": "Learning a Phrase-based Translation Model from Monolingual Data with Application to Domain Adaptation", "sys_gen": {"bart_base": "An Unsupervised Method for Domain Adaptation in Statistical Machine Translation", "bart_cnn": "Unsupervised SMT Induction of Phrase-Based Translation Models from Monolingual Corpora with Application to Domain Adaptation", "bart_xsum": "Unsupervised Unfolding of Phrase-based Translation Model for Domain Adaptation", "t5_small": "Inducing a Simple Word-Based Translation Model from the Monolingual Corpora", "gpt2": " Unsupervised Phrase-Based Translation Model for Domain Adaptation"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.149, "bart_base_bertscore": 0.882, "bart_base_moverscore": 0.585, "bart_cnn_bartscore": -3.724, "bart_cnn_bertscore": 0.919, "bart_cnn_moverscore": 0.669, "bart_xsum_bartscore": -4.173, "bart_xsum_bertscore": 0.887, "bart_xsum_moverscore": 0.603, "t5_small_bartscore": -3.414, "t5_small_bertscore": 0.914, "t5_small_moverscore": 0.648, "gpt2_bartscore": -3.302, "gpt2_bertscore": 0.907, "gpt2_moverscore": 0.613, "pegasus_xsum_bartscore": -3.876, "pegasus_xsum_bertscore": 0.897, "pegasus_xsum_moverscore": 0.603}}, {"abstract": "Procedurally generating cohesive and interesting game environments is challenging and time-consuming. In order for the relationships between the game elements to be natural, common-sense has to be encoded into arrangement of the elements. In this work, we investigate a machine learning approach for world creation using content from the multiplayer text adventure game environment LIGHT (Urbanek et al. 2019). We introduce neural network based models to compositionally arrange locations, characters, and objects into a coherent whole. In addition to creating worlds based on existing elements, our models can generate new game content. Humans can also leverage our models to interactively aid in worldbuilding. We show that the game environments created with our approach are cohesive, diverse, and preferred by human evaluators compared to other machine learning based world construction algorithms.", "human_title": "Generating Interactive Worlds with Text", "sys_gen": {"bart_base": "Learning to Generate Cohesive and Efficient Games using Content from Online Games", "bart_cnn": "Learning to Generate Cohesive Games Using Neural Network-based Content from the Online World-Building Task in Multi-player Text", "t5_small": "Machine Learning for World Creation using Multiplayer Text Adventure Game Environments", "gpt2": " Cohesive and Interesting World Creation Using Neural Networks", "pegasus_xsum": "Multiplayer Text Adventure Games with Compositional Neural Networks"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.863, "bart_base_bertscore": 0.883, "bart_base_moverscore": 0.568, "bart_cnn_bartscore": -5.525, "bart_cnn_bertscore": 0.882, "bart_cnn_moverscore": 0.545, "bart_xsum_bartscore": -5.43, "bart_xsum_bertscore": 0.889, "bart_xsum_moverscore": 0.607, "t5_small_bartscore": -4.642, "t5_small_bertscore": 0.895, "t5_small_moverscore": 0.575, "gpt2_bartscore": -5.43, "gpt2_bertscore": 0.9, "gpt2_moverscore": 0.613, "pegasus_xsum_bartscore": -5.443, "pegasus_xsum_bertscore": 0.899, "pegasus_xsum_moverscore": 0.586}}, {"abstract": "Character-based neural machine translation (NMT) models alleviate out-ofvocabulary issues, learn morphology, and move us closer to completely end-toend translation systems. Unfortunately, they are also very brittle and easily falter when presented with noisy data. In this paper, we confront NMT models with synthetic and natural sources of noise. We find that state-of-the-art models fail to translate even moderately noisy texts that humans have no trouble comprehending. We explore two approaches to increase model robustness: structure-invariant word representations and robust training on noisy texts. We find that a model based on a character convolutional neural network is able to simultaneously learn representations robust to multiple kinds of noise.", "human_title": "Synthetic and Natural Noise Both Break Neural Machine Translation", "sys_gen": {"bart_base": "Character-Based Neural Machine Translation with Noisy Texts", "bart_cnn": "Character-Based Neural Machine Translation with Synthetic and Natural Sources of Noise: A Case Study on Noisy Texts in N", "bart_xsum": "Robust Neural Machine Translation with Synthetic and Natural Sources of Noisy Data", "t5_small": "Robust Character-Based Neural Machine Translation", "pegasus_xsum": "Character-Based Neural Machine Translation Fails to Translate Noisy Texts"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.656, "bart_base_bertscore": 0.889, "bart_base_moverscore": 0.628, "bart_cnn_bartscore": -4.433, "bart_cnn_bertscore": 0.887, "bart_cnn_moverscore": 0.59, "bart_xsum_bartscore": -3.85, "bart_xsum_bertscore": 0.906, "bart_xsum_moverscore": 0.638, "t5_small_bartscore": -5.006, "t5_small_bertscore": 0.887, "t5_small_moverscore": 0.608, "gpt2_bartscore": -4.962, "gpt2_bertscore": 0.889, "gpt2_moverscore": 0.619, "pegasus_xsum_bartscore": -4.154, "pegasus_xsum_bertscore": 0.894, "pegasus_xsum_moverscore": 0.618}}, {"abstract": "We show that for a general class of convex online learning problems, Mirror Descent can always achieve a (nearly) optimal regret guarantee.", "human_title": "On the Universality of Online Mirror Descent", "sys_gen": {"bart_base": "Optimal Regret Guarantees for Mirror Descent", "bart_cnn": "Online Mirror Descent: Almost Optimal Regret Guarantee Guarantees for Convex Online Learning with Limited Supervision.", "bart_xsum": "Optimal Regret Guarantees for Mirror Descent", "gpt2": " Optimal Regret Guarantees for Mirror Descent", "pegasus_xsum": "Mirror Descent can always achieve an optimal regret guarantee"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.929, "bart_base_bertscore": 0.873, "bart_base_moverscore": 0.596, "bart_cnn_bartscore": -5.278, "bart_cnn_bertscore": 0.873, "bart_cnn_moverscore": 0.562, "bart_xsum_bartscore": -5.578, "bart_xsum_bertscore": 0.891, "bart_xsum_moverscore": 0.6, "t5_small_bartscore": -4.382, "t5_small_bertscore": 0.892, "t5_small_moverscore": 0.602, "gpt2_bartscore": -5.32, "gpt2_bertscore": 0.908, "gpt2_moverscore": 0.601, "pegasus_xsum_bartscore": -6.133, "pegasus_xsum_bertscore": 0.872, "pegasus_xsum_moverscore": 0.593}}, {"abstract": "We introduce DropConnect, a generalization of Dropout (Hinton et al., 2012), for regularizing large fully-connected layers within neural networks. When training with Dropout, a randomly selected subset of activations are set to zero within each layer. DropConnect instead sets a randomly selected subset of weights within the network to zero. Each unit thus receives input from a random subset of units in the previous layer. We derive a bound on the generalization performance of both Dropout and DropConnect. We then evaluate DropConnect on a range of datasets, comparing to Dropout, and show state-of-the-art results on several image recognition benchmarks by aggregating multiple DropConnect-trained models.", "human_title": "Regularization of Neural Networks using DropConnect", "sys_gen": {"bart_base": "DropConnect: A Generalization of Dropout for Regularizing Neural Networks", "bart_cnn": "DropConnect: Regularizing Fully-Connected Networks via Randomized Subset Selection and Multiple Drop-Connecting Data Aggregation", "bart_xsum": "DropConnect: A Generalization of Dropout for Fully-Connected Neural Networks", "t5_small": "DropConnect: A Generalization of Dropout in Neural Networks", "pegasus_xsum": "Dropout Meets DropConnect: Regularizing Fully-Connected Neural Networks"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.272, "bart_base_bertscore": 0.901, "bart_base_moverscore": 0.627, "bart_cnn_bartscore": -5.093, "bart_cnn_bertscore": 0.895, "bart_cnn_moverscore": 0.559, "bart_xsum_bartscore": -4.356, "bart_xsum_bertscore": 0.871, "bart_xsum_moverscore": 0.593, "t5_small_bartscore": -4.645, "t5_small_bertscore": 0.877, "t5_small_moverscore": 0.599, "gpt2_bartscore": -4.227, "gpt2_bertscore": 0.913, "gpt2_moverscore": 0.635, "pegasus_xsum_bartscore": -3.928, "pegasus_xsum_bertscore": 0.912, "pegasus_xsum_moverscore": 0.637}}, {"abstract": "We describe a synchronous parsing algorithm that is based on two successive monolingual parses of an input sentence pair. Although the worst-case complexity of this algorithm is and must be O(n) for binary SCFGs, its average-case run-time is far better. We demonstrate that for a number of common synchronous parsing problems, the two-parse algorithm substantially outperforms alternative synchronous parsing strategies, making it efficient enough to be utilized without resorting to a pruned search.", "human_title": "Two monolingual parses are better than one (synchronous parse)", "sys_gen": {"bart_cnn": "A Two-Parallel Synchronous Parsing Algorithm Based on Successive Monolingual Parsing and Pruned Search", "bart_xsum": "Efficient Synchronous Parsing with Two Monolingual Parses", "t5_small": "A Two-Parse Synchronous Parsing Algorithm for Binary SCFG", "gpt2": " A Synchronous Parser Based on Two successive Monolingual Parses", "pegasus_xsum": "Efficient Synchronous Parsing with Two Syntactic Monolingual Parses"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 3.0, "human_title_bws": -1.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 3.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.106, "bart_base_bertscore": 0.895, "bart_base_moverscore": 0.6, "bart_cnn_bartscore": -3.871, "bart_cnn_bertscore": 0.881, "bart_cnn_moverscore": 0.572, "bart_xsum_bartscore": -3.094, "bart_xsum_bertscore": 0.906, "bart_xsum_moverscore": 0.615, "t5_small_bartscore": -4.389, "t5_small_bertscore": 0.883, "t5_small_moverscore": 0.594, "gpt2_bartscore": -3.308, "gpt2_bertscore": 0.9, "gpt2_moverscore": 0.626, "pegasus_xsum_bartscore": -3.706, "pegasus_xsum_bertscore": 0.9, "pegasus_xsum_moverscore": 0.614}}, {"abstract": "We present a novel technique for semantic frame identification using distributed representations of predicates and their syntactic context; this technique leverages automatic syntactic parses and a generic set of word embeddings. Given labeled data annotated with frame-semantic parses, we learn a model that projects the set of word representations for the syntactic context around a predicate to a low dimensional representation. The latter is used for semantic frame identification; with a standard argument identification method inspired by prior work, we achieve state-ofthe-art results on FrameNet-style framesemantic analysis. Additionally, we report strong results on PropBank-style semantic role labeling in comparison to prior work.", "human_title": "Semantic Frame Identification with Distributed Word Representations", "sys_gen": {"bart_base": "Semantic Frame Identification with Distributed Representations of Predicates and their Syntactic Context", "bart_cnn": "Semantic Frame Identification using Syntactic and Semantic Representations of Predicates and their Syntactic Context Using Word Embeddings", "bart_xsum": "Semantic Frame Identification Using Distributed Representations of Predicates and their Syntactic Context", "t5_small": "Semantic Frame Identification with Distributed Representations of Predicates and Their Syntactic Context", "gpt2": " Semantic Frame Identification Using Distributional Representations"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.676, "bart_base_bertscore": 0.942, "bart_base_moverscore": 0.652, "bart_cnn_bartscore": -3.946, "bart_cnn_bertscore": 0.91, "bart_cnn_moverscore": 0.592, "bart_xsum_bartscore": -3.583, "bart_xsum_bertscore": 0.942, "bart_xsum_moverscore": 0.656, "t5_small_bartscore": -3.48, "t5_small_bertscore": 0.946, "t5_small_moverscore": 0.666, "gpt2_bartscore": -3.76, "gpt2_bertscore": 0.956, "gpt2_moverscore": 0.715, "pegasus_xsum_bartscore": -3.867, "pegasus_xsum_bertscore": 0.933, "pegasus_xsum_moverscore": 0.63}}, {"abstract": "This paper investigates contextual word representation models from the lens of similarity analysis. Given a collection of trained models, we measure the similarity of their internal representations and attention. Critically, these models come from vastly different architectures. We use existing and novel similarity measures that aim to gauge the level of localization of information in the deep models, and facilitate the investigation of which design factors affect model similarity, without requiring any external linguistic annotation. The analysis reveals that models within the same family are more similar to one another, as may be expected. Surprisingly, different architectures have rather similar representations, but different individual neurons. We also observed differences in information localization in lower and higher layers and found that higher layers are more affected by fine-tuning on downstream tasks.", "human_title": "Similarity Analysis of Contextual Word Representation Models", "sys_gen": {"bart_cnn": "Similarity Analysis of Contextual Word Representations: A Case Study on Information Localization in the Lens of Similarity Analysis.", "bart_xsum": "Similarity Analysis of Contextual Word Representations in Deep Learning", "t5_small": "Similarity Measures for Contextual Word Representations", "gpt2": " Contextual Word Representation Models", "pegasus_xsum": "Comparing Neural Architectures of Contextual Word Representations"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.574, "bart_base_bertscore": 0.96, "bart_base_moverscore": 0.72, "bart_cnn_bartscore": -3.257, "bart_cnn_bertscore": 0.928, "bart_cnn_moverscore": 0.619, "bart_xsum_bartscore": -2.23, "bart_xsum_bertscore": 0.968, "bart_xsum_moverscore": 0.771, "t5_small_bartscore": -2.241, "t5_small_bertscore": 0.973, "t5_small_moverscore": 0.741, "gpt2_bartscore": -2.927, "gpt2_bertscore": 0.942, "gpt2_moverscore": 0.671, "pegasus_xsum_bartscore": -2.664, "pegasus_xsum_bertscore": 0.953, "pegasus_xsum_moverscore": 0.767}}, {"abstract": "Categorial grammar has traditionally used the \u03bb-calculus to represent meaning. We present an alternative, dependency-based perspective on linguistic meaning and situate it in the computational setting. This perspective is formalized in terms of hybrid logic and has a rich yet perspicuous propositional ontology that enables a wide variety of semantic phenomena to be represented in a single meaning formalism. Finally, we show how we can couple this formalization to Combinatory Categorial Grammar to produce interpretations compositionally.", "human_title": "Coupling CCG and Hybrid Logic Dependency Semantics", "sys_gen": {"bart_base": "Synthesizing Semantic Phenomena in Categorial Grammar", "bart_xsum": "Dependency-Based Categorial Grammar with Hybrid Logic", "t5_small": "Combinatory Categorial Grammar: A Dependency-Based Perspective on Language Meaning", "gpt2": " Compositional Semantics with Hybrid Logic and Situated Inference", "pegasus_xsum": "Dependency-based Categorial Grammars"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.033, "bart_base_bertscore": 0.865, "bart_base_moverscore": 0.598, "bart_cnn_bartscore": -4.473, "bart_cnn_bertscore": 0.857, "bart_cnn_moverscore": 0.555, "bart_xsum_bartscore": -3.462, "bart_xsum_bertscore": 0.882, "bart_xsum_moverscore": 0.635, "t5_small_bartscore": -4.414, "t5_small_bertscore": 0.862, "t5_small_moverscore": 0.577, "gpt2_bartscore": -4.526, "gpt2_bertscore": 0.893, "gpt2_moverscore": 0.623, "pegasus_xsum_bartscore": -3.785, "pegasus_xsum_bertscore": 0.869, "pegasus_xsum_moverscore": 0.593}}, {"abstract": "Recently, work in NLP was initiated on a type of opinion inference that arises when opinions are expressed toward events which have positive or negative effects on entities (+/-effect events). This paper addresses methods for creating a lexicon of such events, to support such work on opinion inference. Due to significant sense ambiguity, our goal is to develop a sense-level rather than word-level lexicon. To maximize the effectiveness of different types of information, we combine a graph-based method using WordNet1 relations and a standard classifier using gloss information. A hybrid between the two gives the best results. Further, we provide evidence that the model is an effective way to guide manual annotation to find +/-effect senses that are not in the seed set.", "human_title": "+/-EffectWordNet: Sense-level Lexicon Acquisition for Opinion Inference", "sys_gen": {"bart_base": "A Sense-Level Lexicon for Opinion Inference in NLP", "bart_cnn": "A Sense-Level Lexicon of Events Using WordNet1 Relations and Gloss Information for Opinion Inference on Entities +/-", "bart_xsum": "A Graph-based Lexicon of +/--Effect Events", "gpt2": " A Sense-Level Lexicon for Opinion Inference", "pegasus_xsum": "A Sense-Level Lexicon for Opinion Inference"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 1.0, "bart_base_bws": -0.333, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 3.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.977, "bart_base_bertscore": 0.9, "bart_base_moverscore": 0.648, "bart_cnn_bartscore": -5.047, "bart_cnn_bertscore": 0.892, "bart_cnn_moverscore": 0.615, "bart_xsum_bartscore": -5.533, "bart_xsum_bertscore": 0.864, "bart_xsum_moverscore": 0.607, "t5_small_bartscore": -4.652, "t5_small_bertscore": 0.878, "t5_small_moverscore": 0.625, "gpt2_bartscore": -3.403, "gpt2_bertscore": 0.895, "gpt2_moverscore": 0.662, "pegasus_xsum_bartscore": -3.175, "pegasus_xsum_bertscore": 0.902, "pegasus_xsum_moverscore": 0.644}}, {"abstract": "Subjectivity word sense disambiguation (SWSD) is automatically determining which word instances in a corpus are being used with subjective senses, and which are being used with objective senses. SWSD has been shown to improve the performance of contextual opinion analysis, but only on a small scale and using manually developed integration rules. In this paper, we scale up the integration of SWSD into contextual opinion analysis and still obtain improvements in performance, by successfully gathering data annotated by non-expert annotators. Further, by improving the method for integrating SWSD into contextual opinion analysis, even greater benefits from SWSD are achieved than in previous work. We thus more firmly demonstrate the potential of SWSD to improve contextual opinion analysis.", "human_title": "Improving the Impact of Subjectivity Word Sense Disambiguation on Contextual Opinion Analysis", "sys_gen": {"bart_cnn": "Integrating Subjectivity Word Sense Disambiguation into Contextual Opinion Analysis: A Case Study on Non-Expert Annotations", "bart_xsum": "Scaling up Subjectivity Word Sense Disambiguation for Contextual Opinion Analysis", "t5_small": "Integrated Subjectivity Word Sentiment Disambiguation into Contextual Opinion Analysis", "gpt2": " Improving Contextual Opinion Analysis Using Word Sense Disambiguation", "pegasus_xsum": "Scaling up Subjectivity Word Sense Disambiguation into Contextual Opinion Analysis"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 2.0, "human_title_bws": -0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.407, "bart_base_bertscore": 0.955, "bart_base_moverscore": 0.716, "bart_cnn_bartscore": -2.826, "bart_cnn_bertscore": 0.929, "bart_cnn_moverscore": 0.641, "bart_xsum_bartscore": -2.704, "bart_xsum_bertscore": 0.951, "bart_xsum_moverscore": 0.717, "t5_small_bartscore": -3.004, "t5_small_bertscore": 0.948, "t5_small_moverscore": 0.68, "gpt2_bartscore": -2.398, "gpt2_bertscore": 0.928, "gpt2_moverscore": 0.661, "pegasus_xsum_bartscore": -2.425, "pegasus_xsum_bertscore": 0.956, "pegasus_xsum_moverscore": 0.715}}, {"abstract": "Task-oriented dialog systems increasingly rely on deep learning-based slot filling models, usually needing extensive labeled training data for target domains. Often, however, little to no target domain training data may be available, or the training and target domain schemas may be misaligned, as is common for web forms on similar websites. Prior zero-shot slot filling models use slot descriptions to learn concepts, but are not robust to misaligned schemas. We propose utilizing both the slot description and a small number of examples of slot values, which may be easily available, to learn semantic representations of slots which are transferable across domains and robust to misaligned schemas. Our approach outperforms state-of-the-art models on two multi-domain datasets, especially in the low-data setting.", "human_title": "Robust Zero-Shot Cross-Domain Slot Filling with Example Values", "sys_gen": {"bart_base": "Robust Zero-Shot Slot Filling for Task-Oriented Dialog Systems", "bart_cnn": "Robust and Robust Slot Filling for Task-Oriented Dialog Systems with Zero-shot Modeling of Sem", "t5_small": "Learning Semantic Representations of Slots for Task-oriented Dialogue Systems", "gpt2": " Learning Semantic Representations of Slots", "pegasus_xsum": "Learning Semantic Representations of Slot Filling Models for Task-Oriented Dialog Systems"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.686, "bart_base_bertscore": 0.877, "bart_base_moverscore": 0.603, "bart_cnn_bartscore": -4.247, "bart_cnn_bertscore": 0.881, "bart_cnn_moverscore": 0.597, "bart_xsum_bartscore": -4.717, "bart_xsum_bertscore": 0.865, "bart_xsum_moverscore": 0.58, "t5_small_bartscore": -5.485, "t5_small_bertscore": 0.853, "t5_small_moverscore": 0.567, "gpt2_bartscore": -5.466, "gpt2_bertscore": 0.876, "gpt2_moverscore": 0.566, "pegasus_xsum_bartscore": -5.208, "pegasus_xsum_bertscore": 0.865, "pegasus_xsum_moverscore": 0.582}}, {"abstract": "Word sense induction (WSI) seeks to automatically discover the senses of a word in a corpus via unsupervised methods. We propose a sense-topic model for WSI, which treats sense and topic as two separate latent variables to be inferred jointly. Topics are informed by the entire document, while senses are informed by the local context surrounding the ambiguous word. We also discuss unsupervised ways of enriching the original corpus in order to improve model performance, including using neural word embeddings and external corpora to expand the context of each data instance. We demonstrate significant improvements over the previous state-of-the-art, achieving the best results reported to date on the SemEval-2013 WSI task.", "human_title": "A Sense-Topic Model for Word Sense Induction with Unsupervised Data Enrichment", "sys_gen": {"bart_base": "A Sense-Topic Model for Word Sense Induction", "bart_cnn": "Joint Sense-Topic Modeling for Unsupervised Word Sense Induction with Latent Variables and Neural Word Embedd", "bart_xsum": "A Joint Latent Variable Model for Unsupervised Word Sense Induction", "t5_small": "A Sense-topic Model for Word Sensitive Induction", "pegasus_xsum": "A Sense-topic Model for Word Sense Induction"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": -0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.356, "bart_base_bertscore": 0.928, "bart_base_moverscore": 0.645, "bart_cnn_bartscore": -3.905, "bart_cnn_bertscore": 0.922, "bart_cnn_moverscore": 0.678, "bart_xsum_bartscore": -2.395, "bart_xsum_bertscore": 0.942, "bart_xsum_moverscore": 0.706, "t5_small_bartscore": -2.605, "t5_small_bertscore": 0.919, "t5_small_moverscore": 0.681, "gpt2_bartscore": -3.545, "gpt2_bertscore": 0.933, "gpt2_moverscore": 0.661, "pegasus_xsum_bartscore": -2.882, "pegasus_xsum_bertscore": 0.923, "pegasus_xsum_moverscore": 0.664}}, {"abstract": "Rumours on social media exhibit complex temporal patterns. This paper develops a model of rumour prevalence using a point process, namely a log-Gaussian Cox process, to infer an underlying continuous temporal probabilistic model of post frequencies. To generalize over different rumours, we present a multi-task learning method parametrized by the text in posts which allows data statistics to be shared between groups of similar rumours. Our experiments demonstrate that our model outperforms several strong baseline methods for rumour frequency prediction evaluated on tweets from the 2014 Ferguson riots.", "human_title": "Point Process Modelling of Rumour Dynamics in Social Media", "sys_gen": {"bart_base": "A Probabilistic Model of rumour prevalence based on a Point Process", "bart_cnn": "A Probabilistic Model of Rumour Frequency Prediction Using Log-Gaussian Cox Processes and Multi-Task Learning in Social", "t5_small": "A Multi-Task Learning Model of rumour prevalence on social media", "gpt2": " Rumour Frequency Modeling Using Log-Gaussian Processes", "pegasus_xsum": "A Multi-Task Learning Approach to Predicting the Frequency of Rumours on Social Media"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 3.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 1.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.711, "bart_base_bertscore": 0.91, "bart_base_moverscore": 0.648, "bart_cnn_bartscore": -5.121, "bart_cnn_bertscore": 0.875, "bart_cnn_moverscore": 0.561, "bart_xsum_bartscore": -5.04, "bart_xsum_bertscore": 0.91, "bart_xsum_moverscore": 0.621, "t5_small_bartscore": -4.722, "t5_small_bertscore": 0.908, "t5_small_moverscore": 0.629, "gpt2_bartscore": -5.116, "gpt2_bertscore": 0.897, "gpt2_moverscore": 0.583, "pegasus_xsum_bartscore": -4.145, "pegasus_xsum_bertscore": 0.903, "pegasus_xsum_moverscore": 0.59}}, {"abstract": "We study agnostic active learning, where the goal is to learn a classifier in a prespecified hypothesis class interactively with as few label queries as possible, while making no assumptions on the true function generating the labels. The main algorithm for this problem is disagreement-based active learning, which has a high label requirement. Thus a major challenge is to find an algorithm which achieves better label complexity, is consistent in an agnostic setting, and applies to general classification problems. In this paper, we provide such an algorithm. Our solution is based on two novel contributions; first, a reduction from consistent active learning to confidence-rated prediction with guaranteed error, and second, a novel confidence-rated predictor.", "human_title": "Beyond Disagreement-Based Agnostic Active Learning", "sys_gen": {"bart_base": "Agnostic Active Learning with Confidence-Ranking Prediction", "bart_cnn": "Agnostic Active Learning: Confidence-Rate Prediction and Consistency of Label Complexity in an Agnostic Hypothesis", "bart_xsum": "Agnostic Active Learning with Confidence-rated Prediction", "t5_small": "Agnostic Active Learning with Disagreement-Based Models", "gpt2": " Agnostic Active Learning"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.49, "bart_base_bertscore": 0.89, "bart_base_moverscore": 0.634, "bart_cnn_bartscore": -4.343, "bart_cnn_bertscore": 0.861, "bart_cnn_moverscore": 0.555, "bart_xsum_bartscore": -5.061, "bart_xsum_bertscore": 0.882, "bart_xsum_moverscore": 0.618, "t5_small_bartscore": -3.747, "t5_small_bertscore": 0.901, "t5_small_moverscore": 0.642, "gpt2_bartscore": -4.666, "gpt2_bertscore": 0.896, "gpt2_moverscore": 0.635, "pegasus_xsum_bartscore": -5.06, "pegasus_xsum_bertscore": 0.887, "pegasus_xsum_moverscore": 0.607}}, {"abstract": "Deep reinforcement learning (RL) agents often fail to generalize to unseen environments (yet semantically similar to trained agents), particularly when they are trained on high-dimensional state spaces, such as images. In this paper, we propose a simple technique to improve a generalization ability of deep RL agents by introducing a randomized (convolutional) neural network that randomly perturbs input observations. It enables trained agents to adapt to new domains by learning robust features invariant across varied and randomized environments. Furthermore, we consider an inference method based on the Monte Carlo approximation to reduce the variance induced by this randomization. We demonstrate the superiority of our method across 2D CoinRun, 3D DeepMind Lab exploration and 3D robotics control tasks: it significantly outperforms various regularization and data augmentation methods for the same purpose. Code is available at github.com/pokaxpoka/netrand.", "human_title": "Network Randomization: A Simple Technique for Generalization in Deep Reinforcement Learning", "sys_gen": {"bart_base": "Randomization and Adaptation of Deep Reinforcement Learning", "bart_cnn": "Pokaxpoka: Randomized Deep Reinforcement Learning with Robust Features Invariant Across Diverse and Randomized Environments", "bart_xsum": "Randomized Deep Reinforcement Learning with Monte Carlo Inference", "t5_small": "A Randomized Neural Network for Deep Reinforcement Learning", "pegasus_xsum": "Randomized Convolutional Neural Networks for Deep Reinforcement Learning"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.811, "bart_base_bertscore": 0.934, "bart_base_moverscore": 0.62, "bart_cnn_bartscore": -5.838, "bart_cnn_bertscore": 0.863, "bart_cnn_moverscore": 0.596, "bart_xsum_bartscore": -3.839, "bart_xsum_bertscore": 0.909, "bart_xsum_moverscore": 0.615, "t5_small_bartscore": -3.876, "t5_small_bertscore": 0.932, "t5_small_moverscore": 0.626, "gpt2_bartscore": -3.511, "gpt2_bertscore": 0.917, "gpt2_moverscore": 0.622, "pegasus_xsum_bartscore": -3.273, "pegasus_xsum_bertscore": 0.911, "pegasus_xsum_moverscore": 0.604}}, {"abstract": "In this paper, we improve an unsupervised learning method using the ExpectationMaximization (EM) algorithm proposed by Nigam et al. for text classification problems in order to apply it to word sense disambiguation (WSD) problems. The improved method stops the EM algorithm at the optimum iteration number. To estimate that number, we propose two methods. In experiments, we solved 50 noun WSD problems in the Japanese Dictionary Task in SENSEVAL2. The score of our method is a match for the best public score of this task. Furthermore, our methods were confirmed to be effective also for verb WSD problems.", "human_title": "Unsupervised learning of word sense disambiguation rules by estimating an optimum iteration number in the EM algorithm", "sys_gen": {"bart_base": "Improving Unsupervised Learning for Noun Word Sense Disambiguation Problems", "bart_cnn": "Improving Word Sense Disambiguation Using ExpectationMaximization and EM Algorithm for Japanese Dictionary Task in Sense", "bart_xsum": "Unsupervised Word Sense Disambiguation Using Expectation Maximization Algorithm", "gpt2": " Improving Word Sense Disambiguation Using Expectation Maximization", "pegasus_xsum": "An Improved EM Method for Unsupervised Word Sense Disambiguation"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.383, "bart_base_bertscore": 0.898, "bart_base_moverscore": 0.58, "bart_cnn_bartscore": -4.909, "bart_cnn_bertscore": 0.874, "bart_cnn_moverscore": 0.592, "bart_xsum_bartscore": -3.487, "bart_xsum_bertscore": 0.895, "bart_xsum_moverscore": 0.602, "t5_small_bartscore": -2.947, "t5_small_bertscore": 0.899, "t5_small_moverscore": 0.573, "gpt2_bartscore": -3.873, "gpt2_bertscore": 0.88, "gpt2_moverscore": 0.579, "pegasus_xsum_bartscore": -3.302, "pegasus_xsum_bertscore": 0.898, "pegasus_xsum_moverscore": 0.59}}, {"abstract": "Machine learning promises methods that generalize well from finite labeled data. However, the brittleness of existing neural net approaches is revealed by notable failures, such as the existence of adversarial examples that are misclassified despite being nearly identical to a training example, or the inability of recurrent sequence-processing nets to stay on track without teacher forcing. We introduce a method, which we refer to as state reification, that involves modeling the distribution of hidden states over the training data and then projecting hidden states observed during testing toward this distribution. Our intuition is that if the network can remain in a familiar manifold of hidden space, subsequent layers of the net should be well trained to respond appropriately. We show that this state-reification method helps neural nets to generalize better, especially when labeled data are sparse, and also helps overcome the challenge of achieving robust generalization with adversarial training.", "human_title": "State-Reification Networks: Improving Generalization by Modeling the Distribution of Hidden Representations", "sys_gen": {"bart_base": "State Reification for Robust Generalization in Neural Networks", "bart_cnn": "State Reification for Robust Neural Net Generalization with Adversarial Training of Finite-Labeled Data via Hidden State", "t5_small": "State Reification for Neural Nets to Generalize", "gpt2": " State Reification for Neural Networks", "pegasus_xsum": "State Reification for Robust Neural Nets"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": 0.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.086, "bart_base_bertscore": 0.897, "bart_base_moverscore": 0.62, "bart_cnn_bartscore": -4.802, "bart_cnn_bertscore": 0.883, "bart_cnn_moverscore": 0.605, "bart_xsum_bartscore": -3.874, "bart_xsum_bertscore": 0.895, "bart_xsum_moverscore": 0.624, "t5_small_bartscore": -3.662, "t5_small_bertscore": 0.893, "t5_small_moverscore": 0.608, "gpt2_bartscore": -4.603, "gpt2_bertscore": 0.902, "gpt2_moverscore": 0.613, "pegasus_xsum_bartscore": -4.648, "pegasus_xsum_bertscore": 0.884, "pegasus_xsum_moverscore": 0.599}}, {"abstract": "We address fine-grained multilingual language identification: providing a language code for every token in a sentence, including codemixed text containing multiple languages. Such text is prevalent online, in documents, social media, and message boards. We show that a feed-forward network with a simple globally constrained decoder can accurately and rapidly label both codemixed and monolingual text in 100 languages and 100 language pairs. This model outperforms previously published multilingual approaches in terms of both accuracy and speed, yielding an 800x speed-up and a 19.5% averaged absolute gain on three codemixed datasets. It furthermore outperforms several benchmark systems on monolingual language identification.", "human_title": "A Fast, Compact, Accurate Model for Language Identification of Codemixed Text", "sys_gen": {"bart_base": "Multilingual Language Identification with a Global Constrained Decoder", "bart_xsum": "Fine-Grained Multilingual Language Identification with a Feed-Forward Network", "t5_small": "Multilingual Language Identification with Feed-forward Networks", "gpt2": " Fine-Grained Multilingual Language Identification", "pegasus_xsum": "Fine-Grained Multilingual Language Identification"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.27, "bart_base_bertscore": 0.869, "bart_base_moverscore": 0.57, "bart_cnn_bartscore": -3.951, "bart_cnn_bertscore": 0.886, "bart_cnn_moverscore": 0.603, "bart_xsum_bartscore": -4.77, "bart_xsum_bertscore": 0.877, "bart_xsum_moverscore": 0.581, "t5_small_bartscore": -5.632, "t5_small_bertscore": 0.874, "t5_small_moverscore": 0.569, "gpt2_bartscore": -5.562, "gpt2_bertscore": 0.873, "gpt2_moverscore": 0.563, "pegasus_xsum_bartscore": -3.996, "pegasus_xsum_bertscore": 0.869, "pegasus_xsum_moverscore": 0.56}}, {"abstract": "We propose a generalized bootstrapping algorithm in which categories are described by relevant seed features. Our method introduces two unsupervised steps that improve the initial categorization step of the bootstrapping scheme: (i) using Latent Semantic space to obtain a generalized similarity measure between instances and features, and (ii) the Gaussian Mixture algorithm, to obtain uniform classification probabilities for unlabeled examples. The algorithm was evaluated on two Text Categorization tasks and obtained state-of-theart performance using only the category names as initial seeds.", "human_title": "Investigating Unsupervised Learning for Text Categorization Bootstrapping", "sys_gen": {"bart_base": "Unsupervised Bootstrapping of Text Categorization Using Latent Semantic Space", "bart_cnn": "A Generalized Bootstrapping Algorithm for Text Categorization Using Latent Semantic Space and Application to Unsupervised", "bart_xsum": "Unsupervised Bootstrapping of Text Categories Using Latent Semantic Space and Gaussian Mixture", "t5_small": "A Generalized Bootstrapping Algorithm", "gpt2": " Generalized Bootstrapping for Text Categorization"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.333, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.814, "bart_base_bertscore": 0.915, "bart_base_moverscore": 0.623, "bart_cnn_bartscore": -4.31, "bart_cnn_bertscore": 0.887, "bart_cnn_moverscore": 0.583, "bart_xsum_bartscore": -4.343, "bart_xsum_bertscore": 0.886, "bart_xsum_moverscore": 0.579, "t5_small_bartscore": -4.858, "t5_small_bertscore": 0.871, "t5_small_moverscore": 0.576, "gpt2_bartscore": -3.261, "gpt2_bertscore": 0.915, "gpt2_moverscore": 0.662, "pegasus_xsum_bartscore": -4.11, "pegasus_xsum_bertscore": 0.891, "pegasus_xsum_moverscore": 0.618}}, {"abstract": "Datasets annotated with semantic roles are an important prerequisite to developing highperformance role labeling systems. Unfortunately, the reliance on manual annotations, which are both difficult and highly expensive to produce, presents a major obstacle to the widespread application of these systems across different languages and text genres. In this paper we describe a method for inducing the semantic roles of verbal arguments directly from unannotated text. We formulate the role induction problem as one of detecting alternations and finding a canonical syntactic form for them. Both steps are implemented in a novel probabilistic model, a latent-variable variant of the logistic classifier. Our method increases the purity of the induced role clusters by a wide margin over a strong baseline.", "human_title": "Unsupervised Induction of Semantic Roles", "sys_gen": {"bart_base": "Inducing Semantic Roles from Text for Semantic Role Labeling", "bart_xsum": "A Probabilistic Model for Semantic Role Induction from Unannotated Text", "t5_small": "Inducing Semantic Role Clusters with Manual Annotations", "gpt2": " Inducing Semantic Roles from Unannotated Text", "pegasus_xsum": "Inducing Semantic Roles of Verbal Arguments from Unannotated Text"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 3.0, "bart_base_bws": -1.0, "bart_xsum_selected_best": 3.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 1.0, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.042, "bart_base_bertscore": 0.911, "bart_base_moverscore": 0.621, "bart_cnn_bartscore": -4.2, "bart_cnn_bertscore": 0.896, "bart_cnn_moverscore": 0.593, "bart_xsum_bartscore": -4.055, "bart_xsum_bertscore": 0.907, "bart_xsum_moverscore": 0.621, "t5_small_bartscore": -4.484, "t5_small_bertscore": 0.903, "t5_small_moverscore": 0.614, "gpt2_bartscore": -4.941, "gpt2_bertscore": 0.902, "gpt2_moverscore": 0.627, "pegasus_xsum_bartscore": -3.878, "pegasus_xsum_bertscore": 0.912, "pegasus_xsum_moverscore": 0.636}}, {"abstract": "In a recent LastWords column (Sproat 2010), Richard Sproat laments the reviewing practices of \u201cgeneral science journals\u201d after dismissing our work and that of Lee, Jonathan, and Ziman (2010) as \u201cuseless\u201d and \u201ctrivially and demonstrably wrong.\u201d Although we expect such categorical statements to have already raised some red flags in the minds of readers, we take this opportunity to present a more accurate description of our work, point out the straw man argument used in Sproat (2010), and provide a more complete characterization of the Indus script debate. A separate response by Lee and colleagues in this issue provides clarification of issues not covered here.", "human_title": "Commentary and Discussion: Entropy, the Indus Script, and Language: A Reply to R. Sproat", "sys_gen": {"bart_base": "Last Words: An Analysis of the Reviewing Practice of General Science Journal", "bart_cnn": "LastWords: The LastWords Column (Sproat 2010) - An Accurate Description of the Indus Script Debate in Science", "t5_small": "The Indus script debate in LastWords", "gpt2": " Last Words: The Last Words Newsletter", "pegasus_xsum": "Last Words: Correcting the Errors of Richard Sproat"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 1.0, "bart_base_bws": 0.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 0.0, "bart_cnn_bws": 0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.278, "bart_base_bertscore": 0.862, "bart_base_moverscore": 0.541, "bart_cnn_bartscore": -4.753, "bart_cnn_bertscore": 0.87, "bart_cnn_moverscore": 0.583, "bart_xsum_bartscore": -4.236, "bart_xsum_bertscore": 0.881, "bart_xsum_moverscore": 0.556, "t5_small_bartscore": -4.687, "t5_small_bertscore": 0.885, "t5_small_moverscore": 0.544, "gpt2_bartscore": -5.246, "gpt2_bertscore": 0.848, "gpt2_moverscore": 0.512, "pegasus_xsum_bartscore": -4.506, "pegasus_xsum_bertscore": 0.864, "pegasus_xsum_moverscore": 0.52}}, {"abstract": "We take up the scientific question of what determines the preferred order of adjectives in English, in phrases such as big blue box where multiple adjectives modify a following noun. We implement and test four quantitative theories, all of which are theoretically motivated in terms of efficiency in human language production and comprehension. The four theories we test are subjectivity (Scontras et al., 2017), information locality (Futrell, 2019), integration cost (Dyer, 2017), and information gain, which we introduce. We evaluate theories based on their ability to predict orders of unseen adjectives in hand-parsed and automatically-parsed dependency treebanks. We find that subjectivity, information locality, and information gain are all strong predictors, with some evidence for a two-factor account, where subjectivity and information gain reflect a factor involving semantics, and information locality reflects collocational preferences.", "human_title": "What determines the order of adjectives in English? Comparing efficiency-based theories using dependency treebanks", "sys_gen": {"bart_base": "Predicting Order of Unseen Adjectives in English", "bart_cnn": "Subjectivity, Information Gain, and Lexical Complexity: The Case of Adjective Ordering in English-to-", "bart_xsum": "What determines the order of adjectives in English phrases such as big blue box?", "t5_small": "Subjectivity, Information Locality, and Information Gain in English", "pegasus_xsum": "What Makes for Good Adjectives? A Case Study in English"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 3.0, "t5_small_bws": -1.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.156, "bart_base_bertscore": 0.888, "bart_base_moverscore": 0.58, "bart_cnn_bartscore": -4.436, "bart_cnn_bertscore": 0.853, "bart_cnn_moverscore": 0.589, "bart_xsum_bartscore": -2.396, "bart_xsum_bertscore": 0.902, "bart_xsum_moverscore": 0.596, "t5_small_bartscore": -4.726, "t5_small_bertscore": 0.861, "t5_small_moverscore": 0.555, "gpt2_bartscore": -2.697, "gpt2_bertscore": 0.919, "gpt2_moverscore": 0.629, "pegasus_xsum_bartscore": -2.621, "pegasus_xsum_bertscore": 0.903, "pegasus_xsum_moverscore": 0.6}}, {"abstract": "We describe a new algorithm for computing a Nash equilibrium in graphical games, a compact representation for multi-agent systems that we introduced in previous work. The algorithm is the first to compute equilibria both efficiently and exactly for a non-trivial class of graphical games.", "human_title": "An Efficient, Exact Algorithm for Solving Tree-Structured Graphical Games", "sys_gen": {"bart_cnn": "Nash Equilibria in Multi-Agent Systems: A Nash Equilibrium Algorithm for Graphical Games and Applications to Multi", "bart_xsum": "Efficient Nash Equilibria for Multi-Agent Games", "t5_small": "A Compact Algorithm for Computing Nash Equilibria in Graphical Games", "gpt2": " Computing Equilibria in Graphical Games with Compact Representations", "pegasus_xsum": "Computing Nash Equilibria in Multi-Agent Games"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 1.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.886, "bart_base_bertscore": 0.873, "bart_base_moverscore": 0.584, "bart_cnn_bartscore": -4.244, "bart_cnn_bertscore": 0.874, "bart_cnn_moverscore": 0.592, "bart_xsum_bartscore": -4.262, "bart_xsum_bertscore": 0.895, "bart_xsum_moverscore": 0.606, "t5_small_bartscore": -4.546, "t5_small_bertscore": 0.891, "t5_small_moverscore": 0.651, "gpt2_bartscore": -4.491, "gpt2_bertscore": 0.891, "gpt2_moverscore": 0.593, "pegasus_xsum_bartscore": -5.308, "pegasus_xsum_bertscore": 0.863, "pegasus_xsum_moverscore": 0.565}}, {"abstract": "We investigate a new optimization problem involving minimizing the Ratio of two Submodular (RS) functions. We argue that this problem occurs naturally in several real world applications. We then show the connection between this problem and several related problems including minimizing the difference between submodular functions (Iyer & Bilmes, 2012b; Narasimhan & Bilmes, 2005), and to submodular optimization subject to submodular constraints (Iyer & Bilmes, 2013). We show that RS optimization can be solved with bounded approximation factors. We also provide a hardness bound and show that our tightest algorithm matches the lower bound up to a log factor. Finally, we empirically demonstrate the performance and good scalability properties of our algorithms.", "human_title": "Algorithms for Optimizing the Ratio of Submodular Functions", "sys_gen": {"bart_base": "Submodular Ratio Minimization via Bounded Approximation", "bart_cnn": "Tight Bounds for Minimizing Ratio of Two Submodular Functions: Tightness Bounds and Scalable Algorith", "bart_xsum": "Minimizing the Ratio of Two Submodular Functions", "gpt2": " Submodular Optimization with Bounded Approximation", "pegasus_xsum": "Bridging the Gap Between Submodular Functions: A New Problem and Algorithms"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.229, "bart_base_bertscore": 0.909, "bart_base_moverscore": 0.612, "bart_cnn_bartscore": -4.028, "bart_cnn_bertscore": 0.915, "bart_cnn_moverscore": 0.617, "bart_xsum_bartscore": -2.728, "bart_xsum_bertscore": 0.948, "bart_xsum_moverscore": 0.67, "t5_small_bartscore": -2.432, "t5_small_bertscore": 0.947, "t5_small_moverscore": 0.659, "gpt2_bartscore": -4.823, "gpt2_bertscore": 0.902, "gpt2_moverscore": 0.595, "pegasus_xsum_bartscore": -3.547, "pegasus_xsum_bertscore": 0.925, "pegasus_xsum_moverscore": 0.622}}, {"abstract": "This paper presents a first-order logic learning approach to determine rhetorical relations between discourse segments. Beyond linguistic cues and lexical information, our approach exploits compositional semantics and segment discourse structure data. We report a statistically significant improvement in classifying relations over attribute-value learning paradigms such as Decision Trees, RIPPER and Naive Bayes. For discourse parsing, our modified shift-reduce parsing model that uses our relation classifier significantly outperforms a right-branching majority-class baseline.", "human_title": "An effective Discourse Parser that uses Rich Linguistic Information", "sys_gen": {"bart_base": "Exploiting Compositional Semantics and Discourse Structure Data for Rhetorical Relations", "bart_cnn": "A Logic Learning Approach to Determine Rhetorical Relations between Discourse Segments with Compositional Semantics and Discourse Structure", "bart_xsum": "First-Order Logic Learning for Discourse Relation Classification", "t5_small": "First-Order Logical Learning for Rhetorical Relation Classification", "gpt2": " Modeling Discourse Structure with Compositional Semantics"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 1.0, "t5_small_bws": -0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.549, "bart_base_bertscore": 0.881, "bart_base_moverscore": 0.581, "bart_cnn_bartscore": -5.105, "bart_cnn_bertscore": 0.882, "bart_cnn_moverscore": 0.572, "bart_xsum_bartscore": -6.538, "bart_xsum_bertscore": 0.888, "bart_xsum_moverscore": 0.577, "t5_small_bartscore": -5.535, "t5_small_bertscore": 0.892, "t5_small_moverscore": 0.579, "gpt2_bartscore": -5.262, "gpt2_bertscore": 0.88, "gpt2_moverscore": 0.585, "pegasus_xsum_bartscore": -5.768, "pegasus_xsum_bertscore": 0.88, "pegasus_xsum_moverscore": 0.564}}, {"abstract": "Website privacy policies represent the single most important source of information for users to gauge how their personal data are collected, used and shared by companies. However, privacy policies are often vague and people struggle to understand the content. Their opaqueness poses a significant challenge to both users and policy regulators. In this paper, we seek to identify vague content in privacy policies. We construct the first corpus of human-annotated vague words and sentences and present empirical studies on automatic vagueness detection. In particular, we investigate context-aware and context-agnostic models for predicting vague words, and explore auxiliary-classifier generative adversarial networks for characterizing sentence vagueness. Our experimental results demonstrate the effectiveness of proposed approaches. Finally, we provide suggestions for resolving vagueness and improving the usability of privacy policies.", "human_title": "Automatic Detection of Vague Words and Sentences in Privacy Policies", "sys_gen": {"bart_base": "Identifying Inconsistently Grown Words and Sentences in Privacy Policies", "bart_cnn": "Identifying vague content in private policies for detecting vague words and sentences using auxiliary-classifier generative adversarial networks.", "t5_small": "Context-Aware and Context-Agnostic Models for Detecting Vague Content in Privacy Policies", "gpt2": " Identifying Discrete Words and Sentences in Privacy Policies", "pegasus_xsum": "Detecting and Improving the User Experience of Privacy Policies"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "t5_small_selected_best": 3.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 1.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.858, "bart_base_bertscore": 0.898, "bart_base_moverscore": 0.643, "bart_cnn_bartscore": -5.068, "bart_cnn_bertscore": 0.876, "bart_cnn_moverscore": 0.604, "bart_xsum_bartscore": -3.87, "bart_xsum_bertscore": 0.906, "bart_xsum_moverscore": 0.609, "t5_small_bartscore": -4.233, "t5_small_bertscore": 0.905, "t5_small_moverscore": 0.619, "gpt2_bartscore": -4.717, "gpt2_bertscore": 0.908, "gpt2_moverscore": 0.635, "pegasus_xsum_bartscore": -4.259, "pegasus_xsum_bertscore": 0.885, "pegasus_xsum_moverscore": 0.59}}, {"abstract": "We study a novel architecture for syntactic SMT. In contrast to the dominant approach in the literature, the system does not rely on translation rules, but treat translation as an unconstrained target sentence generation task, using soft features to capture lexical and syntactic correspondences between the source and target languages. Target syntax features and bilingual translation features are trained consistently in a discriminative model. Experiments using the IWSLT 2010 dataset show that the system achieves BLEU comparable to the state-of-the-art syntactic SMT systems.", "human_title": "Syntactic SMT Using a Discriminative Text Generation Model", "sys_gen": {"bart_base": "A Discriminative Target Sentence Generation System for Syntactic Statistical Machine Translation", "bart_cnn": "A Novel Architecture for Syntactic Machine Translation with BLEU-based Syntax Features and Bilingual Translation Features from IW", "bart_xsum": "Syntactic SMT with Bilingual Translation Features", "gpt2": " Syntactic Syntactic SMT with Soft Features", "pegasus_xsum": "Syntactic Machine Translation with Soft Syntax Features"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.667, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 3.0, "gpt2_bws": -1.0, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.112, "bart_base_bertscore": 0.909, "bart_base_moverscore": 0.635, "bart_cnn_bartscore": -5.466, "bart_cnn_bertscore": 0.842, "bart_cnn_moverscore": 0.553, "bart_xsum_bartscore": -3.38, "bart_xsum_bertscore": 0.91, "bart_xsum_moverscore": 0.605, "t5_small_bartscore": -2.879, "t5_small_bertscore": 0.912, "t5_small_moverscore": 0.607, "gpt2_bartscore": -4.378, "gpt2_bertscore": 0.899, "gpt2_moverscore": 0.614, "pegasus_xsum_bartscore": -4.87, "pegasus_xsum_bertscore": 0.869, "pegasus_xsum_moverscore": 0.588}}, {"abstract": "Distant supervision usually utilizes only unlabeled data and existing knowledge bases to learn relation extraction models. However, in some cases a small amount of human labeled data is available. In this paper, we demonstrate how a state-of-theart multi-instance multi-label model can be modified to make use of these reliable sentence-level labels in addition to the relation-level distant supervision from a database. Experiments show that our approach achieves a statistically significant increase of 13.5% in F-score and 37% in area under the precision recall curve.", "human_title": "Infusion of Labeled Data into Distant Supervision for Relation Extraction", "sys_gen": {"bart_base": "Relation-Level Distant Supervision with Relation Extraction Models", "bart_cnn": "Multi-Instance Distant Supervision for Relation Extraction with Application to Sentence-Level Relation Level Relation Classification", "bart_xsum": "Learning Relation Extraction from Distant Supervision with Multi-Instance Multi-label Models", "t5_small": "Multi-Instance Multi-Label Models for Distant Supervision", "gpt2": " Improving Distant Supervision for Relation Extraction"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 1.0, "human_title_bws": 0.0, "bart_base_selected_best": 0.0, "bart_base_selected_worst": 2.0, "bart_base_bws": -0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 1.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 2.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 2.0, "t5_small_bws": -0.667, "gpt2_selected_best": 3.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -3.231, "bart_base_bertscore": 0.916, "bart_base_moverscore": 0.619, "bart_cnn_bartscore": -3.945, "bart_cnn_bertscore": 0.896, "bart_cnn_moverscore": 0.593, "bart_xsum_bartscore": -3.875, "bart_xsum_bertscore": 0.921, "bart_xsum_moverscore": 0.639, "t5_small_bartscore": -4.285, "t5_small_bertscore": 0.896, "t5_small_moverscore": 0.604, "gpt2_bartscore": -3.314, "gpt2_bertscore": 0.919, "gpt2_moverscore": 0.638, "pegasus_xsum_bartscore": -5.141, "pegasus_xsum_bertscore": 0.89, "pegasus_xsum_moverscore": 0.597}}, {"abstract": "Information Gain is a well-known and empirically proven method for high-dimensional feature selection. We found that it and other existing methods failed to produce good results on an industrial text classification problem. On investigating the root cause, we find that a large class of feature scoring methods suffers a pitfall: they can be blinded by a surplus of strongly predictive features for some classes, while largely ignoring features needed to discriminate difficult classes. In this paper we demonstrate this pitfall hurts performance even for a relatively uniform text classification task. Based on this understanding, we present solutions inspired by round-robin scheduling that avoid this pitfall, without resorting to costly wrapper methods. Empirical evaluation on 19 datasets shows substantial improvements.", "human_title": "A Pitfall and Solution in Multi-Class Feature Selection for Text Classification ", "sys_gen": {"bart_base": "Applying Round-robin Scheduling to Information Gain for Text Classification", "bart_cnn": "Information Gain: High-dimensional feature selection for text classification using round-robin Scheduling and Pitfall Problem Solving Problems", "bart_xsum": "Round-robin Scheduling for High-Dimensional Feature Selection in Text Classification", "t5_small": "Round-robin Scheduling for High-dimensional Feature Selection", "gpt2": " A Pitfall-Free Approach to Feature Selection for Text Classification"}, "human_eval": {"human_title_selected_best": 2.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.667, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 0.0, "bart_xsum_selected_worst": 2.0, "bart_xsum_bws": -0.667, "t5_small_selected_best": 0.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.0, "gpt2_selected_best": 2.0, "gpt2_selected_worst": 1.0, "gpt2_bws": 0.333}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.994, "bart_base_bertscore": 0.877, "bart_base_moverscore": 0.594, "bart_cnn_bartscore": -4.982, "bart_cnn_bertscore": 0.882, "bart_cnn_moverscore": 0.627, "bart_xsum_bartscore": -4.635, "bart_xsum_bertscore": 0.881, "bart_xsum_moverscore": 0.603, "t5_small_bartscore": -5.013, "t5_small_bertscore": 0.877, "t5_small_moverscore": 0.588, "gpt2_bartscore": -3.43, "gpt2_bertscore": 0.934, "gpt2_moverscore": 0.66, "pegasus_xsum_bartscore": -4.683, "pegasus_xsum_bertscore": 0.876, "pegasus_xsum_moverscore": 0.561}}, {"abstract": "Knowledge bases are useful resources for many natural language processing tasks, however, they are far from complete. In this paper, we define a novel entity representation as a mixture of its neighborhood in the knowledge base and apply this technique on TransE\u2014a well-known embedding model for knowledge base completion. Experimental results show that the neighborhood information significantly helps to improve the results of the TransE, leading to better performance than obtained by other state-of-the-art embedding models on three benchmark datasets for triple classification, entity prediction and relation prediction tasks.", "human_title": "Neighborhood Mixture Model for Knowledge Base Completion", "sys_gen": {"bart_cnn": "Neighborhood Representations for Knowledge Base Completion: A Mixture of Its Neighborhood in the Knowledge Base and TransE Model", "bart_xsum": "Neighborhood Information Improves TransE: A Knowledge Base Completion Model", "t5_small": "TransE: Embedding Neighborhoods for Knowledge Base completion", "gpt2": " Entity Representations for Knowledge Base Completion", "pegasus_xsum": "A Novel Entity Representation as a mixture of its neighborhood in knowledge base"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 1.0, "gpt2_bws": -0.333, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 2.0, "pegasus_xsum_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.174, "bart_base_bertscore": 0.89, "bart_base_moverscore": 0.599, "bart_cnn_bartscore": -4.305, "bart_cnn_bertscore": 0.905, "bart_cnn_moverscore": 0.599, "bart_xsum_bartscore": -3.579, "bart_xsum_bertscore": 0.931, "bart_xsum_moverscore": 0.669, "t5_small_bartscore": -3.633, "t5_small_bertscore": 0.913, "t5_small_moverscore": 0.679, "gpt2_bartscore": -3.649, "gpt2_bertscore": 0.93, "gpt2_moverscore": 0.695, "pegasus_xsum_bartscore": -5.568, "pegasus_xsum_bertscore": 0.88, "pegasus_xsum_moverscore": 0.591}}, {"abstract": "Interacting with relational databases through natural language helps users with any background easily query and analyze a vast amount of data. This requires a system that understands users' questions and converts them to SQL queries automatically. In this paper, we present a novel approach TypeSQL which formats the problem as a slot filling task in a more reasonable way. In addition, TypeSQL utilizes type information to better understand rare entities and numbers in the questions. We experiment this idea on the WikiSQL dataset and outperform the prior art by 6% in much shorter time. We also show that accessing the content of databases can significantly improve the performance when users' queries are not well-formed. TypeSQL can reach 82.6% accuracy, a 17.5% absolute improvement compared to the previous content-sensitive model.", "human_title": "TypeSQL: Knowledge-Based Type-Aware Neural Text-to-SQL Generation", "sys_gen": {"bart_base": "TypeSQL: A Slot Filling Approach to Interacting with Relational Databases", "bart_cnn": "TypeSQL: Slot Filling for Relational Database Query Retrieval via Schema Type-SQL Formalization and Information", "t5_small": "TypeSQL: A Slot Filling Approach to Interacting with Relational Databases", "gpt2": " TypeSQL: A Slot Filling Approach for Relational Databases", "pegasus_xsum": "Type Interact: Learning to Interact with Natural Language via Slot Filling and Type Information"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_base_selected_best": 3.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 1.0, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 2.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.667, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.0, "pegasus_xsum_selected_best": 0.0, "pegasus_xsum_selected_worst": 3.0, "pegasus_xsum_bws": -1.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.31, "bart_base_bertscore": 0.882, "bart_base_moverscore": 0.602, "bart_cnn_bartscore": -5.041, "bart_cnn_bertscore": 0.872, "bart_cnn_moverscore": 0.595, "bart_xsum_bartscore": -4.813, "bart_xsum_bertscore": 0.876, "bart_xsum_moverscore": 0.601, "t5_small_bartscore": -4.337, "t5_small_bertscore": 0.879, "t5_small_moverscore": 0.6, "gpt2_bartscore": -5.032, "gpt2_bertscore": 0.883, "gpt2_moverscore": 0.585, "pegasus_xsum_bartscore": -4.858, "pegasus_xsum_bertscore": 0.866, "pegasus_xsum_moverscore": 0.575}}, {"abstract": "Constituent parsing is typically modeled by a chart-based algorithm under probabilistic context-free grammars or by a transition-based algorithm with rich features. Previous models rely heavily on richer syntactic information through lexicalizing rules, splitting categories, or memorizing long histories. However enriched models incur numerous parameters and sparsity issues, and are insufficient for capturing various syntactic phenomena. We propose a neural network structure that explicitly models the unbounded history of actions performed on the stack and queue employed in transition-based parsing, in addition to the representations of partially parsed tree structure. Our transition-based neural constituent parsing achieves performance comparable to the state-of-the-art parsers, demonstrating F1 score of 90.68% for English and 84.33% for Chinese, without reranking, feature templates or additional data to train model parameters.", "human_title": "Transition-based Neural Constituent Parsing", "sys_gen": {"bart_base": "Transition-Based Neural Constituent Parsing with Neural Network Structure", "bart_cnn": "Transition-based Neural Constituent Parsing with Rich Syntactic Structures and Memory of Long Heterosyllabic", "t5_small": "Transition-based Constituent Parsing with Neural Networks", "gpt2": " Neural Constituent Parsing with Rich Syntactic Features", "pegasus_xsum": "Transition-based Neural Constituent Parsing with Stack and Queue"}, "human_eval": {"human_title_selected_best": 3.0, "human_title_selected_worst": 0.0, "human_title_bws": 1.0, "bart_base_selected_best": 1.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.333, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 0.0, "t5_small_bws": 0.333, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667, "pegasus_xsum_selected_best": 1.0, "pegasus_xsum_selected_worst": 1.0, "pegasus_xsum_bws": 0.0}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -2.261, "bart_base_bertscore": 0.975, "bart_base_moverscore": 0.764, "bart_cnn_bartscore": -3.253, "bart_cnn_bertscore": 0.924, "bart_cnn_moverscore": 0.599, "bart_xsum_bartscore": -0.681, "bart_xsum_bertscore": 0.999, "bart_xsum_moverscore": 1.0, "t5_small_bartscore": -2.552, "t5_small_bertscore": 0.98, "t5_small_moverscore": 0.771, "gpt2_bartscore": -3.442, "gpt2_bertscore": 0.938, "gpt2_moverscore": 0.703, "pegasus_xsum_bartscore": -1.842, "pegasus_xsum_bertscore": 0.977, "pegasus_xsum_moverscore": 0.829}}, {"abstract": "Distributed stochastic gradient descent is an important subroutine in distributed learning. A setting of particular interest is when the clients are mobile devices, where two important concerns are communication efficiency and the privacy of the clients. Several recent works have focused on reducing the communication cost or introducing privacy guarantees, but none of the proposed communication efficient methods are known to be privacy preserving and none of the known privacy mechanisms are known to be communication efficient. To this end, we study algorithms that achieve both communication efficiency and differential privacy. For d variables and n \u21e1 d clients, the proposed method uses O(log log(nd)) bits of communication per client per coordinate and ensures constant privacy. We also improve previous analysis of the Binomial mechanism showing that it achieves nearly the same utility as the Gaussian mechanism, while requiring fewer representation bits, which can be of independent interest.", "human_title": "cpSGD: Communication-efficient and differentially-private distributed SGD", "sys_gen": {"bart_base": "Communication Efficiency and Differential Privacy for Distributed Stochastic Gradient Descent", "bart_cnn": "Communication Efficiency and Differential Privacy in Distributed Stochastic Gradient Descent using O(log Log(nd))", "bart_xsum": "Communication Efficient Distributed Stochastic Gradient Descent for Mobile Devices", "t5_small": "Communication Efficiency and Differential Privacy in Distributed Learning.", "gpt2": " Communication Efficient Distributed Gradient Descent"}, "human_eval": {"human_title_selected_best": 1.0, "human_title_selected_worst": 0.0, "human_title_bws": 0.333, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 1.0, "bart_cnn_selected_worst": 2.0, "bart_cnn_bws": -0.333, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 1.0, "bart_xsum_bws": 0.0, "t5_small_selected_best": 1.0, "t5_small_selected_worst": 1.0, "t5_small_bws": 0.0, "gpt2_selected_best": 0.0, "gpt2_selected_worst": 2.0, "gpt2_bws": -0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -5.074, "bart_base_bertscore": 0.854, "bart_base_moverscore": 0.586, "bart_cnn_bartscore": -5.294, "bart_cnn_bertscore": 0.854, "bart_cnn_moverscore": 0.564, "bart_xsum_bartscore": -4.71, "bart_xsum_bertscore": 0.857, "bart_xsum_moverscore": 0.59, "t5_small_bartscore": -4.318, "t5_small_bertscore": 0.877, "t5_small_moverscore": 0.58, "gpt2_bartscore": -5.275, "gpt2_bertscore": 0.859, "gpt2_moverscore": 0.593, "pegasus_xsum_bartscore": -4.439, "pegasus_xsum_bertscore": 0.881, "pegasus_xsum_moverscore": 0.596}}, {"abstract": "At AAAI\u201907, Zinkevich, Bowling and Burch introduced the Range of Skill measure of a two-player game and used it as a parameter in the analysis of the running time of an algorithm for finding approximate solutions to such games. They suggested that the Range of Skill of a typical natural game is a small number, but only gave heuristic arguments for this. In this paper, we provide the first methods for rigorously estimating the Range of Skill of a given game. We provide some general, asymptotic bounds that imply that the Range of Skill of a perfectly balanced game tree is almost exponential in its size (and doubly exponential in its depth). We also provide techniques that yield concrete bounds for unbalanced game trees and apply these to estimate the Range of Skill of Tic-Tac-Toe and Heads-Up Limit Texas Hold\u2019em Poker. In particular, we show that the Range of Skill of Tic-Tac-Toe is more than 100,000.", "human_title": "On Range of Skill", "sys_gen": {"bart_base": "Estimating the Range of Skill of a Natural Game Tree", "bart_cnn": "Estimating the Range of Skill in a Competitive Two-Player Game: Some Asymptotic Bounds and General Asym", "bart_xsum": "Estimating the Range of Skill of a Natural Game", "gpt2": " Estimating the Range of Skill of a Two-Player Game", "pegasus_xsum": "On the Range of Skill of Natural Games"}, "human_eval": {"human_title_selected_best": 0.0, "human_title_selected_worst": 3.0, "human_title_bws": -1.0, "bart_base_selected_best": 2.0, "bart_base_selected_worst": 0.0, "bart_base_bws": 0.667, "bart_cnn_selected_best": 0.0, "bart_cnn_selected_worst": 3.0, "bart_cnn_bws": -1.0, "bart_xsum_selected_best": 1.0, "bart_xsum_selected_worst": 0.0, "bart_xsum_bws": 0.333, "gpt2_selected_best": 1.0, "gpt2_selected_worst": 0.0, "gpt2_bws": 0.333, "pegasus_xsum_selected_best": 2.0, "pegasus_xsum_selected_worst": 0.0, "pegasus_xsum_bws": 0.667}, "num_annotators": 3, "auto_eval": {"bart_base_bartscore": -4.034, "bart_base_bertscore": 0.925, "bart_base_moverscore": 0.571, "bart_cnn_bartscore": -4.548, "bart_cnn_bertscore": 0.874, "bart_cnn_moverscore": 0.515, "bart_xsum_bartscore": -3.812, "bart_xsum_bertscore": 0.932, "bart_xsum_moverscore": 0.576, "t5_small_bartscore": -4.012, "t5_small_bertscore": 0.929, "t5_small_moverscore": 0.583, "gpt2_bartscore": -4.218, "gpt2_bertscore": 0.914, "gpt2_moverscore": 0.575, "pegasus_xsum_bartscore": -3.963, "pegasus_xsum_bertscore": 0.946, "pegasus_xsum_moverscore": 0.619}}]